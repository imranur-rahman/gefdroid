<?xml version='1.0' encoding='UTF-8'?>
<gexf xmlns='qianniao918@qq.com' version='1.2' xmlns:viz='http://www.gexf.net/1.2draft/viz'> xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.gexf.net/1.2draft http://www.gexf.net/1.2draft/gexf.xsd'>
	<meta lastmodifieddate='2014-9-21'>
		<creator>FanMing</creator>
		<description>An Android APK Method SCN!</description>
	</meta>
	<graph mode='static' defaultedgettype='directed'>
		<nodes>
		<node id='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object' label='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.HowToScreen: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: saveState(android.os.Bundle)void' label='com.masshabit.squibble.Screen: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: clinit()void' label='com.masshabit.squibble.free.activity.e.o: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' label='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: showDialog(java.lang.Integer)void' label='com.masshabit.common.Environment: showDialog(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: distance(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.Vector2: distance(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: getAssets()android.content.res.AssetManager' label='com.masshabit.squibble.MainActivity: getAssets()android.content.res.AssetManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: equals(java.lang.Object)boolean' label='com.masshabit.common.physics.Vector2: equals(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: velX()F' label='com.masshabit.common.physics.CircleParticle: velX()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void' label='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: nextScreen()void' label='com.masshabit.squibble.Game: nextScreen()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.Abstract: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: size()java.lang.Integer' label='java.util.Map: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: toArray([Ljava.lang.Object)[Ljava.lang.Object' label='java.util.Vector: toArray([Ljava.lang.Object)[Ljava.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: isStationary()boolean' label='com.masshabit.squibble.WorldMapPlayer: isStationary()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: reset()void' label='com.masshabit.squibble.Profile: reset()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: readString()java.lang.String' label='android.os.Parcel: readString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.f: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.f: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.c: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.c: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: b(boolean)boolean' label='com.masshabit.squibble.free.activity.h: b(boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.o: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.o: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: c()void' label='com.masshabit.squibble.free.activity.d.e: c()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeDouble(D)void' label='java.io.DataOutputStream: writeDouble(D)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeLong(J)void' label='android.os.Parcel: writeLong(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: setFinger(com.masshabit.common.physics.Vector2)void' label='com.masshabit.squibble.HowToScreen: setFinger(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: unlockChildren()void' label='com.masshabit.squibble.WorldMapNode: unlockChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.BitmapFactory: decodeFile(java.lang.String)android.graphics.Bitmap' label='android.graphics.BitmapFactory: decodeFile(java.lang.String)android.graphics.Bitmap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: getVelocity(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: getVelocity(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.g: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.g: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MenuItem: setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)android.view.MenuItem' label='android.view.MenuItem: setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)android.view.MenuItem'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: getAction()java.lang.String' label='android.content.Intent: getAction()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.v: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.v: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: update(F)void' label='com.masshabit.squibble.Screen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.RectF: contains(FF)boolean' label='android.graphics.RectF: contains(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Iterator: hasNext()boolean' label='java.util.Iterator: hasNext()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: update(F)void' label='com.masshabit.common.resource.AnimationState: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' label='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: put(java.lang.String,D)org.json.JSONObject' label='org.json.JSONObject: put(java.lang.String,D)org.json.JSONObject'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebViewClient: init()void' label='android.webkit.WebViewClient: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: setTitle(java.lang.CharSequence)void' label='com.masshabit.squibble.free.activity.h: setTitle(java.lang.CharSequence)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$2: ease(F)F' label='com.masshabit.common.tween.Ease$2: ease(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: setLayoutParams(android.view.ViewGroup$LayoutParams)void' label='android.widget.EditText: setLayoutParams(android.view.ViewGroup$LayoutParams)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.NameValuePair: getValue()java.lang.String' label='org.apache.http.NameValuePair: getValue()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.Resources: getStringArray(java.lang.Integer)[Ljava.lang.String' label='android.content.res.Resources: getStringArray(java.lang.Integer)[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.q: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.q: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.InputStream: read()java.lang.Integer' label='java.io.InputStream: read()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: setCollisionListener(com.masshabit.common.physics.ICollisionListener)void' label='com.masshabit.common.physics.CircleParticle: setCollisionListener(com.masshabit.common.physics.ICollisionListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: k()[Lcom.masshabit.squibble.free.activity.e.b' label='com.masshabit.squibble.free.activity.e.k: k()[Lcom.masshabit.squibble.free.activity.e.b'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.t: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.t: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: surfaceDestroyed(android.view.SurfaceHolder)void' label='com.masshabit.squibble.MainView: surfaceDestroyed(android.view.SurfaceHolder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(F)java.lang.StringBuilder' label='java.lang.StringBuilder: append(F)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileOutputStream: write([BII)void' label='java.io.FileOutputStream: write([BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.u: init()void' label='com.masshabit.squibble.free.activity.u: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getSystemService(java.lang.String)java.lang.Object' label='android.content.Context: getSystemService(java.lang.String)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences: getInt(java.lang.String,java.lang.Integer)java.lang.Integer' label='android.content.SharedPreferences: getInt(java.lang.String,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: init(android.content.Context)void' label='android.widget.LinearLayout: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: n()void' label='com.masshabit.squibble.free.activity.e.k: n()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' label='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: g()java.lang.String' label='com.masshabit.squibble.free.activity.e: g()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.n: c()boolean' label='com.masshabit.squibble.free.activity.a.n: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' label='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: charAt(java.lang.Integer)C' label='java.lang.String: charAt(java.lang.Integer)C'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ListView: setAdapter(android.widget.ListAdapter)void' label='android.widget.ListView: setAdapter(android.widget.ListAdapter)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.concurrent.Semaphore: acquireUninterruptibly()void' label='java.util.concurrent.Semaphore: acquireUninterruptibly()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.f: c()boolean' label='com.masshabit.squibble.free.activity.a.f: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: setOrientation(java.lang.Integer)void' label='android.widget.LinearLayout: setOrientation(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.a: init(java.lang.Object)void' label='com.masshabit.squibble.free.activity.d.a: init(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: c()boolean' label='com.masshabit.squibble.free.activity.a.d: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: d()void' label='com.masshabit.squibble.free.activity.a.d: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: getDefaultUncaughtExceptionHandler()java.lang.Thread$UncaughtExceptionHandler' label='java.lang.Thread: getDefaultUncaughtExceptionHandler()java.lang.Thread$UncaughtExceptionHandler'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: distanceSq(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.Vector2: distanceSq(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void' label='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.u: run()void' label='com.masshabit.squibble.free.activity.u: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.NameValuePair: getName()java.lang.String' label='org.apache.http.NameValuePair: getName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' label='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: cross(com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.Vector2: cross(com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.j: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.j: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: init()void' label='com.masshabit.squibble.StoryScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: clearAcceleration()void' label='com.masshabit.common.physics.Particle: clearAcceleration()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.BroadcastReceiver: init()void' label='android.content.BroadcastReceiver: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onPause()void' label='com.masshabit.squibble.MainActivity: onPause()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: finalizeConnections()void' label='com.masshabit.squibble.WorldMapNode: finalizeConnections()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Boolean: parseBoolean(java.lang.String)boolean' label='java.lang.Boolean: parseBoolean(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean' label='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: append(C)java.lang.StringBuffer' label='java.lang.StringBuffer: append(C)java.lang.StringBuffer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileInputStream: close()void' label='java.io.FileInputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: init()void' label='com.masshabit.squibble.free.activity.e: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$1: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$1: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.spec.DESKeySpec: init([B)void' label='javax.crypto.spec.DESKeySpec: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.Screen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: setRadius(F)void' label='com.masshabit.common.physics.CircleParticle: setRadius(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: set(ILjava.lang.Object)void' label='com.masshabit.common.Deque: set(ILjava.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getY()F' label='android.view.MotionEvent: getY()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' label='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getNetworkOperatorName()java.lang.String' label='android.telephony.TelephonyManager: getNetworkOperatorName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: init(java.lang.Integer)void' label='java.util.ArrayList: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: checkCallingOrSelfPermission(java.lang.String)java.lang.Integer' label='android.content.Context: checkCallingOrSelfPermission(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: b()boolean' label='com.masshabit.squibble.free.activity.h: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Notification: init(ILjava.lang.CharSequence,J)void' label='android.app.Notification: init(ILjava.lang.CharSequence,J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommandEventPool: release(java.lang.Object)void' label='com.masshabit.squibble.Game$ShowCommandEventPool: release(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: flush()void' label='java.io.DataOutputStream: flush()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: setUserId(java.lang.String)void' label='com.flurry.android.FlurryAgent: setUserId(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$1: run()void' label='com.masshabit.squibble.Game$1: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.p: init(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.Pushable)void' label='com.masshabit.squibble.free.activity.p: init(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.Pushable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSimOperator()java.lang.String' label='android.telephony.TelephonyManager: getSimOperator()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: init(java.lang.String)void' label='org.json.JSONObject: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='junit.framework.Assert: assertTrue(java.lang.String,boolean)void' label='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ObjectPool: fill()void' label='com.masshabit.common.ObjectPool: fill()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: c()java.lang.String' label='com.masshabit.squibble.free.activity.e: c()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' label='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: clearImpulse()void' label='com.masshabit.common.physics.Particle: clearImpulse()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getEventTime()J' label='android.view.MotionEvent: getEventTime()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onConfigurationChanged(android.content.res.Configuration)void' label='com.masshabit.squibble.MainActivity: onConfigurationChanged(android.content.res.Configuration)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: stop()void' label='com.masshabit.common.Clock: stop()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.v: onReceivedTitle(android.webkit.WebView,java.lang.String)void' label='com.masshabit.squibble.free.activity.v: onReceivedTitle(android.webkit.WebView,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addForce(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: addForce(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: atan2(DD)D' label='java.lang.Math: atan2(DD)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' label='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: estimateLength()void' label='com.masshabit.common.curve.CubicBezier: estimateLength()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: setContentView(android.view.View,android.view.ViewGroup$LayoutParams)void' label='com.masshabit.squibble.free.activity.h: setContentView(android.view.View,android.view.ViewGroup$LayoutParams)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)void' label='android.webkit.WebView: loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: readUnsignedShort()java.lang.Integer' label='java.io.DataInputStream: readUnsignedShort()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: updateChildren(F)void' label='com.masshabit.common.entity.AnimatedEntity: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void' label='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$2: init()void' label='com.masshabit.common.tween.Ease$2: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.xml.sax.SAXException: printStackTrace()void' label='org.xml.sax.SAXException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: recycle()void' label='android.os.Parcel: recycle()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.j: init(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.j: init(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: isLevelComplete(java.lang.String)boolean' label='com.masshabit.squibble.Profile: isLevelComplete(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$string: init()void' label='com.masshabit.squibble.R$string: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.l: c()boolean' label='com.masshabit.squibble.free.activity.b.l: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub: init()void' label='com.android.vending.licensing.ILicenseResultListener$Stub: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: addView(android.view.View,android.view.ViewGroup$LayoutParams)void' label='android.widget.LinearLayout: addView(android.view.View,android.view.ViewGroup$LayoutParams)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: access$300(com.android.vending.licensing.LicenseChecker)java.util.Set' label='com.android.vending.licensing.LicenseChecker: access$300(com.android.vending.licensing.LicenseChecker)java.util.Set'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentValues: clear()void' label='android.content.ContentValues: clear()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.w: a()void' label='com.masshabit.squibble.free.activity.b.w: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: run()void' label='com.masshabit.squibble.free.activity.g: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.b: run()void' label='com.flurry.android.b: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: exists()boolean' label='java.io.File: exists()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: setFilters([Landroid.text.InputFilter)void' label='android.widget.EditText: setFilters([Landroid.text.InputFilter)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onPrepareDialog(ILandroid.app.Dialog)void' label='com.masshabit.squibble.MainActivity: onPrepareDialog(ILandroid.app.Dialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: getHolder()android.view.SurfaceHolder' label='com.masshabit.squibble.MainView: getHolder()android.view.SurfaceHolder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.PolyCubicBezier: draw(android.graphics.Canvas)void' label='com.masshabit.common.curve.PolyCubicBezier: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: mkdirs()boolean' label='java.io.File: mkdirs()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.e: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.e: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.Game: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: b(android.os.Parcel)void' label='com.masshabit.squibble.free.activity.Pushable: b(android.os.Parcel)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener)void' label='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: init()void' label='com.masshabit.squibble.GameScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: setCurrentProfile(java.lang.Integer)void' label='com.masshabit.common.ProfileManagerBase: setCurrentProfile(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.n: d()void' label='com.masshabit.squibble.free.activity.a.n: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Pattern: quote(java.lang.String)java.lang.String' label='java.util.regex.Pattern: quote(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.io.Closeable)void' label='com.flurry.android.FlurryAgent: a(java.io.Closeable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: getRadius()F' label='com.masshabit.common.physics.CircleParticle: getRadius()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: setActive(boolean)void' label='com.masshabit.squibble.Player$Hand: setActive(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: b()[Lcom.masshabit.squibble.free.activity.d.e' label='com.masshabit.squibble.free.activity.d.c: b()[Lcom.masshabit.squibble.free.activity.d.e'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: lengthSq()F' label='com.masshabit.common.physics.Vector2: lengthSq()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: set(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.SegmentParticle: set(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: onLowMemory()void' label='com.masshabit.squibble.free.activity.e: onLowMemory()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' label='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Document: getDocumentElement()org.w3c.dom.Element' label='org.w3c.dom.Document: getDocumentElement()org.w3c.dom.Element'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$attr: init()void' label='com.masshabit.squibble.R$attr: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: toString()java.lang.String' label='com.masshabit.squibble.free.activity.a.Abstract: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Button: setOnClickListener(android.view.View$OnClickListener)void' label='android.widget.Button: setOnClickListener(android.view.View$OnClickListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: a()void' label='com.masshabit.squibble.free.activity.e.o: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.t: b()void' label='com.masshabit.squibble.free.activity.b.t: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: getStatus()java.lang.Integer' label='com.masshabit.common.License: getStatus()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: getAbsolutePath()java.lang.String' label='java.io.File: getAbsolutePath()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' label='com.masshabit.common.physics.SpringConstraint: satisfy(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getNetworkType()java.lang.Integer' label='android.telephony.TelephonyManager: getNetworkType()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$5: onMenuItemClick(android.view.MenuItem)boolean' label='com.masshabit.squibble.Game$5: onMenuItemClick(android.view.MenuItem)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: getExtras()android.os.Bundle' label='android.content.Intent: getExtras()android.os.Bundle'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decode4to3([BI[BI[B)java.lang.Integer' label='com.android.vending.licensing.util.Base64: decode4to3([BI[BI[B)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: a(java.lang.Runnable)void' label='com.masshabit.squibble.free.activity.e: a(java.lang.Runnable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' label='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ObjectPool: setSize(java.lang.Integer)void' label='com.masshabit.common.ObjectPool: setSize(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.IBinder: queryLocalInterface(java.lang.String)android.os.IInterface' label='android.os.IBinder: queryLocalInterface(java.lang.String)android.os.IInterface'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer' label='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getVoiceMailNumber()java.lang.String' label='android.telephony.TelephonyManager: getVoiceMailNumber()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: init(android.os.Looper)void' label='android.os.Handler: init(android.os.Looper)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addForce(FF)void' label='com.masshabit.common.physics.Particle: addForce(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: e()java.lang.Integer' label='com.masshabit.squibble.free.activity.c: e()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' label='com.masshabit.squibble.ProfileManager: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer' label='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.Cipher: getInstance(java.lang.String)javax.crypto.Cipher' label='javax.crypto.Cipher: getInstance(java.lang.String)javax.crypto.Cipher'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.BitmapResourceMap: init(java.lang.Integer)void' label='com.masshabit.common.resource.BitmapResourceMap: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setAlpha(java.lang.Integer)void' label='android.graphics.Paint: setAlpha(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: b()boolean' label='com.masshabit.squibble.free.activity.Pushable: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: values()java.util.Collection' label='java.util.HashMap: values()java.util.Collection'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils: split(java.lang.String,java.lang.String)[Ljava.lang.String' label='android.text.TextUtils: split(java.lang.String,java.lang.String)[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: clinit()void' label='com.masshabit.common.physics.Vector2: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.NPC: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void' label='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: init()void' label='android.content.Intent: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: setVisible(boolean)void' label='com.masshabit.squibble.ButtonEntity: setVisible(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URL: openConnection()java.net.URLConnection' label='java.net.URL: openConnection()java.net.URLConnection'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: writeToParcel(android.os.Parcel,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.a.Abstract: writeToParcel(android.os.Parcel,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Double: parseDouble(java.lang.String)D' label='java.lang.Double: parseDouble(java.lang.String)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback: dontAllow()void' label='com.android.vending.licensing.LicenseCheckerCallback: dontAllow()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: init(java.lang.String)void' label='java.io.File: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: setPadding(IIII)void' label='android.widget.LinearLayout: setPadding(IIII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: update(F)void' label='com.masshabit.squibble.WorldMapHud: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' label='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.xml.parsers.ParserConfigurationException: printStackTrace()void' label='javax.xml.parsers.ParserConfigurationException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' label='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONArray: put(java.lang.Object)org.json.JSONArray' label='org.json.JSONArray: put(java.lang.Object)org.json.JSONArray'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Object: toString()java.lang.String' label='java.lang.Object: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: getHeaderFieldKey(java.lang.Integer)java.lang.String' label='java.net.HttpURLConnection: getHeaderFieldKey(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: init(java.lang.String,java.lang.Integer)void' label='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: encode([B)java.lang.String' label='com.android.vending.licensing.util.Base64: encode([B)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: getCount()java.lang.Integer' label='android.database.Cursor: getCount()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.n: b()void' label='com.masshabit.squibble.free.activity.b.n: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' label='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: access$600(com.android.vending.licensing.LicenseChecker)android.os.Handler' label='com.android.vending.licensing.LicenseChecker: access$600(com.android.vending.licensing.LicenseChecker)android.os.Handler'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' label='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: setMutedChangedListener(com.masshabit.common.Environment$IMutedChangedListener)void' label='com.masshabit.common.Environment: setMutedChangedListener(com.masshabit.common.Environment$IMutedChangedListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Util: init()void' label='com.masshabit.common.Util: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeFloat(F)void' label='java.io.DataOutputStream: writeFloat(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: forName(java.lang.String)java.lang.Class' label='java.lang.Class: forName(java.lang.String)java.lang.Class'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: getPosition(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: getPosition(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: push_front(java.lang.Object)void' label='com.masshabit.common.Deque: push_front(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void' label='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License$MyCallback: init(com.masshabit.common.License)void' label='com.masshabit.common.License$MyCallback: init(com.masshabit.common.License)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Globals: init()void' label='com.masshabit.common.Globals: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashSet: add(java.lang.Object)boolean' label='java.util.HashSet: add(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.p: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.p: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: dt()F' label='com.masshabit.common.Clock: dt()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.System: arraycopy(java.lang.Object,ILjava.lang.Object,II)void' label='java.lang.System: arraycopy(java.lang.Object,ILjava.lang.Object,II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.AssertionError: init()void' label='java.lang.AssertionError: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: sendBroadcast(android.content.Intent)void' label='android.content.Context: sendBroadcast(android.content.Intent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: getHeaderField(java.lang.String)java.lang.String' label='java.net.HttpURLConnection: getHeaderField(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.InputStream: read([BII)java.lang.Integer' label='java.io.InputStream: read([BII)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' label='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: init()void' label='com.masshabit.common.entity.AnimatedEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.m: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.m: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.client.methods.HttpPost: init(java.lang.String)void' label='org.apache.http.client.methods.HttpPost: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$drawable: init()void' label='com.masshabit.squibble.R$drawable: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.d: init()void' label='com.masshabit.squibble.free.activity.d.d: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.Location: getLatitude()D' label='android.location.Location: getLatitude()D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.Signature: getInstance(java.lang.String)java.security.Signature' label='java.security.Signature: getInstance(java.lang.String)java.security.Signature'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: close()void' label='java.io.DataInputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer' label='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: init(android.content.Context,java.lang.Class)void' label='android.content.Intent: init(android.content.Context,java.lang.Class)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionResolver: init()void' label='com.masshabit.common.physics.CollisionResolver: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.v: a()void' label='com.masshabit.squibble.free.activity.b.v: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: size()java.lang.Integer' label='java.io.DataOutputStream: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$1: ease(F)F' label='com.masshabit.common.tween.Ease$1: ease(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decodeWebSafe([BII)[B' label='com.android.vending.licensing.util.Base64: decodeWebSafe([BII)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Character: charValue()C' label='java.lang.Character: charValue()C'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processTRANSACT_FAILUE_Action()void' label='com.masshabit.squibble.free.activity.g: processTRANSACT_FAILUE_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeParcelable(android.os.Parcelable,java.lang.Integer)void' label='android.os.Parcel: writeParcelable(android.os.Parcelable,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void' label='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: initChildren()void' label='com.masshabit.squibble.ButtonEntity: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: b(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer' label='com.masshabit.squibble.free.activity.Pushable: b(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.UpsellScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.UpsellScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.Menu: add(IIILjava.lang.CharSequence)android.view.MenuItem' label='android.view.Menu: add(IIILjava.lang.CharSequence)android.view.MenuItem'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(android.os.Parcel)void' label='com.masshabit.squibble.free.activity.Pushable: a(android.os.Parcel)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Object: init()void' label='java.lang.Object: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.q: a()void' label='com.masshabit.squibble.free.activity.b.q: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.s: b()void' label='com.masshabit.squibble.free.activity.b.s: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: toString()java.lang.String' label='java.lang.String: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onSaveInstanceState(android.os.Bundle)void' label='android.app.Activity: onSaveInstanceState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onRestoreInstanceState(android.os.Bundle)void' label='com.masshabit.squibble.MainActivity: onRestoreInstanceState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: toLowerCase()java.lang.String' label='java.lang.String: toLowerCase()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.RandomAccessFile: seek(J)void' label='java.io.RandomAccessFile: seek(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: onServiceDisconnected(android.content.ComponentName)void' label='com.android.vending.licensing.LicenseChecker: onServiceDisconnected(android.content.ComponentName)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: sendMessage(android.os.Message)boolean' label='android.os.Handler: sendMessage(android.os.Message)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: push_back(java.lang.Object)void' label='com.masshabit.common.Deque: push_back(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.RectF: init(FFFF)void' label='android.graphics.RectF: init(FFFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.Cipher: init(ILjava.security.Key)void' label='javax.crypto.Cipher: init(ILjava.security.Key)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.r: init()void' label='com.masshabit.squibble.free.activity.e.r: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: d()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.HttpResponse: getStatusLine()org.apache.http.StatusLine' label='org.apache.http.HttpResponse: getStatusLine()org.apache.http.StatusLine'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: getSystemService(java.lang.String)java.lang.Object' label='com.masshabit.squibble.free.activity.e: getSystemService(java.lang.String)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer' label='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.p: init()void' label='com.masshabit.squibble.free.activity.e.p: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: getCurrentProfile()java.lang.Integer' label='com.masshabit.common.ProfileManagerBase: getCurrentProfile()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.Socket: getOutputStream()java.io.OutputStream' label='java.net.Socket: getOutputStream()java.io.OutputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: getSettings()android.webkit.WebSettings' label='android.webkit.WebView: getSettings()android.webkit.WebSettings'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: createNewFile()boolean' label='java.io.File: createNewFile()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences$Editor: commit()boolean' label='android.content.SharedPreferences$Editor: commit()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: concat(android.graphics.Matrix)void' label='android.graphics.Canvas: concat(android.graphics.Matrix)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.m: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.e.m: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: clearAcceleration()void' label='com.masshabit.common.physics.CircleParticle: clearAcceleration()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onRestart()void' label='com.masshabit.squibble.MainActivity: onRestart()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: clinit()void' label='com.masshabit.common.physics.CollisionDetector: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$string: init()void' label='com.masshabit.squibble.free.R$string: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: clinit()void' label='com.masshabit.squibble.Player: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: update(F)void' label='com.masshabit.common.physics.Particle: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.CheckingLicenseScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.h: run()void' label='com.masshabit.squibble.free.activity.e.h: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: getParent()java.lang.String' label='java.io.File: getParent()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: a()boolean' label='com.masshabit.squibble.free.activity.h: a()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONArray: init()void' label='org.json.JSONArray: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: readStrongBinder()android.os.IBinder' label='android.os.Parcel: readStrongBinder()android.os.IBinder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.j: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.j: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: init()void' label='com.masshabit.squibble.Screen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: g()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onPrepareOptionsMenu(android.view.Menu)boolean' label='com.masshabit.squibble.MainActivity: onPrepareOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' label='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: testSegmentSegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.CollisionUtils: testSegmentSegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getResources()android.content.res.Resources' label='android.content.Context: getResources()android.content.res.Resources'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: onPrepareDialog(ILandroid.app.Dialog)void' label='com.masshabit.squibble.Screen: onPrepareDialog(ILandroid.app.Dialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: getPoint2(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.SegmentParticle: getPoint2(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: update(F)void' label='com.masshabit.common.entity.Entity: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: containsKey(java.lang.Object)boolean' label='java.util.HashMap: containsKey(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode$Connection: init(java.lang.String,boolean)void' label='com.masshabit.squibble.WorldMapNode$Connection: init(java.lang.String,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.InputStream: close()void' label='java.io.InputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.Location: getAccuracy()F' label='android.location.Location: getAccuracy()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a()[Ljava.lang.String' label='com.masshabit.squibble.free.activity.Pushable: a()[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: onMutedChanged(boolean)void' label='com.masshabit.squibble.WorldMapScreen: onMutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void' label='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void' label='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: saveProfile()void' label='com.masshabit.common.ProfileManagerBase: saveProfile()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setTextSize(F)void' label='android.graphics.Paint: setTextSize(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.o: d()void' label='com.masshabit.squibble.free.activity.a.o: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: setWebViewClient(android.webkit.WebViewClient)void' label='android.webkit.WebView: setWebViewClient(android.webkit.WebViewClient)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: allocate()java.lang.Object' label='com.masshabit.common.InputEventPool: allocate()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashSet: init(java.lang.Integer)void' label='java.util.HashSet: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' label='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: remove(java.lang.Object)java.lang.Object' label='java.util.Map: remove(java.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void' label='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZ)void' label='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZ)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: removeCallbacks(java.lang.Runnable)void' label='android.os.Handler: removeCallbacks(java.lang.Runnable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' label='com.masshabit.common.physics.Particle: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: relativize(com.masshabit.common.entity.Entity)void' label='com.masshabit.common.LevelLoader: relativize(com.masshabit.common.entity.Entity)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Bitmap: recycle()void' label='android.graphics.Bitmap: recycle()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R: init()void' label='com.masshabit.squibble.free.R: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ObjectPool: init(java.lang.Integer)void' label='com.masshabit.common.ObjectPool: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.h: init()void' label='com.masshabit.squibble.free.activity.e.h: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentValues: put(java.lang.String,java.lang.Integer)void' label='android.content.ContentValues: put(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: putExtra(java.lang.String,[Ljava.lang.String)android.content.Intent' label='android.content.Intent: putExtra(java.lang.String,[Ljava.lang.String)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' label='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.j: init()void' label='com.masshabit.squibble.free.activity.e.j: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.f: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.f: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: saveProfile()void' label='com.masshabit.squibble.ProfileManager: saveProfile()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$3: ease(F)F' label='com.masshabit.common.tween.Ease$3: ease(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.c: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.c: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.a: run()void' label='com.flurry.android.a: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.e: d()void' label='com.masshabit.squibble.free.activity.a.e: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: destroy()void' label='com.masshabit.squibble.HowToScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.client.utils.URLEncodedUtils: parse(java.net.URI,java.lang.String)java.util.List' label='org.apache.http.client.utils.URLEncodedUtils: parse(java.net.URI,java.lang.String)java.util.List'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.IllegalArgumentException: init(java.lang.Throwable)void' label='java.lang.IllegalArgumentException: init(java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.VectorTween: update(F)void' label='com.masshabit.common.tween.VectorTween: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: initChildren()void' label='com.masshabit.squibble.PlayerSelectPanel: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: desiredAssertionStatus()boolean' label='java.lang.Class: desiredAssertionStatus()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' label='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: setValues([F)void' label='android.graphics.Matrix: setValues([F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: c()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: getNonce()java.lang.Integer' label='com.android.vending.licensing.LicenseValidator: getNonce()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.media.SoundPool: release()void' label='android.media.SoundPool: release()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='junit.framework.Assert: assertTrue(boolean)void' label='junit.framework.Assert: assertTrue(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionGroup: size()java.lang.Integer' label='com.masshabit.common.physics.CollisionGroup: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: a(boolean)boolean' label='com.masshabit.squibble.free.activity.h: a(boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: getValues([F)void' label='android.graphics.Matrix: getValues([F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: getPackageManager()android.content.pm.PackageManager' label='com.masshabit.squibble.free.activity.e: getPackageManager()android.content.pm.PackageManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' label='com.android.vending.licensing.Policy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: sqrt(D)D' label='java.lang.Math: sqrt(D)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: c(com.masshabit.squibble.free.activity.e)com.masshabit.squibble.free.activity.g' label='com.masshabit.squibble.free.activity.e: c(com.masshabit.squibble.free.activity.e)com.masshabit.squibble.free.activity.g'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.b: init()void' label='com.masshabit.squibble.free.activity.e.b: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: length()java.lang.Integer' label='java.lang.StringBuilder: length()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.SmsMessage: getDisplayOriginatingAddress()java.lang.String' label='android.telephony.SmsMessage: getDisplayOriginatingAddress()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.BufferedReader: readLine()java.lang.String' label='java.io.BufferedReader: readLine()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: clinit()void' label='com.masshabit.squibble.free.activity.e.k: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.ByteArrayOutputStream: init()void' label='java.io.ByteArrayOutputStream: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' label='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ComponentName: init(java.lang.String,java.lang.String)void' label='android.content.ComponentName: init(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: readLong()J' label='android.os.Parcel: readLong()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback: allow()void' label='com.android.vending.licensing.LicenseCheckerCallback: allow()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$id: init()void' label='com.masshabit.squibble.free.R$id: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: optString(java.lang.String,java.lang.String)java.lang.String' label='org.json.JSONObject: optString(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Toast: show()void' label='android.widget.Toast: show()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.o: init(java.lang.String,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.o: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onCreateOptionsMenu(android.view.Menu)boolean' label='android.app.Activity: onCreateOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: readLong()J' label='java.io.DataInputStream: readLong()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: a()void' label='com.masshabit.squibble.free.activity.e: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.NPC: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$4: init()void' label='com.masshabit.common.tween.Ease$4: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: onServiceConnected(android.content.ComponentName,android.os.IBinder)void' label='com.android.vending.licensing.LicenseChecker: onServiceConnected(android.content.ComponentName,android.os.IBinder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: getPosition(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.CircleParticle: getPosition(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy$LicenseResponse: toString()java.lang.String' label='com.android.vending.licensing.Policy$LicenseResponse: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: a()android.content.Context' label='com.masshabit.squibble.free.activity.a.d: a()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' label='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void' label='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.OutputStream: flush()void' label='java.io.OutputStream: flush()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' label='com.masshabit.common.ProfileManagerBase: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getApplicationContext()android.content.Context' label='android.content.Context: getApplicationContext()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: valueOf(java.lang.Integer)java.lang.String' label='java.lang.String: valueOf(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: addView(android.view.View)void' label='android.widget.LinearLayout: addView(android.view.View)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: drawChildren(android.graphics.Canvas)void' label='com.masshabit.common.Layer: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: g()void' label='com.flurry.android.FlurryAgent: g()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.media.SoundPool: play(IFFIIF)java.lang.Integer' label='android.media.SoundPool: play(IFFIIF)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: a()com.masshabit.squibble.free.activity.d.e' label='com.masshabit.squibble.free.activity.d.c: a()com.masshabit.squibble.free.activity.d.e'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: registerParticle(com.masshabit.common.physics.Particle)void' label='com.masshabit.common.physics.Physics: registerParticle(com.masshabit.common.physics.Particle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Interval: init()void' label='com.masshabit.common.physics.Interval: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.IOException: printStackTrace()void' label='java.io.IOException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' label='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Collection: iterator()java.util.Iterator' label='java.util.Collection: iterator()java.util.Iterator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: start(F)void' label='com.masshabit.common.Delay: start(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: purgeEvents()void' label='com.masshabit.common.Environment: purgeEvents()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics$RayCastResult: set(com.masshabit.common.physics.Physics$RayCastResult)void' label='com.masshabit.common.physics.Physics$RayCastResult: set(com.masshabit.common.physics.Physics$RayCastResult)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getLine1Number()java.lang.String' label='android.telephony.TelephonyManager: getLine1Number()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileInputStream: init(java.io.File)void' label='java.io.FileInputStream: init(java.io.File)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.Pushable: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.NullDeviceLimiter: init()void' label='com.android.vending.licensing.NullDeviceLimiter: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.b: init()void' label='com.masshabit.squibble.free.activity.a.b: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void' label='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: scale(FF)void' label='android.graphics.Canvas: scale(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: init()void' label='com.masshabit.common.Camera: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: resolveCollision(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)void' label='com.masshabit.common.physics.Particle: resolveCollision(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout$LayoutParams: init(II)void' label='android.widget.LinearLayout$LayoutParams: init(II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String' label='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog: findViewById(java.lang.Integer)android.view.View' label='android.app.AlertDialog: findViewById(java.lang.Integer)android.view.View'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebChromeClient: onReceivedTitle(android.webkit.WebView,java.lang.String)void' label='android.webkit.WebChromeClient: onReceivedTitle(android.webkit.WebView,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.y: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.y: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onCreateDialog(java.lang.Integer)android.app.Dialog' label='android.app.Activity: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onSaveInstanceState(android.os.Bundle)void' label='com.masshabit.squibble.MainActivity: onSaveInstanceState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onCreateOptionsMenu(android.view.Menu)boolean' label='com.masshabit.squibble.MainActivity: onCreateOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.h: a()void' label='com.masshabit.squibble.free.activity.a.h: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: registerConstraint(com.masshabit.common.physics.Constraint)void' label='com.masshabit.common.physics.Physics: registerConstraint(com.masshabit.common.physics.Constraint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.KeyFactory: generatePublic(java.security.spec.KeySpec)java.security.PublicKey' label='java.security.KeyFactory: generatePublic(java.security.spec.KeySpec)java.security.PublicKey'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: getSimpleName()java.lang.String' label='java.lang.Class: getSimpleName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getFileStreamPath(java.lang.String)java.io.File' label='android.content.Context: getFileStreamPath(java.lang.String)java.io.File'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: readBoolean()boolean' label='java.io.DataInputStream: readBoolean()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' label='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Object: getClass()java.lang.Class' label='java.lang.Object: getClass()java.lang.Class'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.EnvironmentArgs: init()void' label='com.masshabit.common.EnvironmentArgs: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: substring(java.lang.Integer)java.lang.String' label='java.lang.String: substring(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: getJSONArray(java.lang.String)org.json.JSONArray' label='org.json.JSONObject: getJSONArray(java.lang.String)org.json.JSONArray'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' label='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: remove(java.lang.Integer)java.lang.Object' label='java.util.ArrayList: remove(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Util: clamp(FFF)F' label='com.masshabit.common.Util: clamp(FFF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: onKeyUp(ILandroid.view.KeyEvent)boolean' label='com.masshabit.squibble.MainView: onKeyUp(ILandroid.view.KeyEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MuteEntity: init()void' label='com.masshabit.squibble.MuteEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' label='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: update(F)void' label='com.masshabit.common.entity.AnimatedEntity: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' label='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: getTimeRaw()J' label='com.masshabit.common.Clock: getTimeRaw()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.ITweenCompleteListener: tweenComplete(java.lang.Object)void' label='com.masshabit.common.tween.ITweenCompleteListener: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$attr: init()void' label='com.masshabit.squibble.free.R$attr: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.pm.ApplicationInfo: loadLabel(android.content.pm.PackageManager)java.lang.CharSequence' label='android.content.pm.ApplicationInfo: loadLabel(android.content.pm.PackageManager)java.lang.CharSequence'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onCreate(android.os.Bundle)void' label='android.app.Activity: onCreate(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: peek_front()java.lang.Object' label='com.masshabit.common.Deque: peek_front()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.s: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.s: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' label='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.v: onProgressChanged(android.webkit.WebView,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.v: onProgressChanged(android.webkit.WebView,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: verifyLicense(ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.LicenseChecker$ResultListener: verifyLicense(ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener: asBinder()android.os.IBinder' label='com.android.vending.licensing.ILicenseResultListener: asBinder()android.os.IBinder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void' label='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: clinit()void' label='com.masshabit.squibble.free.activity.Pushable: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: update(F)void' label='com.masshabit.squibble.SplashScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: access$500(com.android.vending.licensing.LicenseChecker)java.security.PublicKey' label='com.android.vending.licensing.LicenseChecker: access$500(com.android.vending.licensing.LicenseChecker)java.security.PublicKey'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.B: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.B: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: finish()void' label='android.app.Activity: finish()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen: init()void' label='com.masshabit.squibble.CheckingLicenseScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub: attachInterface(android.os.IInterface,java.lang.String)void' label='com.android.vending.licensing.ILicensingService$Stub: attachInterface(android.os.IInterface,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: setContentView(android.view.View)void' label='com.masshabit.squibble.free.activity.h: setContentView(android.view.View)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.Signature: update([B)void' label='java.security.Signature: update([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: changeScreen(IF)void' label='com.masshabit.squibble.Game: changeScreen(IF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: close()void' label='java.io.DataOutputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase$PlayerProfile: save(org.json.JSONObject)void' label='com.masshabit.common.ProfileManagerBase$PlayerProfile: save(org.json.JSONObject)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.b: a()void' label='com.masshabit.squibble.free.activity.a.b: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: getSaveCount()java.lang.Integer' label='android.graphics.Canvas: getSaveCount()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences$Editor: remove(java.lang.String)android.content.SharedPreferences$Editor' label='android.content.SharedPreferences$Editor: remove(java.lang.String)android.content.SharedPreferences$Editor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getInt(java.lang.String)java.lang.Integer' label='android.os.Bundle: getInt(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: startActivity(android.content.Intent)void' label='android.app.Activity: startActivity(android.content.Intent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Set: iterator()java.util.Iterator' label='java.util.Set: iterator()java.util.Iterator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.Signature: initVerify(java.security.PublicKey)void' label='java.security.Signature: initVerify(java.security.PublicKey)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: save()java.lang.Integer' label='android.graphics.Canvas: save()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Exception: init(java.lang.String)void' label='java.lang.Exception: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: readInt()java.lang.Integer' label='android.os.Parcel: readInt()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.t: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.t: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.d: b()void' label='com.masshabit.squibble.free.activity.b.d: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: size()java.lang.Integer' label='java.util.ArrayList: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.SegmentParticle: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: msSinceDt()J' label='com.masshabit.common.Clock: msSinceDt()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.C: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.a.Abstract)void' label='com.masshabit.squibble.free.activity.C: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.a.Abstract)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: load(java.lang.String)void' label='com.masshabit.common.LevelLoader: load(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Queue: poll()java.lang.Object' label='java.util.Queue: poll()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: clinit()void' label='com.flurry.android.FlurryAgent: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: setVelocity(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: setVelocity(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSubscriberId()java.lang.String' label='android.telephony.TelephonyManager: getSubscriberId()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer' label='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.h: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.h: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: init()void' label='com.masshabit.common.physics.Vector2: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setPositiveButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setPositiveButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: init(android.os.Handler$Callback)void' label='android.os.Handler: init(android.os.Handler$Callback)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.e: clinit()void' label='com.masshabit.squibble.free.activity.b.e: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.OutputStream: close()void' label='java.io.OutputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Obfuscator: obfuscate(java.lang.String)java.lang.String' label='com.android.vending.licensing.Obfuscator: obfuscate(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.q: init(android.content.Context)void' label='com.masshabit.squibble.free.activity.q: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decode([B)[B' label='com.android.vending.licensing.util.Base64: decode([B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: create(android.content.Context)com.masshabit.common.License' label='com.masshabit.common.License: create(android.content.Context)com.masshabit.common.License'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.z: onClick(android.view.View)void' label='com.masshabit.squibble.free.activity.z: onClick(android.view.View)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: lastIndexOf(java.lang.String)java.lang.Integer' label='java.lang.String: lastIndexOf(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void' label='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.o: ordinal()java.lang.Integer' label='com.masshabit.squibble.free.activity.o: ordinal()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: startService(android.content.Intent)android.content.ComponentName' label='com.masshabit.squibble.free.activity.e: startService(android.content.Intent)android.content.ComponentName'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: clear()void' label='java.util.ArrayList: clear()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' label='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: drawChildren(android.graphics.Canvas)void' label='com.masshabit.common.entity.Entity: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: fill()void' label='com.masshabit.common.InputEventPool: fill()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void' label='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: init()void' label='com.masshabit.common.InputEventPool: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HidableEntity: init()void' label='com.masshabit.squibble.HidableEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' label='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: b()com.flurry.android.FlurryAgent' label='com.flurry.android.FlurryAgent: b()com.flurry.android.FlurryAgent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: update(F)void' label='com.masshabit.squibble.GameScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Level: registerGeometry()void' label='com.masshabit.common.Level: registerGeometry()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteNo()void' label='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteNo()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Date: getTime()J' label='java.util.Date: getTime()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onRestoreInstanceState(android.os.Bundle)void' label='android.app.Activity: onRestoreInstanceState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.g: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPath: getLength()F' label='com.masshabit.squibble.WorldMapPath: getLength()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addAcceleration(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: addAcceleration(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen$2: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void' label='com.masshabit.squibble.CheckingLicenseScreen$2: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences: getBoolean(java.lang.String,boolean)boolean' label='android.content.SharedPreferences: getBoolean(java.lang.String,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64DecoderException: init(java.lang.String)void' label='com.android.vending.licensing.util.Base64DecoderException: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.e: init()void' label='com.flurry.android.e: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.f: init()void' label='com.flurry.android.f: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Set: remove(java.lang.Object)boolean' label='java.util.Set: remove(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CreditsScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.CreditsScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: handleInvalidResponse()void' label='com.android.vending.licensing.LicenseValidator: handleInvalidResponse()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: surfaceChanged(android.view.SurfaceHolder,III)void' label='com.masshabit.squibble.MainView: surfaceChanged(android.view.SurfaceHolder,III)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: putBoolean(java.lang.String,boolean)void' label='android.os.Bundle: putBoolean(java.lang.String,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: update(F)void' label='com.masshabit.squibble.Player$Hand: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Node: getNextSibling()org.w3c.dom.Node' label='org.w3c.dom.Node: getNextSibling()org.w3c.dom.Node'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Globals: paidMode()boolean' label='com.masshabit.common.Globals: paidMode()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decode([BII)[B' label='com.android.vending.licensing.util.Base64: decode([BII)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: init()void' label='android.graphics.Matrix: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapHud: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' label='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getPackageManager()android.content.pm.PackageManager' label='android.content.Context: getPackageManager()android.content.pm.PackageManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: append(java.lang.Integer)java.lang.StringBuffer' label='java.lang.StringBuffer: append(java.lang.Integer)java.lang.StringBuffer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy$LicenseResponse: clinit()void' label='com.android.vending.licensing.Policy$LicenseResponse: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: init()void' label='java.lang.StringBuilder: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: access$000(com.masshabit.common.License)J' label='com.masshabit.common.License: access$000(com.masshabit.common.License)J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: restoreState(android.os.Bundle)void' label='com.masshabit.common.Camera: restoreState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.f: abortBroadcast()void' label='com.masshabit.squibble.free.activity.f: abortBroadcast()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipEntry: isDirectory()boolean' label='java.util.zip.ZipEntry: isDirectory()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onPause()void' label='android.app.Activity: onPause()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.pm.PackageManager: getInstalledPackages(java.lang.Integer)java.util.List' label='android.content.pm.PackageManager: getInstalledPackages(java.lang.Integer)java.util.List'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub$Proxy: init(android.os.IBinder)void' label='com.android.vending.licensing.ILicensingService$Stub$Proxy: init(android.os.IBinder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: restoreState(android.os.Bundle)void' label='com.masshabit.common.Layer: restoreState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeLong(J)void' label='java.io.DataOutputStream: writeLong(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.s: a()void' label='com.masshabit.squibble.free.activity.b.s: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: isReady()boolean' label='com.masshabit.squibble.PlayerSelectPanel: isReady()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' label='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CreditsScreen: update(F)void' label='com.masshabit.squibble.CreditsScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$4: ease(F)F' label='com.masshabit.common.tween.Ease$4: ease(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: init()void' label='com.masshabit.squibble.WorldMapNode: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: d()com.masshabit.squibble.free.activity.a.Abstract' label='com.masshabit.squibble.free.activity.c: d()com.masshabit.squibble.free.activity.a.Abstract'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: reset()void' label='com.masshabit.common.physics.Physics: reset()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.m: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.m: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: init()void' label='android.os.Bundle: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: getName()java.lang.String' label='java.lang.Class: getName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Set: isEmpty()boolean' label='java.util.Set: isEmpty()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.l: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.l: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node' label='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.OutputStream: write(java.lang.Integer)void' label='java.io.OutputStream: write(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.PendingIntent: getActivity(android.content.Context,ILandroid.content.Intent,java.lang.Integer)android.app.PendingIntent' label='android.app.PendingIntent: getActivity(android.content.Context,ILandroid.content.Intent,java.lang.Integer)android.app.PendingIntent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' label='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: init()void' label='com.masshabit.common.physics.CollisionUtils: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' label='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Environment: getExternalStorageDirectory()java.io.File' label='android.os.Environment: getExternalStorageDirectory()java.io.File'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: c()boolean' label='com.masshabit.squibble.free.activity.Pushable: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: getLength()F' label='com.masshabit.common.physics.SegmentParticle: getLength()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' label='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: append([CII)java.lang.StringBuffer' label='java.lang.StringBuffer: append([CII)java.lang.StringBuffer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashSet: contains(java.lang.Object)boolean' label='java.util.HashSet: contains(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: stopSelf()void' label='com.masshabit.squibble.free.activity.e: stopSelf()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: hasAttribute(java.lang.String)boolean' label='org.w3c.dom.Element: hasAttribute(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setAntiAlias(boolean)void' label='android.graphics.Paint: setAntiAlias(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: move(FF)void' label='com.masshabit.common.Camera: move(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' label='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: init()void' label='com.flurry.android.FlurryAgent: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: f()java.lang.Integer' label='com.masshabit.squibble.free.activity.a.Abstract: f()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: equalsIgnoreCase(java.lang.String)boolean' label='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getX()F' label='android.view.MotionEvent: getX()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Node: getNodeName()java.lang.String' label='org.w3c.dom.Node: getNodeName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' label='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: signedTriArea(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.CollisionUtils: signedTriArea(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.ResourceMap: debugDump()void' label='com.masshabit.common.resource.ResourceMap: debugDump()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Date: init()void' label='java.util.Date: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Button: getText()java.lang.CharSequence' label='android.widget.Button: getText()java.lang.CharSequence'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.g: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: encode([BII[BI)[B' label='com.android.vending.licensing.util.Base64: encode([BII[BI)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: setPosition(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: setPosition(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: invert(android.graphics.Matrix)boolean' label='android.graphics.Matrix: invert(android.graphics.Matrix)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String' label='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setOnCancelListener(android.content.DialogInterface$OnCancelListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setOnCancelListener(android.content.DialogInterface$OnCancelListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: generateNonce()java.lang.Integer' label='com.android.vending.licensing.LicenseChecker: generateNonce()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' label='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog: setButton(ILjava.lang.CharSequence,android.content.DialogInterface$OnClickListener)void' label='android.app.AlertDialog: setButton(ILjava.lang.CharSequence,android.content.DialogInterface$OnClickListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer' label='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HidableEntity: setVisible(boolean)void' label='com.masshabit.squibble.HidableEntity: setVisible(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' label='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.p: b()void' label='com.masshabit.squibble.free.activity.b.p: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences$Editor: putInt(java.lang.String,java.lang.Integer)android.content.SharedPreferences$Editor' label='android.content.SharedPreferences$Editor: putInt(java.lang.String,java.lang.Integer)android.content.SharedPreferences$Editor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: split(java.lang.String)[Ljava.lang.String' label='java.lang.String: split(java.lang.String)[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: delayComplete(com.masshabit.common.Delay)void' label='com.masshabit.squibble.SplashScreen: delayComplete(com.masshabit.common.Delay)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Boolean: booleanValue()boolean' label='java.lang.Boolean: booleanValue()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.f: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.f: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game,java.lang.Integer)void' label='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: startActivity(android.content.Intent)void' label='com.masshabit.squibble.free.activity.h: startActivity(android.content.Intent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ArrayAdapter: notifyDataSetChanged()void' label='android.widget.ArrayAdapter: notifyDataSetChanged()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: multiply(F)void' label='com.masshabit.common.physics.Vector2: multiply(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F' label='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: connect()void' label='java.net.HttpURLConnection: connect()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Service: onCreate()void' label='android.app.Service: onCreate()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.p: b([B)[B' label='com.masshabit.squibble.free.activity.e.p: b([B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeBoolean(boolean)void' label='java.io.DataOutputStream: writeBoolean(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c.AndroidIME: init()void' label='com.masshabit.squibble.free.activity.c.AndroidIME: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Matcher: group()java.lang.String' label='java.util.regex.Matcher: group()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: setId(java.lang.Integer)void' label='android.widget.EditText: setId(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawText([CIIFFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawText([CIIFFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.k: a()void' label='com.masshabit.squibble.free.activity.b.k: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener$2: init(com.android.vending.licensing.LicenseChecker$ResultListener,ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.LicenseChecker$ResultListener$2: init(com.android.vending.licensing.LicenseChecker$ResultListener,ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.u: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.u: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: min(II)java.lang.Integer' label='java.lang.Math: min(II)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: setArtificiallyPaused(boolean)void' label='com.masshabit.common.Environment: setArtificiallyPaused(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: distanceSq(FFFF)F' label='com.masshabit.common.physics.Vector2: distanceSq(FFFF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void' label='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics$RayCastResult: init()void' label='com.masshabit.common.physics.Physics$RayCastResult: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: finish()void' label='com.masshabit.squibble.free.activity.h: finish()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$3: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$3: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: a(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' label='com.flurry.android.Flog: a(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: add(ILjava.lang.Object)void' label='java.util.List: add(ILjava.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.AssetFileDescriptor: close()void' label='android.content.res.AssetFileDescriptor: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Toast: makeText(android.content.Context,java.lang.CharSequence,java.lang.Integer)android.widget.Toast' label='android.widget.Toast: makeText(android.content.Context,java.lang.CharSequence,java.lang.Integer)android.widget.Toast'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.q: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' label='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: encodeWebSafe([BZ)java.lang.String' label='com.android.vending.licensing.util.Base64: encodeWebSafe([BZ)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub: verifyLicense(ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.ILicenseResultListener$Stub: verifyLicense(ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebChromeClient: onProgressChanged(android.webkit.WebView,java.lang.Integer)void' label='android.webkit.WebChromeClient: onProgressChanged(android.webkit.WebView,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.Cipher: init(ILjava.security.Key,java.security.spec.AlgorithmParameterSpec)void' label='javax.crypto.Cipher: init(ILjava.security.Key,java.security.spec.AlgorithmParameterSpec)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: loadSound(ILjava.lang.String)void' label='com.masshabit.squibble.HowToScreen: loadSound(ILjava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.HalfEdge: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.HalfEdge: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: proceed()void' label='com.masshabit.squibble.SplashScreen: proceed()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: set(FFFF)void' label='com.masshabit.common.physics.SegmentParticle: set(FFFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: clinit()void' label='com.masshabit.common.physics.CollisionUtils: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Toast: setGravity(III)void' label='android.widget.Toast: setGravity(III)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: destroy()void' label='com.masshabit.squibble.StoryScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.j: start()void' label='com.masshabit.squibble.free.activity.j: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.w: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.w: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: parseInt(java.lang.String,java.lang.Integer)java.lang.Integer' label='java.lang.Integer: parseInt(java.lang.String,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer' label='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: init(java.lang.String,android.net.Uri)void' label='android.content.Intent: init(java.lang.String,android.net.Uri)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onPageView()void' label='com.flurry.android.FlurryAgent: onPageView()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Notification: setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)void' label='android.app.Notification: setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: onCreate()void' label='com.masshabit.squibble.free.activity.e: onCreate()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase$PlayerProfile: load(org.json.JSONObject)void' label='com.masshabit.common.ProfileManagerBase$PlayerProfile: load(org.json.JSONObject)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setColor(java.lang.Integer)void' label='android.graphics.Paint: setColor(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' label='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' label='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' label='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.j: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.j: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Tween: init(FFF)void' label='com.masshabit.common.tween.Tween: init(FFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.PolyCubicBezier: toString()java.lang.String' label='com.masshabit.common.curve.PolyCubicBezier: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.InputStream: read([B)java.lang.Integer' label='java.io.InputStream: read([B)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean' label='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.client.HttpClient: execute(org.apache.http.client.methods.HttpUriRequest)org.apache.http.HttpResponse' label='org.apache.http.client.HttpClient: execute(org.apache.http.client.methods.HttpUriRequest)org.apache.http.HttpResponse'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.j: init(com.masshabit.squibble.free.activity.b.i)void' label='com.masshabit.squibble.free.activity.b.j: init(com.masshabit.squibble.free.activity.b.i)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.MenuScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.PreferenceObfuscator: init(android.content.SharedPreferences,com.android.vending.licensing.Obfuscator)void' label='com.android.vending.licensing.PreferenceObfuscator: init(android.content.SharedPreferences,com.android.vending.licensing.Obfuscator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Long: longValue()J' label='java.lang.Long: longValue()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.pm.PackageManager: getPackageInfo(java.lang.String,java.lang.Integer)android.content.pm.PackageInfo' label='android.content.pm.PackageManager: getPackageInfo(java.lang.String,java.lang.Integer)android.content.pm.PackageInfo'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.Animation: init()void' label='com.masshabit.common.resource.Animation: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.impl.client.DefaultHttpClient: init()void' label='org.apache.http.impl.client.DefaultHttpClient: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Obfuscator: unobfuscate(java.lang.String)java.lang.String' label='com.android.vending.licensing.Obfuscator: unobfuscate(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: requestWindowFeature(java.lang.Integer)boolean' label='com.masshabit.squibble.free.activity.h: requestWindowFeature(java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: write([B)void' label='java.io.DataOutputStream: write([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable' label='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onRestart()void' label='android.app.Activity: onRestart()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: pop_front()java.lang.Object' label='com.masshabit.common.Deque: pop_front()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: i()java.lang.Integer' label='com.masshabit.squibble.free.activity.c: i()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: onDestroy()void' label='com.masshabit.squibble.free.activity.e: onDestroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapNode: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: indexOf(java.lang.String)java.lang.Integer' label='java.lang.String: indexOf(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: init(FF)void' label='com.masshabit.common.physics.Vector2: init(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.spec.IvParameterSpec: init([B)void' label='javax.crypto.spec.IvParameterSpec: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' label='com.masshabit.squibble.Player: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.NotificationManager: notify(ILandroid.app.Notification)void' label='android.app.NotificationManager: notify(ILandroid.app.Notification)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Timer: cancel()void' label='java.util.Timer: cancel()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashSet: init()void' label='java.util.HashSet: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' label='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFI)void' label='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFI)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(android.content.Context)void' label='com.flurry.android.FlurryAgent: a(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.IOException: init(java.lang.String)void' label='java.io.IOException: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: onKeyDown(ILandroid.view.KeyEvent)boolean' label='com.masshabit.squibble.MainView: onKeyDown(ILandroid.view.KeyEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.KeyEvent: getEventTime()J' label='android.view.KeyEvent: getEventTime()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void' label='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getHistoricalY(java.lang.Integer)F' label='android.view.MotionEvent: getHistoricalY(java.lang.Integer)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: readFully([B)void' label='java.io.DataInputStream: readFully([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.n: clinit()void' label='com.masshabit.squibble.free.activity.n: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: disconnect()void' label='java.net.HttpURLConnection: disconnect()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.SecureRandom: nextInt()java.lang.Integer' label='java.security.SecureRandom: nextInt()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.h: b()void' label='com.masshabit.squibble.free.activity.b.h: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setShadowLayer(FFFI)void' label='android.graphics.Paint: setShadowLayer(FFFI)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Service: onDestroy()void' label='android.app.Service: onDestroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.k: init(com.masshabit.squibble.free.activity.j)void' label='com.masshabit.squibble.free.activity.k: init(com.masshabit.squibble.free.activity.j)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: update(F)void' label='com.masshabit.squibble.WorldMapScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Set: add(java.lang.Object)boolean' label='java.util.Set: add(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: clinit()void' label='com.masshabit.squibble.free.activity.e.c: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay$IDelayCompleteListener: delayComplete(com.masshabit.common.Delay)void' label='com.masshabit.common.Delay$IDelayCompleteListener: delayComplete(com.masshabit.common.Delay)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: getName()java.lang.String' label='java.io.File: getName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: setSingleLine()void' label='android.widget.EditText: setSingleLine()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getPackageName()java.lang.String' label='android.content.Context: getPackageName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getBoolean(java.lang.String,boolean)boolean' label='android.os.Bundle: getBoolean(java.lang.String,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Binder: init()void' label='android.os.Binder: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Date: before(java.util.Date)boolean' label='java.util.Date: before(java.util.Date)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' label='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: setWebChromeClient(android.webkit.WebChromeClient)void' label='android.webkit.WebView: setWebChromeClient(android.webkit.WebChromeClient)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$1: init(com.masshabit.squibble.MenuScreen)void' label='com.masshabit.squibble.MenuScreen$1: init(com.masshabit.squibble.MenuScreen)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: start()void' label='com.masshabit.common.Clock: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Iterator: next()java.lang.Object' label='java.util.Iterator: next()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String' label='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: restore()void' label='android.graphics.Canvas: restore()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: init(java.lang.Runnable)void' label='java.lang.Thread: init(java.lang.Runnable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onDestroy()void' label='android.app.Activity: onDestroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.n: a()void' label='com.masshabit.squibble.free.activity.b.n: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSimCountryIso()java.lang.String' label='android.telephony.TelephonyManager: getSimCountryIso()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.h: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.h: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: init(java.util.Collection)void' label='java.util.ArrayList: init(java.util.Collection)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.b: init(com.flurry.android.FlurryAgent)void' label='com.flurry.android.b: init(com.flurry.android.FlurryAgent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)void' label='java.lang.Thread: setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.media.SoundPool: load(android.content.res.AssetFileDescriptor,java.lang.Integer)java.lang.Integer' label='android.media.SoundPool: load(android.content.res.AssetFileDescriptor,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' label='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(D)java.lang.StringBuilder' label='java.lang.StringBuilder: append(D)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.k: b()void' label='com.masshabit.squibble.free.activity.b.k: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: initChildren()void' label='com.masshabit.squibble.Player: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: clinit()void' label='com.masshabit.squibble.ButtonEntity: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.q: start()void' label='com.masshabit.squibble.free.activity.q: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64DecoderException: init()void' label='com.android.vending.licensing.util.Base64DecoderException: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: a()android.content.Context' label='com.masshabit.squibble.free.activity.a.g: a()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: init()void' label='com.masshabit.squibble.free.activity.d.c: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: moveToNext()boolean' label='android.database.Cursor: moveToNext()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' label='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Matcher: find()boolean' label='java.util.regex.Matcher: find()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: update(F)void' label='com.masshabit.squibble.NPC: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.StaticEntity: initChildren()void' label='com.masshabit.common.entity.StaticEntity: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' label='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setTitle(java.lang.CharSequence)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setTitle(java.lang.CharSequence)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: enforceInterface(java.lang.String)void' label='android.os.Parcel: enforceInterface(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.text.SimpleDateFormat: parse(java.lang.String)java.util.Date' label='java.text.SimpleDateFormat: parse(java.lang.String)java.util.Date'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' label='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.j: clinit()void' label='com.masshabit.squibble.free.activity.e.j: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.Menu: add(java.lang.CharSequence)android.view.MenuItem' label='android.view.Menu: add(java.lang.CharSequence)android.view.MenuItem'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: c(java.lang.String,java.lang.String)java.lang.Integer' label='com.flurry.android.Flog: c(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: calcMatrix()void' label='com.masshabit.common.entity.Entity: calcMatrix()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$EaseBase: ease(F)F' label='com.masshabit.common.tween.Ease$EaseBase: ease(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.o: clinit()void' label='com.masshabit.squibble.free.activity.o: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.IllegalBlockSizeException: getMessage()java.lang.String' label='javax.crypto.IllegalBlockSizeException: getMessage()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.n: init(java.lang.String,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.n: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: toString()java.lang.String' label='java.util.HashMap: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.k: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.k: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ObjectPool: allocate()java.lang.Object' label='com.masshabit.common.ObjectPool: allocate()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: get(java.lang.Integer)java.lang.Object' label='java.util.List: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.c: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.c: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' label='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: update(F)void' label='com.masshabit.common.physics.Physics: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.concurrent.Semaphore: init(IZ)void' label='java.util.concurrent.Semaphore: init(IZ)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$3: onTextChanged(java.lang.CharSequence,III)void' label='com.masshabit.squibble.MenuScreen$3: onTextChanged(java.lang.CharSequence,III)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Level: destroy()void' label='com.masshabit.common.Level: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: init(java.lang.Integer)void' label='com.masshabit.common.InputEventPool: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread$UncaughtExceptionHandler: uncaughtException(java.lang.Thread,java.lang.Throwable)void' label='java.lang.Thread$UncaughtExceptionHandler: uncaughtException(java.lang.Thread,java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$3: init(com.masshabit.squibble.MenuScreen,android.app.AlertDialog)void' label='com.masshabit.squibble.MenuScreen$3: init(com.masshabit.squibble.MenuScreen,android.app.AlertDialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ValidationException: init()void' label='com.android.vending.licensing.ValidationException: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: calcMatrix()void' label='com.masshabit.squibble.ButtonEntity: calcMatrix()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void' label='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: startsWith(java.lang.String)boolean' label='java.lang.String: startsWith(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Globals: freeMode()boolean' label='com.masshabit.common.Globals: freeMode()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase$PlayerProfile: init()void' label='com.masshabit.common.ProfileManagerBase$PlayerProfile: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSimOperatorName()java.lang.String' label='android.telephony.TelephonyManager: getSimOperatorName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' label='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object' label='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: toString()java.lang.String' label='java.lang.Class: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: calculateMatrices()void' label='com.masshabit.common.Camera: calculateMatrices()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: clear()void' label='java.util.Map: clear()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.KeyEvent: getAction()java.lang.Integer' label='android.view.KeyEvent: getAction()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer' label='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onPrepareOptionsMenu(android.view.Menu)boolean' label='android.app.Activity: onPrepareOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void' label='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.EntityFactory: init()void' label='com.masshabit.squibble.EntityFactory: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' label='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.h: a()void' label='com.masshabit.squibble.free.activity.b.h: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' label='com.masshabit.common.physics.Particle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.SecureRandom: init()void' label='java.security.SecureRandom: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.p: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.p: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: unbindService(android.content.ServiceConnection)void' label='android.content.Context: unbindService(android.content.ServiceConnection)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: getTextSize()F' label='android.graphics.Paint: getTextSize()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.LocationManager: removeUpdates(android.location.LocationListener)void' label='android.location.LocationManager: removeUpdates(android.location.LocationListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: remove(java.lang.Integer)java.lang.Object' label='java.util.List: remove(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: isActive()boolean' label='com.masshabit.squibble.Player$Hand: isActive()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setTitle(java.lang.Integer)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setTitle(java.lang.Integer)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: setVelocity(FF)void' label='com.masshabit.common.physics.Particle: setVelocity(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.InputFilter$LengthFilter: init(java.lang.Integer)void' label='android.text.InputFilter$LengthFilter: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Node: getFirstChild()org.w3c.dom.Node' label='org.w3c.dom.Node: getFirstChild()org.w3c.dom.Node'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: clearForce()void' label='com.masshabit.common.physics.Particle: clearForce()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: init(com.android.vending.licensing.Policy,com.android.vending.licensing.DeviceLimiter,com.android.vending.licensing.LicenseCheckerCallback,ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.LicenseValidator: init(com.android.vending.licensing.Policy,com.android.vending.licensing.DeviceLimiter,com.android.vending.licensing.LicenseCheckerCallback,ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: rotate(F)void' label='android.graphics.Canvas: rotate(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Looper: getMainLooper()android.os.Looper' label='android.os.Looper: getMainLooper()android.os.Looper'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$3: onMenuItemClick(android.view.MenuItem)boolean' label='com.masshabit.squibble.Game$3: onMenuItemClick(android.view.MenuItem)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: start()void' label='com.masshabit.squibble.free.activity.g: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: access$102(com.masshabit.common.License,java.lang.Integer)java.lang.Integer' label='com.masshabit.common.License: access$102(com.masshabit.common.License,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setMessage(java.lang.Integer)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setMessage(java.lang.Integer)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void' label='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getParcelable(java.lang.String)android.os.Parcelable' label='android.os.Bundle: getParcelable(java.lang.String)android.os.Parcelable'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceHolder: addCallback(android.view.SurfaceHolder$Callback)void' label='android.view.SurfaceHolder: addCallback(android.view.SurfaceHolder$Callback)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Constraint: update(F)void' label='com.masshabit.common.physics.Constraint: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener' label='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: translate(FF)void' label='android.graphics.Canvas: translate(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.f: init()void' label='com.masshabit.squibble.free.activity.e.f: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(android.content.Context)boolean' label='com.masshabit.squibble.free.activity.Pushable: a(android.content.Context)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: initChildren()void' label='com.masshabit.common.entity.Entity: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipEntry: getName()java.lang.String' label='java.util.zip.ZipEntry: getName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.UpsellScreen: update(F)void' label='com.masshabit.squibble.UpsellScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' label='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceHolder: unlockCanvasAndPost(android.graphics.Canvas)void' label='android.view.SurfaceHolder: unlockCanvasAndPost(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEvent: release()void' label='com.masshabit.common.InputEvent: release()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: startService(android.content.Intent)android.content.ComponentName' label='android.content.Context: startService(android.content.Intent)android.content.ComponentName'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: clear()void' label='java.util.HashMap: clear()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$5: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$5: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.EntityProperties: init(java.lang.String,java.lang.String)void' label='com.masshabit.common.entity.EntityProperties: init(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: destroy()void' label='com.masshabit.squibble.Screen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.o: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.o: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: checkTap(FF)boolean' label='com.masshabit.squibble.ButtonEntity: checkTap(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: putParcelable(java.lang.String,android.os.Parcelable)void' label='android.os.Bundle: putParcelable(java.lang.String,android.os.Parcelable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: getIntent()android.content.Intent' label='com.masshabit.squibble.free.activity.h: getIntent()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: updateChildren(F)void' label='com.masshabit.squibble.Player: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: move(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.Camera: move(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getDeviceSoftwareVersion()java.lang.String' label='android.telephony.TelephonyManager: getDeviceSoftwareVersion()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: setLogEnabled(boolean)void' label='com.flurry.android.FlurryAgent: setLogEnabled(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: replaceAll(java.lang.String,java.lang.String)java.lang.String' label='java.lang.String: replaceAll(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: isEmpty()boolean' label='java.util.Map: isEmpty()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Tween: update(F)void' label='com.masshabit.common.tween.Tween: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: c()void' label='com.masshabit.squibble.free.activity.e.o: c()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: access$100(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' label='com.android.vending.licensing.LicenseChecker: access$100(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: updateChildren(F)void' label='com.masshabit.squibble.MainButtonPanel: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommand: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$ShowCommand: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.n: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.n: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: size()java.lang.Integer' label='java.util.Vector: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.System: gc()void' label='java.lang.System: gc()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceView: onTouchEvent(android.view.MotionEvent)boolean' label='android.view.SurfaceView: onTouchEvent(android.view.MotionEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.ConvexHull: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: init(android.content.Context)void' label='com.masshabit.squibble.ProfileManager: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: round(F)java.lang.Integer' label='java.lang.Math: round(F)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: empty()void' label='com.masshabit.common.Deque: empty()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: create()android.app.AlertDialog' label='android.app.AlertDialog$Builder: create()android.app.AlertDialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(boolean)java.lang.StringBuilder' label='java.lang.StringBuilder: append(boolean)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: length()java.lang.Integer' label='java.lang.StringBuffer: length()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Collections: emptyMap()java.util.Map' label='java.util.Collections: emptyMap()java.util.Map'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void' label='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getHistoricalEventTime(java.lang.Integer)J' label='android.view.MotionEvent: getHistoricalEventTime(java.lang.Integer)J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' label='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: getWindow()android.view.Window' label='com.masshabit.squibble.MainActivity: getWindow()android.view.Window'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.ActivityManager: restartPackage(java.lang.String)void' label='android.app.ActivityManager: restartPackage(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void' label='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: saveState(android.os.Bundle)void' label='com.masshabit.common.Layer: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a([B)boolean' label='com.flurry.android.FlurryAgent: a([B)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: e()java.lang.Integer' label='com.masshabit.squibble.free.activity.a.Abstract: e()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentValues: init()void' label='android.content.ContentValues: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: update(F)void' label='com.masshabit.squibble.Player: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileNotFoundException: printStackTrace()void' label='java.io.FileNotFoundException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.HandlerThread: init(java.lang.String)void' label='android.os.HandlerThread: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' label='com.masshabit.squibble.CheckingLicenseScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: init()void' label='com.masshabit.common.Environment: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setDataAndType(android.net.Uri,java.lang.String)android.content.Intent' label='android.content.Intent: setDataAndType(android.net.Uri,java.lang.String)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addAcceleration(FF)void' label='com.masshabit.common.physics.Particle: addAcceleration(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PositionEntity: init()void' label='com.masshabit.squibble.PositionEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: preTranslate(FF)boolean' label='android.graphics.Matrix: preTranslate(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MuteEntity: checkTap(FF)boolean' label='com.masshabit.squibble.MuteEntity: checkTap(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Character: valueOf(C)java.lang.Character' label='java.lang.Character: valueOf(C)java.lang.Character'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: init()void' label='com.masshabit.squibble.WorldMapHud: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: onDestroy()void' label='com.android.vending.licensing.LicenseChecker: onDestroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c.Show: init()void' label='com.masshabit.squibble.free.activity.c.Show: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Service: onStart(android.content.Intent,java.lang.Integer)void' label='android.app.Service: onStart(android.content.Intent,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: checkGroupCollisions()void' label='com.masshabit.common.physics.Physics: checkGroupCollisions()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionGroup: remove(com.masshabit.common.physics.Particle)void' label='com.masshabit.common.physics.CollisionGroup: remove(com.masshabit.common.physics.Particle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy$LicenseResponse: valueOf(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse' label='com.android.vending.licensing.Policy$LicenseResponse: valueOf(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.e: init()void' label='com.masshabit.squibble.free.activity.b.e: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: indexOf(java.lang.String,java.lang.Integer)java.lang.Integer' label='java.lang.String: indexOf(java.lang.String,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' label='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileOutputStream: flush()void' label='java.io.FileOutputStream: flush()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener,android.os.Looper)void' label='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener,android.os.Looper)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: min(FF)F' label='java.lang.Math: min(FF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: toString()java.lang.String' label='com.masshabit.common.curve.CubicBezier: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Node: getNodeValue()java.lang.String' label='org.w3c.dom.Node: getNodeValue()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.r: clinit()void' label='com.masshabit.squibble.free.activity.e.r: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent' label='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: iterator()java.util.Iterator' label='java.util.List: iterator()java.util.Iterator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.RuntimeException: init(java.lang.String,java.lang.Throwable)void' label='java.lang.RuntimeException: init(java.lang.String,java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: init()void' label='com.masshabit.common.Layer: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void' label='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' label='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: setClickable(boolean)void' label='com.masshabit.squibble.MainView: setClickable(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.b: init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.b: init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: setPosition(FF)void' label='com.masshabit.common.physics.Particle: setPosition(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: getElementsByTagName(java.lang.String)org.w3c.dom.NodeList' label='org.w3c.dom.Element: getElementsByTagName(java.lang.String)org.w3c.dom.NodeList'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Long: parseLong(java.lang.String)J' label='java.lang.Long: parseLong(java.lang.String)J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MuteEntity: toggle()void' label='com.masshabit.squibble.MuteEntity: toggle()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: init(android.content.Context)void' label='com.masshabit.common.License: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.AssetManager: openFd(java.lang.String)android.content.res.AssetFileDescriptor' label='android.content.res.AssetManager: openFd(java.lang.String)android.content.res.AssetFileDescriptor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.SecretKey: getEncoded()[B' label='javax.crypto.SecretKey: getEncoded()[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: add(java.lang.Object)boolean' label='java.util.Vector: add(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity$1: init(com.masshabit.squibble.MainActivity,[Ljava.lang.String)void' label='com.masshabit.squibble.MainActivity$1: init(com.masshabit.squibble.MainActivity,[Ljava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: clinit()void' label='com.masshabit.squibble.free.activity.c: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: d()void' label='com.masshabit.squibble.free.activity.a.g: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: easeOut(F)F' label='com.masshabit.common.tween.Ease: easeOut(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeString(java.lang.String)void' label='android.os.Parcel: writeString(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.RectF: init()void' label='android.graphics.RectF: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Set: contains(java.lang.Object)boolean' label='java.util.Set: contains(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.s: d()void' label='com.masshabit.squibble.free.activity.a.s: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: clearImpulse()void' label='com.masshabit.common.physics.CircleParticle: clearImpulse()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: reportNode(com.masshabit.squibble.WorldMapNode)java.lang.Integer' label='com.masshabit.squibble.WorldMapGraph: reportNode(com.masshabit.squibble.WorldMapNode)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processSTARTAction()void' label='com.masshabit.squibble.free.activity.g: processSTARTAction()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.i: run()void' label='com.masshabit.squibble.free.activity.i: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' label='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: init()void' label='android.app.Activity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationResourceMap: init(ILcom.masshabit.common.resource.BitmapResourceMap)void' label='com.masshabit.common.resource.AnimationResourceMap: init(ILcom.masshabit.common.resource.BitmapResourceMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clinit()void' label='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void' label='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String' label='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ICollisionListener: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' label='com.masshabit.common.physics.ICollisionListener: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen$1: init(com.masshabit.squibble.GameScreen,com.masshabit.common.Environment)void' label='com.masshabit.squibble.GameScreen$1: init(com.masshabit.squibble.GameScreen,com.masshabit.common.Environment)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileOutputStream: write([B)void' label='java.io.FileOutputStream: write([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.u: c()boolean' label='com.masshabit.squibble.free.activity.a.u: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: reset()void' label='android.graphics.Matrix: reset()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: castGrapple(FF)boolean' label='com.masshabit.squibble.Player: castGrapple(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getNetworkCountryIso()java.lang.String' label='android.telephony.TelephonyManager: getNetworkCountryIso()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: values()[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode' label='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: values()[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: setKeepScreenOn(boolean)void' label='com.masshabit.squibble.MainView: setKeepScreenOn(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen$1: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void' label='com.masshabit.squibble.CheckingLicenseScreen$1: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog: getButton(java.lang.Integer)android.widget.Button' label='android.app.AlertDialog: getButton(java.lang.Integer)android.widget.Button'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.j: d()void' label='com.masshabit.squibble.free.activity.a.j: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.i: init()void' label='com.masshabit.squibble.free.activity.e.i: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Service: onLowMemory()void' label='android.app.Service: onLowMemory()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.s: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.s: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: getPackageName()java.lang.String' label='com.android.vending.licensing.LicenseValidator: getPackageName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.f: init()void' label='com.masshabit.squibble.free.activity.f: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onStop()void' label='com.masshabit.squibble.MainActivity: onStop()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: destroy()void' label='com.masshabit.squibble.SplashScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: b()boolean' label='com.masshabit.squibble.free.activity.c: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.p: d()void' label='com.masshabit.squibble.free.activity.a.p: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' label='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' label='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: delete()boolean' label='java.io.File: delete()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: init()void' label='android.graphics.Paint: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: getResources()android.content.res.Resources' label='com.masshabit.squibble.MainActivity: getResources()android.content.res.Resources'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentValues: put(java.lang.String,java.lang.String)void' label='android.content.ContentValues: put(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.entity.ByteArrayEntity: setContentType(java.lang.String)void' label='org.apache.http.entity.ByteArrayEntity: setContentType(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence' label='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void' label='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Enum: init(java.lang.String,java.lang.Integer)void' label='java.lang.Enum: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.concurrent.Semaphore: release()void' label='java.util.concurrent.Semaphore: release()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: getCallback()com.android.vending.licensing.LicenseCheckerCallback' label='com.android.vending.licensing.LicenseValidator: getCallback()com.android.vending.licensing.LicenseCheckerCallback'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: preScale(FF)boolean' label='android.graphics.Matrix: preScale(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object' label='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,boolean)void' label='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: toString()java.lang.String' label='java.lang.StringBuilder: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.OutputStream: write([BII)void' label='java.io.OutputStream: write([BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: perp()void' label='com.masshabit.common.physics.Vector2: perp()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: ready()boolean' label='com.masshabit.common.License: ready()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.StrictPolicy: init()void' label='com.android.vending.licensing.StrictPolicy: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Looper: quit()void' label='android.os.Looper: quit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Level: init(java.lang.String)void' label='com.masshabit.common.Level: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: getBitmap(java.lang.Integer)android.graphics.Bitmap' label='com.masshabit.squibble.StoryScreen: getBitmap(java.lang.Integer)android.graphics.Bitmap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: valueOf(java.lang.String)com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode' label='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: valueOf(java.lang.String)com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: loadSound(ILjava.lang.String)void' label='com.masshabit.squibble.GameScreen: loadSound(ILjava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' label='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map$Entry: getValue()java.lang.Object' label='java.util.Map$Entry: getValue()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' label='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' label='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.q: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.m: d()void' label='com.masshabit.squibble.free.activity.a.m: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R: init()void' label='com.android.vending.licensing.R: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: nextStep()void' label='com.masshabit.squibble.HowToScreen: nextStep()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.SecretKeyFactory: getInstance(java.lang.String)javax.crypto.SecretKeyFactory' label='javax.crypto.SecretKeyFactory: getInstance(java.lang.String)javax.crypto.SecretKeyFactory'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: delayComplete(com.masshabit.common.Delay)void' label='com.masshabit.squibble.Game: delayComplete(com.masshabit.common.Delay)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64DecoderException: getMessage()java.lang.String' label='com.android.vending.licensing.util.Base64DecoderException: getMessage()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: a(com.masshabit.squibble.free.activity.a.g,boolean)boolean' label='com.masshabit.squibble.free.activity.a.g: a(com.masshabit.squibble.free.activity.a.g,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSimSerialNumber()java.lang.String' label='android.telephony.TelephonyManager: getSimSerialNumber()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: getPoint1(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.SegmentParticle: getPoint1(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: onMutedChanged(boolean)void' label='com.masshabit.squibble.Screen: onMutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.xml.parsers.DocumentBuilder: parse(java.io.InputStream)org.w3c.dom.Document' label='javax.xml.parsers.DocumentBuilder: parse(java.io.InputStream)org.w3c.dom.Document'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: update(F)void' label='com.masshabit.squibble.StoryScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.PreferenceObfuscator: commit()void' label='com.android.vending.licensing.PreferenceObfuscator: commit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: isMuted()boolean' label='com.masshabit.common.Environment: isMuted()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Globals: clinit()void' label='com.masshabit.common.Globals: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.r: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.r: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: saveState(android.os.Bundle)void' label='com.masshabit.squibble.NPC: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: destroy()void' label='com.masshabit.squibble.ProfileManager: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.CheckingLicenseScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' label='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.l: b()void' label='com.masshabit.squibble.free.activity.b.l: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ValidationException: init(java.lang.String)void' label='com.android.vending.licensing.ValidationException: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.g: b()void' label='com.masshabit.squibble.free.activity.b.g: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: setPosition(FF)void' label='com.masshabit.squibble.Player: setPosition(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: setVelocity(FF)void' label='com.masshabit.common.physics.CircleParticle: setVelocity(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Timer: schedule(java.util.TimerTask,J)void' label='java.util.Timer: schedule(java.util.TimerTask,J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.AssetManager: list(java.lang.String)[Ljava.lang.String' label='android.content.res.AssetManager: list(java.lang.String)[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: update(F)void' label='com.masshabit.squibble.HowToScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.IEntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' label='com.masshabit.common.entity.IEntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: getPath()java.lang.String' label='java.io.File: getPath()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: init(android.content.Context)void' label='android.widget.EditText: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' label='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils: join(java.lang.CharSequence,[Ljava.lang.Object)java.lang.String' label='android.text.TextUtils: join(java.lang.CharSequence,[Ljava.lang.Object)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: init([BII)void' label='java.lang.String: init([BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c.Show: show()void' label='com.masshabit.squibble.free.activity.c.Show: show()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ListView: init(android.content.Context)void' label='android.widget.ListView: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onStop()void' label='android.app.Activity: onStop()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileOutputStream: close()void' label='java.io.FileOutputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: move(FF)void' label='com.masshabit.common.physics.Particle: move(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: startThread()void' label='com.masshabit.common.Environment: startThread()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: init()void' label='java.util.Vector: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences$Editor: putString(java.lang.String,java.lang.String)android.content.SharedPreferences$Editor' label='android.content.SharedPreferences$Editor: putString(java.lang.String,java.lang.String)android.content.SharedPreferences$Editor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.StoryScreen: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.q: b()void' label='com.masshabit.squibble.free.activity.b.q: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.a: init(com.flurry.android.FlurryAgent,android.content.Context)void' label='com.flurry.android.a: init(com.flurry.android.FlurryAgent,android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.l: start()void' label='com.masshabit.squibble.free.activity.e.l: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.b: b()void' label='com.masshabit.squibble.free.activity.b.b: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$layout: init()void' label='com.masshabit.squibble.free.R$layout: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: init()void' label='com.masshabit.squibble.free.activity.h: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: toString()java.lang.String' label='java.lang.StringBuffer: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onError(java.lang.String,java.lang.String,java.lang.String)void' label='com.flurry.android.FlurryAgent: onError(java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void' label='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.l: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.l: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: init(java.lang.Runnable,java.lang.String)void' label='java.lang.Thread: init(java.lang.Runnable,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: check()void' label='com.masshabit.common.License: check()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getFloat(java.lang.String)F' label='android.os.Bundle: getFloat(java.lang.String)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: updateChildren(F)void' label='com.masshabit.squibble.NPC: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Button: init(android.content.Context)void' label='android.widget.Button: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: toHexString(java.lang.Integer)java.lang.String' label='java.lang.Integer: toHexString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.t: a()void' label='com.masshabit.squibble.free.activity.b.t: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.v: b()void' label='com.masshabit.squibble.free.activity.b.v: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onConfigurationChanged(android.content.res.Configuration)void' label='android.app.Activity: onConfigurationChanged(android.content.res.Configuration)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Bitmap: getHeight()java.lang.Integer' label='android.graphics.Bitmap: getHeight()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: getResponseCode()java.lang.Integer' label='java.net.HttpURLConnection: getResponseCode()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: matrixTransform(android.graphics.Matrix,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Vector2: matrixTransform(android.graphics.Matrix,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.k: run()void' label='com.masshabit.squibble.free.activity.k: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Boolean: valueOf(boolean)java.lang.Boolean' label='java.lang.Boolean: valueOf(boolean)java.lang.Boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' label='com.masshabit.squibble.Profile: load(org.json.JSONObject)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SegmentParticle: getLengthSquared()F' label='com.masshabit.common.physics.SegmentParticle: getLengthSquared()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String' label='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.v: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.v: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.f: onLocationChanged(android.location.Location)void' label='com.masshabit.squibble.free.activity.e.f: onLocationChanged(android.location.Location)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentResolver: insert(android.net.Uri,android.content.ContentValues)android.net.Uri' label='android.content.ContentResolver: insert(android.net.Uri,android.content.ContentValues)android.net.Uri'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: setDebugMode()void' label='com.masshabit.squibble.free.activity.h: setDebugMode()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.o: a()[Lcom.masshabit.squibble.free.activity.o' label='com.masshabit.squibble.free.activity.o: a()[Lcom.masshabit.squibble.free.activity.o'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' label='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ResponseData: init()void' label='com.android.vending.licensing.ResponseData: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Queue: offer(java.lang.Object)boolean' label='java.util.Queue: offer(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ProgressBar: setProgress(java.lang.Integer)void' label='android.widget.ProgressBar: setProgress(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: clinit()void' label='com.masshabit.squibble.free.activity.a.Abstract: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: setActive(boolean)void' label='com.masshabit.squibble.WorldMapHud: setActive(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void' label='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.Cipher: doFinal([B)[B' label='javax.crypto.Cipher: doFinal([B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: b()void' label='com.masshabit.squibble.free.activity.e.o: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setNegativeButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setNegativeButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer' label='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Float: parseFloat(java.lang.String)F' label='java.lang.Float: parseFloat(java.lang.String)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebChromeClient: init()void' label='android.webkit.WebChromeClient: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: init()void' label='com.masshabit.squibble.Profile: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processDOWNLOAD_OK_Action()void' label='com.masshabit.squibble.free.activity.g: processDOWNLOAD_OK_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicenseResultListener' label='com.android.vending.licensing.ILicenseResultListener$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicenseResultListener'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: setContentView(java.lang.Integer)void' label='com.masshabit.squibble.MainActivity: setContentView(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.SplashScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: c(com.masshabit.squibble.free.activity.h)[Lcom.masshabit.squibble.free.activity.e.b' label='com.masshabit.squibble.free.activity.h: c(com.masshabit.squibble.free.activity.h)[Lcom.masshabit.squibble.free.activity.e.b'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.b: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.b: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: findLocation()void' label='com.masshabit.squibble.WorldMapPlayer: findLocation()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: init()void' label='com.masshabit.squibble.MainActivity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.b: init(com.masshabit.squibble.free.activity.d.a,com.masshabit.squibble.free.activity.d.d)void' label='com.masshabit.squibble.free.activity.d.b: init(com.masshabit.squibble.free.activity.d.a,com.masshabit.squibble.free.activity.d.d)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: lastIndexOf(java.lang.Integer)java.lang.Integer' label='java.lang.String: lastIndexOf(java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.HandlerThread: getLooper()android.os.Looper' label='android.os.HandlerThread: getLooper()android.os.Looper'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Tween: isDone()boolean' label='com.masshabit.common.tween.Tween: isDone()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.p: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.p: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onResume()void' label='android.app.Activity: onResume()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: getFirstChild()org.w3c.dom.Node' label='org.w3c.dom.Element: getFirstChild()org.w3c.dom.Node'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$layout: init()void' label='com.android.vending.licensing.R$layout: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder' label='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.SpringConstraint: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.BitmapFactory: decodeStream(java.io.InputStream)android.graphics.Bitmap' label='android.graphics.BitmapFactory: decodeStream(java.io.InputStream)android.graphics.Bitmap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: trim()java.lang.String' label='java.lang.String: trim()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Bitmap: getConfig()android.graphics.Bitmap$Config' label='android.graphics.Bitmap: getConfig()android.graphics.Bitmap$Config'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: preRotate(F)boolean' label='android.graphics.Matrix: preRotate(F)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' label='com.masshabit.squibble.Profile: save(org.json.JSONObject)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' label='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.Socket: init(java.lang.String,java.lang.Integer)void' label='java.net.Socket: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$1: init()void' label='com.masshabit.common.tween.Ease$1: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: iterator()java.util.Iterator' label='java.util.Vector: iterator()java.util.Iterator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.KeyFactory: getInstance(java.lang.String)java.security.KeyFactory' label='java.security.KeyFactory: getInstance(java.lang.String)java.security.KeyFactory'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: init()void' label='com.masshabit.squibble.Game: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CurveParser: init()void' label='com.masshabit.common.curve.CurveParser: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.OutputStream: write([B)void' label='java.io.OutputStream: write([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: quit()void' label='com.masshabit.common.Environment: quit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: init(java.lang.String)void' label='java.lang.String: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase' label='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceView: onKeyUp(ILandroid.view.KeyEvent)boolean' label='android.view.SurfaceView: onKeyUp(ILandroid.view.KeyEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object' label='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.c)void' label='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.c)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: remove(java.lang.Object)boolean' label='java.util.Vector: remove(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: j()void' label='com.masshabit.squibble.free.activity.e.k: j()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: initChildren()void' label='com.masshabit.squibble.MainButtonPanel: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CreditsScreen: init()void' label='com.masshabit.squibble.CreditsScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.l: d()void' label='com.masshabit.squibble.free.activity.a.l: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processIDLEAction()void' label='com.masshabit.squibble.free.activity.g: processIDLEAction()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.CharSequence: length()java.lang.Integer' label='java.lang.CharSequence: length()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: init()void' label='com.masshabit.squibble.ButtonEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentResolver: delete(android.net.Uri,java.lang.String,[Ljava.lang.String)java.lang.Integer' label='android.content.ContentResolver: delete(android.net.Uri,java.lang.String,[Ljava.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.StoryScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: init()void' label='com.masshabit.squibble.ItemEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$2: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$2: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer' label='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License$MyCallback: allow()void' label='com.masshabit.common.License$MyCallback: allow()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.t: run()void' label='com.masshabit.squibble.free.activity.a.t: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processTRANSACT_OK_Action()void' label='com.masshabit.squibble.free.activity.g: processTRANSACT_OK_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.Closeable: close()void' label='java.io.Closeable: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: putExtras(android.os.Bundle)android.content.Intent' label='android.content.Intent: putExtras(android.os.Bundle)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: d()void' label='com.masshabit.squibble.free.activity.a.q: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: clinit()void' label='com.android.vending.licensing.LicenseChecker: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: max(FF)F' label='java.lang.Math: max(FF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.VectorPool: fill()void' label='com.masshabit.common.physics.VectorPool: fill()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: destroy()void' label='com.masshabit.squibble.GameScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setDoOutput(boolean)void' label='java.net.HttpURLConnection: setDoOutput(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' label='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Layer: update(F)void' label='com.masshabit.common.Layer: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' label='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock$Time: init(com.masshabit.common.Clock,J)void' label='com.masshabit.common.Clock$Time: init(com.masshabit.common.Clock,J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.Window: setFlags(II)void' label='android.view.Window: setFlags(II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' label='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout: setGravity(java.lang.Integer)void' label='android.widget.LinearLayout: setGravity(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' label='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: init(java.lang.Object,com.masshabit.squibble.free.activity.d.d,com.masshabit.squibble.free.activity.d.d,[Lcom.masshabit.squibble.free.activity.d.b)void' label='com.masshabit.squibble.free.activity.d.e: init(java.lang.Object,com.masshabit.squibble.free.activity.d.d,com.masshabit.squibble.free.activity.d.d,[Lcom.masshabit.squibble.free.activity.d.b)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void' label='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: getSize()java.lang.Integer' label='com.masshabit.common.Deque: getSize()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionGroup: init(II)void' label='com.masshabit.common.physics.CollisionGroup: init(II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void' label='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.r: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.r: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setCancelable(boolean)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setCancelable(boolean)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' label='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils$SimpleStringSplitter: init(C)void' label='android.text.TextUtils$SimpleStringSplitter: init(C)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: putFloat(java.lang.String,F)void' label='android.os.Bundle: putFloat(java.lang.String,F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$drawable: init()void' label='com.masshabit.squibble.free.R$drawable: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor' label='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.SmsMessage: createFromPdu([B)android.telephony.SmsMessage' label='android.telephony.SmsMessage: createFromPdu([B)android.telephony.SmsMessage'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: getBytes()[B' label='java.lang.String: getBytes()[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.LocationManager: getBestProvider(android.location.Criteria,boolean)java.lang.String' label='android.location.LocationManager: getBestProvider(android.location.Criteria,boolean)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: setVelocity(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.CircleParticle: setVelocity(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: saveState(android.os.Bundle)void' label='com.masshabit.common.Camera: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: keySet()java.util.Set' label='java.util.HashMap: keySet()java.util.Set'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setComponent(android.content.ComponentName)android.content.Intent' label='android.content.Intent: setComponent(android.content.ComponentName)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' label='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' label='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.RuntimeException: init(java.lang.Throwable)void' label='java.lang.RuntimeException: init(java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: init()void' label='com.flurry.android.Flog: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' label='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.s: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.s: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: checkTap(FF)com.masshabit.squibble.WorldMapNode' label='com.masshabit.squibble.WorldMapGraph: checkTap(FF)com.masshabit.squibble.WorldMapNode'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: move(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: move(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: c()boolean' label='com.masshabit.squibble.free.activity.a.g: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addVelocity(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: addVelocity(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: destroy()void' label='com.masshabit.squibble.WorldMapScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: setFocused(boolean)void' label='com.masshabit.common.Environment: setFocused(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: toCharArray()[C' label='java.lang.String: toCharArray()[C'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Dialog: show()void' label='android.app.Dialog: show()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils: isEmpty(java.lang.CharSequence)boolean' label='android.text.TextUtils: isEmpty(java.lang.CharSequence)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.c: c()boolean' label='com.masshabit.squibble.free.activity.a.c: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: init()void' label='com.masshabit.squibble.free.activity.e.c: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.SystemClock: uptimeMillis()J' label='android.os.SystemClock: uptimeMillis()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.o: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.o: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: init()void' label='com.masshabit.squibble.MainButtonPanel: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getAction()java.lang.Integer' label='android.view.MotionEvent: getAction()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.k: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.k: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: removeAll(java.util.Collection)boolean' label='java.util.List: removeAll(java.util.Collection)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.g: init()void' label='com.masshabit.squibble.free.activity.e.g: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URL: init(java.lang.String)void' label='java.net.URL: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getString(java.lang.Integer)java.lang.String' label='android.content.Context: getString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' label='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setRequestProperty(java.lang.String,java.lang.String)void' label='java.net.HttpURLConnection: setRequestProperty(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getNetworkOperator()java.lang.String' label='android.telephony.TelephonyManager: getNetworkOperator()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer' label='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawRect(FFFFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawRect(FFFFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clone()java.lang.Object' label='[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clone()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.c: init(com.flurry.android.FlurryAgent,android.content.Context,boolean)void' label='com.flurry.android.c: init(com.flurry.android.FlurryAgent,android.content.Context,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Profile$CompletedLevel: init(java.lang.String,F)void' label='com.masshabit.squibble.Profile$CompletedLevel: init(java.lang.String,F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: getDouble(java.lang.String)D' label='org.json.JSONObject: getDouble(java.lang.String)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub: init()void' label='com.android.vending.licensing.ILicensingService$Stub: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: transform(android.graphics.Matrix)void' label='com.masshabit.common.physics.Vector2: transform(android.graphics.Matrix)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d: init()void' label='com.masshabit.squibble.free.activity.d: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a: b()boolean' label='com.masshabit.squibble.free.activity.a: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: surfaceCreated(android.view.SurfaceHolder)void' label='com.masshabit.squibble.MainView: surfaceCreated(android.view.SurfaceHolder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment$IMutedChangedListener: mutedChanged(boolean)void' label='com.masshabit.common.Environment$IMutedChangedListener: mutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: toString()java.lang.String' label='java.util.ArrayList: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: init()void' label='com.masshabit.common.curve.CubicBezier: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URLEncoder: encode(java.lang.String,java.lang.String)java.lang.String' label='java.net.URLEncoder: encode(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getString(java.lang.String)java.lang.String' label='android.os.Bundle: getString(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: clinit()void' label='com.android.vending.licensing.util.Base64: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.ResourceMap: get(java.lang.Integer)java.lang.Object' label='com.masshabit.common.resource.ResourceMap: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: init()void' label='com.masshabit.squibble.PlayerSelectPanel: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Matcher: matches()boolean' label='java.util.regex.Matcher: matches()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipInputStream: init(java.io.InputStream)void' label='java.util.zip.ZipInputStream: init(java.io.InputStream)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: create(android.content.Context)com.masshabit.common.ProfileManagerBase' label='com.masshabit.common.ProfileManagerBase: create(android.content.Context)com.masshabit.common.ProfileManagerBase'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.VectorPool: init()void' label='com.masshabit.common.physics.VectorPool: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.d: a()void' label='com.masshabit.squibble.free.activity.d.d: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Timer: init()void' label='java.util.Timer: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Color: parseColor(java.lang.String)java.lang.Integer' label='android.graphics.Color: parseColor(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: clinit()void' label='com.masshabit.common.tween.Ease: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: updateChildren(F)void' label='com.masshabit.common.entity.Entity: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setDoInput(boolean)void' label='java.net.HttpURLConnection: setDoInput(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Throwable: getMessage()java.lang.String' label='java.lang.Throwable: getMessage()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: e()java.lang.String' label='com.masshabit.squibble.free.activity.e: e()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: initChildren()void' label='com.masshabit.common.entity.AnimatedEntity: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommand: set(IF)void' label='com.masshabit.squibble.Game$ShowCommand: set(IF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void' label='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: clinit()void' label='com.masshabit.common.physics.SpringConstraint: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getContentResolver()android.content.ContentResolver' label='android.content.Context: getContentResolver()android.content.ContentResolver'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.b: init(com.masshabit.squibble.free.activity.a.d,java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.b: init(com.masshabit.squibble.free.activity.a.d,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.p: a([B)[B' label='com.masshabit.squibble.free.activity.e.p: a([B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' label='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: toString()java.lang.String' label='com.masshabit.squibble.free.activity.d.e: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$array: init()void' label='com.android.vending.licensing.R$array: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.q: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: bindService(android.content.Intent,android.content.ServiceConnection,java.lang.Integer)boolean' label='android.content.Context: bindService(android.content.Intent,android.content.ServiceConnection,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: toString()java.lang.String' label='org.json.JSONObject: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: toString(java.lang.Integer)java.lang.String' label='java.lang.Integer: toString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.reflect.Method: invoke(java.lang.Object,[Ljava.lang.Object)java.lang.Object' label='java.lang.reflect.Method: invoke(java.lang.Object,[Ljava.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer' label='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer' label='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils$StringSplitter: setString(java.lang.String)void' label='android.text.TextUtils$StringSplitter: setString(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: instance()com.masshabit.common.License' label='com.masshabit.common.License: instance()com.masshabit.common.License'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.f: d()void' label='com.masshabit.squibble.free.activity.a.f: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences: getString(java.lang.String,java.lang.String)java.lang.String' label='android.content.SharedPreferences: getString(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: f()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: pow(DD)D' label='java.lang.Math: pow(DD)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.e.m)void' label='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.e.m)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: e()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: mutedChanged(boolean)void' label='com.masshabit.squibble.Game: mutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: m()void' label='com.masshabit.squibble.free.activity.e.k: m()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Environment: getExternalStorageState()java.lang.String' label='android.os.Environment: getExternalStorageState()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.SmsMessage: getDisplayMessageBody()java.lang.String' label='android.telephony.SmsMessage: getDisplayMessageBody()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: endsWith(java.lang.String)boolean' label='java.lang.String: endsWith(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' label='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addImpulse(FF)void' label='com.masshabit.common.physics.Particle: addImpulse(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Bitmap: getWidth()java.lang.Integer' label='android.graphics.Bitmap: getWidth()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void' label='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void' label='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Service: init()void' label='android.app.Service: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getBoolean(java.lang.String)boolean' label='android.os.Bundle: getBoolean(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: showLoading()boolean' label='com.masshabit.squibble.Screen: showLoading()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: init(java.lang.Integer)void' label='java.util.HashMap: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.A: init(com.masshabit.squibble.free.activity.h,android.content.Context,I[Ljava.lang.String)void' label='com.masshabit.squibble.free.activity.A: init(com.masshabit.squibble.free.activity.h,android.content.Context,I[Ljava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent' label='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: d()void' label='com.flurry.android.FlurryAgent: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void' label='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: divide(F)void' label='com.masshabit.common.physics.Vector2: divide(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: rewindAndStop()void' label='com.masshabit.common.resource.AnimationState: rewindAndStop()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URLDecoder: decode(java.lang.String)java.lang.String' label='java.net.URLDecoder: decode(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: join()void' label='java.lang.Thread: join()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: length()J' label='java.io.File: length()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: get(java.lang.Integer)java.lang.Object' label='java.util.Vector: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipInputStream: closeEntry()void' label='java.util.zip.ZipInputStream: closeEntry()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceView: init(android.content.Context,android.util.AttributeSet)void' label='android.view.SurfaceView: init(android.content.Context,android.util.AttributeSet)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: clinit()void' label='com.masshabit.common.curve.CubicBezier: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: b()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addVelocity(FF)void' label='com.masshabit.common.physics.Particle: addVelocity(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' label='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationLoader: init()void' label='com.masshabit.common.resource.AnimationLoader: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: mapPoints([F)void' label='android.graphics.Matrix: mapPoints([F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.u: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.u: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: sleep(J)void' label='java.lang.Thread: sleep(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: lockChildren()void' label='com.masshabit.squibble.WorldMapNode: lockChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.j: run()void' label='com.masshabit.squibble.free.activity.j: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$attr: init()void' label='com.android.vending.licensing.R$attr: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setFilterBitmap(boolean)void' label='android.graphics.Paint: setFilterBitmap(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: init()void' label='java.util.ArrayList: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: onTouchEvent(android.view.MotionEvent)boolean' label='com.masshabit.squibble.MainView: onTouchEvent(android.view.MotionEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipInputStream: read([B)java.lang.Integer' label='java.util.zip.ZipInputStream: read([B)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: h()boolean' label='com.masshabit.squibble.free.activity.a.Abstract: h()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(J)void' label='com.masshabit.squibble.free.activity.g: a(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' label='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.reflect.Method: setAccessible(boolean)void' label='java.lang.reflect.Method: setAccessible(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseCheckerCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' label='com.android.vending.licensing.LicenseCheckerCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.ViewGroup$LayoutParams: init(II)void' label='android.view.ViewGroup$LayoutParams: init(II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' label='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$4: onMenuItemClick(android.view.MenuItem)boolean' label='com.masshabit.squibble.Game$4: onMenuItemClick(android.view.MenuItem)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: setText(java.lang.CharSequence)void' label='android.widget.EditText: setText(java.lang.CharSequence)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: onStart()void' label='android.app.Activity: onStart()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: setVolumeControlStream(java.lang.Integer)void' label='com.masshabit.squibble.MainActivity: setVolumeControlStream(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' label='com.android.vending.licensing.ILicensingService: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.PlayerSelectPanel: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$array: init()void' label='com.masshabit.squibble.R$array: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.p: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.p: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.u: d()void' label='com.masshabit.squibble.free.activity.a.u: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: putString(java.lang.String,java.lang.String)void' label='android.os.Bundle: putString(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.n: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.n: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' label='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: init()void' label='com.android.vending.licensing.util.Base64: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.Signature: verify([B)boolean' label='java.security.Signature: verify([B)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.f: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.f: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.UpsellScreen: destroy()void' label='com.masshabit.squibble.UpsellScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void' label='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionComponents: init()void' label='com.masshabit.common.physics.CollisionComponents: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: getLooper()android.os.Looper' label='android.os.Handler: getLooper()android.os.Looper'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPath: clinit()void' label='com.masshabit.squibble.WorldMapPath: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' label='com.masshabit.squibble.ItemEntity: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.k: d()void' label='com.masshabit.squibble.free.activity.a.k: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a()void' label='com.flurry.android.FlurryAgent: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.TimerTask: init()void' label='java.util.TimerTask: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: dispatchEvents()void' label='com.masshabit.common.Environment: dispatchEvents()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: unregisterConstraint(com.masshabit.common.physics.Constraint)void' label='com.masshabit.common.physics.Physics: unregisterConstraint(com.masshabit.common.physics.Constraint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: obtainMessage(III)android.os.Message' label='android.os.Handler: obtainMessage(III)android.os.Message'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: clinit()void' label='com.masshabit.squibble.PlayerSelectPanel: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: a(java.lang.String)boolean' label='com.flurry.android.Flog: a(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.net.Uri: withAppendedPath(android.net.Uri,java.lang.String)android.net.Uri' label='android.net.Uri: withAppendedPath(android.net.Uri,java.lang.String)android.net.Uri'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.MainActivity: init()void' label='com.masshabit.squibble.free.MainActivity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.w: b()void' label='com.masshabit.squibble.free.activity.b.w: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: onMutedChanged(boolean)void' label='com.masshabit.squibble.MenuScreen: onMutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: update(F)void' label='com.masshabit.squibble.Game: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setType(java.lang.String)android.content.Intent' label='android.content.Intent: setType(java.lang.String)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HidableEntity: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.HidableEntity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: init(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Vector2: init(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: clearCache(boolean)void' label='android.webkit.WebView: clearCache(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void' label='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: isLoggable(java.lang.String,java.lang.Integer)boolean' label='android.util.Log: isLoggable(java.lang.String,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.BitmapFactory: decodeResource(android.content.res.Resources,java.lang.Integer)android.graphics.Bitmap' label='android.graphics.BitmapFactory: decodeResource(android.content.res.Resources,java.lang.Integer)android.graphics.Bitmap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: start()void' label='java.lang.Thread: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getDeviceId()java.lang.String' label='android.telephony.TelephonyManager: getDeviceId()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.ServerSocket: init(java.lang.Integer)void' label='java.net.ServerSocket: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.StaticEntity: init()void' label='com.masshabit.common.entity.StaticEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' label='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: onWindowFocusChanged(boolean)void' label='com.masshabit.squibble.MainView: onWindowFocusChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: getCollisionComponents(com.masshabit.common.physics.Vector2)com.masshabit.common.physics.CollisionComponents' label='com.masshabit.common.physics.Particle: getCollisionComponents(com.masshabit.common.physics.Vector2)com.masshabit.common.physics.CollisionComponents'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: next()void' label='com.masshabit.squibble.StoryScreen: next()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: resolveConnections()void' label='com.masshabit.squibble.WorldMapNode: resolveConnections()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.LinearLayout$LayoutParams: init(IIF)void' label='android.widget.LinearLayout$LayoutParams: init(IIF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.d: a()void' label='com.masshabit.squibble.free.activity.b.d: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: calcMatrix()void' label='com.masshabit.squibble.NPC: calcMatrix()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: run()void' label='com.masshabit.common.Environment: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: findConnection(java.lang.Integer)java.lang.Integer' label='com.masshabit.squibble.WorldMapNode: findConnection(java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' label='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,F)void' label='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void' label='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void' label='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.p: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.p: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: registerGroup(com.masshabit.common.physics.CollisionGroup)void' label='com.masshabit.common.physics.Physics: registerGroup(com.masshabit.common.physics.CollisionGroup)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: init()void' label='com.masshabit.common.Clock: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.z: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.z: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$drawable: init()void' label='com.android.vending.licensing.R$drawable: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceHolder: lockCanvas(android.graphics.Rect)android.graphics.Canvas' label='android.view.SurfaceHolder: lockCanvas(android.graphics.Rect)android.graphics.Canvas'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.p: a()void' label='com.masshabit.squibble.free.activity.b.p: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URI: init(java.lang.String)void' label='java.net.URI: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getAssets()android.content.res.AssetManager' label='android.content.Context: getAssets()android.content.res.AssetManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void' label='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' label='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.m: b()void' label='com.masshabit.squibble.free.activity.b.m: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' label='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: read([BII)java.lang.Integer' label='java.io.DataInputStream: read([BII)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.r: clinit()void' label='com.masshabit.squibble.free.activity.b.r: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' label='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.IBinder: transact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' label='android.os.IBinder: transact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder' label='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' label='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: clearForce()void' label='com.masshabit.common.physics.CircleParticle: clearForce()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(java.lang.Object,java.lang.Object)java.lang.Integer' label='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(java.lang.Object,java.lang.Object)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: a(DD)void' label='com.masshabit.squibble.free.activity.e.d: a(DD)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void' label='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: getAvailable()java.lang.Integer' label='com.masshabit.common.InputEventPool: getAvailable()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void' label='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' label='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' label='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.DeviceLimiter: isDeviceAllowed(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse' label='com.android.vending.licensing.DeviceLimiter: isDeviceAllowed(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.k: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.k: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.KeyEvent: getKeyCode()java.lang.Integer' label='android.view.KeyEvent: getKeyCode()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Thread: init()void' label='java.lang.Thread: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFI)void' label='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFI)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: setRetryCount(J)void' label='com.android.vending.licensing.ServerManagedPolicy: setRetryCount(J)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: getText()android.text.Editable' label='android.widget.EditText: getText()android.text.Editable'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' label='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: substring(II)java.lang.String' label='java.lang.String: substring(II)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: init()void' label='com.masshabit.squibble.Player$Hand: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: putExtra(java.lang.String,android.os.Parcelable)android.content.Intent' label='android.content.Intent: putExtra(java.lang.String,android.os.Parcelable)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CreditsScreen: tweenComplete(java.lang.Object)void' label='com.masshabit.squibble.CreditsScreen: tweenComplete(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: easeOutIn(F)F' label='com.masshabit.common.tween.Ease: easeOutIn(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void' label='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.Location: getLongitude()D' label='android.location.Location: getLongitude()D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: readUTF()java.lang.String' label='java.io.DataInputStream: readUTF()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' label='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader$MinBounds: addChild(FF)void' label='com.masshabit.common.LevelLoader$MinBounds: addChild(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.build.BuildVars: init()void' label='com.masshabit.build.BuildVars: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ProfileManagerBase: instance()com.masshabit.common.ProfileManagerBase' label='com.masshabit.common.ProfileManagerBase: instance()com.masshabit.common.ProfileManagerBase'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: c()boolean' label='com.masshabit.squibble.free.activity.a.q: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: b()boolean' label='com.masshabit.squibble.free.activity.a.Abstract: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: init()void' label='com.masshabit.squibble.NPC: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.LocationManager: getLastKnownLocation(java.lang.String)android.location.Location' label='android.location.LocationManager: getLastKnownLocation(java.lang.String)android.location.Location'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: b()void' label='com.masshabit.squibble.free.activity.d.e: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.m: a()void' label='com.masshabit.squibble.free.activity.e.m: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: init()void' label='com.masshabit.common.entity.Entity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.R$array: init()void' label='com.masshabit.squibble.free.R$array: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: getDeviceId(android.content.Context)java.lang.String' label='com.masshabit.common.License: getDeviceId(android.content.Context)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: abs(F)F' label='java.lang.Math: abs(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.i: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.i: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: f()void' label='com.flurry.android.FlurryAgent: f()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Constraint: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.Constraint: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.e: init()void' label='com.masshabit.squibble.free.activity.e.e: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull: setVelocity(FF)void' label='com.masshabit.common.physics.ConvexHull: setVelocity(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setView(android.view.View)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setView(android.view.View)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$layout: init()void' label='com.masshabit.squibble.R$layout: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: init()void' label='com.masshabit.squibble.Player: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Vector: indexOf(java.lang.Object)java.lang.Integer' label='java.util.Vector: indexOf(java.lang.Object)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.a: a()void' label='com.masshabit.squibble.free.activity.b.a: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.l: init(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.l: init(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.Socket: close()void' label='java.net.Socket: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: a(com.masshabit.squibble.free.activity.e.m)void' label='com.masshabit.squibble.free.activity.c: a(com.masshabit.squibble.free.activity.e.m)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CameraPositionEntity: init()void' label='com.masshabit.squibble.CameraPositionEntity: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: getSharedPreferences(java.lang.String,java.lang.Integer)android.content.SharedPreferences' label='android.content.Context: getSharedPreferences(java.lang.String,java.lang.Integer)android.content.SharedPreferences'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: set(FF)void' label='com.masshabit.common.physics.Vector2: set(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Constraint: satisfy(F)void' label='com.masshabit.common.physics.Constraint: satisfy(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getFloat(java.lang.String,F)F' label='android.os.Bundle: getFloat(java.lang.String,F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.MotionEvent: getHistoricalX(java.lang.Integer)F' label='android.view.MotionEvent: getHistoricalX(java.lang.Integer)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.n: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.n: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: requestWindowFeature(java.lang.Integer)boolean' label='com.masshabit.squibble.MainActivity: requestWindowFeature(java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.Animation$Track: init()void' label='com.masshabit.common.resource.Animation$Track: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.ServerSocket: accept()java.net.Socket' label='java.net.ServerSocket: accept()java.net.Socket'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.o: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.o: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy$LicenseResponse: init(java.lang.String,java.lang.Integer)void' label='com.android.vending.licensing.Policy$LicenseResponse: init(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.StaticEntity: drawChildren(android.graphics.Canvas)void' label='com.masshabit.common.entity.StaticEntity: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.a: b()void' label='com.masshabit.squibble.free.activity.b.a: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: b(android.os.Parcel)void' label='com.masshabit.squibble.free.activity.c: b(android.os.Parcel)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.ConvexHull: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' label='com.masshabit.common.physics.ConvexHull: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.e: init(B)void' label='com.flurry.android.e: init(B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processPARSE_FAILUE_Action()void' label='com.masshabit.squibble.free.activity.g: processPARSE_FAILUE_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: length()java.lang.Integer' label='java.lang.String: length()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: getLengthSq()F' label='com.masshabit.common.physics.SpringConstraint: getLengthSq()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: easeIn(F)F' label='com.masshabit.common.tween.Ease: easeIn(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: updateThreadCondition()void' label='com.masshabit.common.Environment: updateThreadCondition()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: access$000(com.android.vending.licensing.LicenseChecker$ResultListener)com.android.vending.licensing.LicenseValidator' label='com.android.vending.licensing.LicenseChecker$ResultListener: access$000(com.android.vending.licensing.LicenseChecker$ResultListener)com.android.vending.licensing.LicenseValidator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: getNodeName()java.lang.String' label='org.w3c.dom.Element: getNodeName()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: size()java.lang.Integer' label='java.util.HashMap: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Level: init()void' label='com.masshabit.common.Level: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.media.SoundPool: init(III)void' label='android.media.SoundPool: init(III)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: clinit()void' label='com.masshabit.common.LevelLoader: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: readParcelable(java.lang.ClassLoader)android.os.Parcelable' label='android.os.Parcel: readParcelable(java.lang.ClassLoader)android.os.Parcelable'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener$1: init(com.android.vending.licensing.LicenseChecker$ResultListener,com.android.vending.licensing.LicenseChecker)void' label='com.android.vending.licensing.LicenseChecker$ResultListener$1: init(com.android.vending.licensing.LicenseChecker$ResultListener,com.android.vending.licensing.LicenseChecker)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: onPrepareOptionsMenu(android.view.Menu)boolean' label='com.masshabit.squibble.Game: onPrepareOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Button: setText(java.lang.CharSequence)void' label='android.widget.Button: setText(java.lang.CharSequence)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ListView: setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)void' label='android.widget.ListView: setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Enum: valueOf(java.lang.Class,java.lang.String)java.lang.Enum' label='java.lang.Enum: valueOf(java.lang.Class,java.lang.String)java.lang.Enum'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEventPool: release(java.lang.Object)void' label='com.masshabit.common.InputEventPool: release(java.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void' label='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: setWallpaper(android.graphics.Bitmap)void' label='android.content.Context: setWallpaper(android.graphics.Bitmap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decodeWebSafe(java.lang.String)[B' label='com.android.vending.licensing.util.Base64: decodeWebSafe(java.lang.String)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.l: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.l: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: setTranslate(FF)void' label='android.graphics.Matrix: setTranslate(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.xml.parsers.DocumentBuilderFactory: newDocumentBuilder()javax.xml.parsers.DocumentBuilder' label='javax.xml.parsers.DocumentBuilderFactory: newDocumentBuilder()javax.xml.parsers.DocumentBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.a)boolean' label='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.a)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: c()boolean' label='com.masshabit.squibble.free.activity.c: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.File: getParentFile()java.io.File' label='java.io.File: getParentFile()java.io.File'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: getTime()com.masshabit.common.Clock$Time' label='com.masshabit.common.Clock: getTime()com.masshabit.common.Clock$Time'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader$MinBounds: init(com.masshabit.common.LevelLoader)void' label='com.masshabit.common.LevelLoader$MinBounds: init(com.masshabit.common.LevelLoader)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.xml.parsers.DocumentBuilderFactory: newInstance()javax.xml.parsers.DocumentBuilderFactory' label='javax.xml.parsers.DocumentBuilderFactory: newInstance()javax.xml.parsers.DocumentBuilderFactory'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: onStart(android.content.Intent,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.e: onStart(android.content.Intent,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeInt(java.lang.Integer)void' label='android.os.Parcel: writeInt(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String' label='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.c: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.spec.PBEKeySpec: init([C[BII)void' label='javax.crypto.spec.PBEKeySpec: init([C[BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: disableLog()void' label='com.flurry.android.Flog: disableLog()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: lookupShootSpeed(F)F' label='com.masshabit.squibble.Player: lookupShootSpeed(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.WeakHashMap: init()void' label='java.util.WeakHashMap: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' label='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: easeInOut(F)F' label='com.masshabit.common.tween.Ease: easeInOut(F)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: moveToFirst()boolean' label='android.database.Cursor: moveToFirst()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: getArtificiallyPaused()boolean' label='com.masshabit.common.Environment: getArtificiallyPaused()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: allowAccess()boolean' label='com.android.vending.licensing.ServerManagedPolicy: allowAccess()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: setPlayhead(java.lang.Integer)void' label='com.masshabit.common.resource.AnimationState: setPlayhead(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ContentValues: put(java.lang.String,java.lang.Long)void' label='android.content.ContentValues: put(java.lang.String,java.lang.Long)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: remove(java.lang.Object)boolean' label='java.util.ArrayList: remove(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: pushScreen(IF)void' label='com.masshabit.squibble.Game: pushScreen(IF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: l()void' label='com.masshabit.squibble.free.activity.e.k: l()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences$Editor: putBoolean(java.lang.String,boolean)android.content.SharedPreferences$Editor' label='android.content.SharedPreferences$Editor: putBoolean(java.lang.String,boolean)android.content.SharedPreferences$Editor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.d: init()void' label='com.flurry.android.d: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$id: init()void' label='com.android.vending.licensing.R$id: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Long: toString(J)java.lang.String' label='java.lang.Long: toString(J)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: onPrepareDialog(ILandroid.app.Dialog)void' label='com.masshabit.common.Environment: onPrepareDialog(ILandroid.app.Dialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: cleanupService()void' label='com.android.vending.licensing.LicenseChecker: cleanupService()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.ByteArrayOutputStream: toByteArray()[B' label='java.io.ByteArrayOutputStream: toByteArray()[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFFI)void' label='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFFI)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: addImpulse(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Particle: addImpulse(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: add(FF)void' label='com.masshabit.common.physics.Vector2: add(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: size()java.lang.Integer' label='java.util.List: size()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationResourceMap: debugDump()void' label='com.masshabit.common.resource.AnimationResourceMap: debugDump()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.RandomAccessFile: init(java.lang.String,java.lang.String)void' label='java.io.RandomAccessFile: init(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ProgressBar: init(android.content.Context,android.util.AttributeSet,java.lang.Integer)void' label='android.widget.ProgressBar: init(android.content.Context,android.util.AttributeSet,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.IOException: getMessage()java.lang.String' label='java.io.IOException: getMessage()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: showDialog(java.lang.Integer)void' label='android.app.Activity: showDialog(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: getString(java.lang.Integer)java.lang.String' label='android.database.Cursor: getString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getPhoneType()java.lang.Integer' label='android.telephony.TelephonyManager: getPhoneType()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: stopThread()void' label='com.masshabit.common.Environment: stopThread()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.SmsManager: sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void' label='android.telephony.SmsManager: sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: a(android.os.Parcel)void' label='com.masshabit.squibble.free.activity.c: a(android.os.Parcel)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.Activity: getString(java.lang.Integer)java.lang.String' label='android.app.Activity: getString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: init()void' label='com.masshabit.squibble.MenuScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: stop()void' label='com.masshabit.common.resource.AnimationState: stop()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' label='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.SplashScreen: init()void' label='com.masshabit.squibble.SplashScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: get(java.lang.String)java.lang.Object' label='android.os.Bundle: get(java.lang.String)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.c: b()void' label='com.masshabit.squibble.free.activity.b.c: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: getLong(java.lang.Integer)J' label='android.database.Cursor: getLong(java.lang.Integer)J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.Screen: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: saveState(android.os.Bundle)void' label='com.masshabit.squibble.GameScreen: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Arrays: fill([FF)void' label='java.util.Arrays: fill([FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean' label='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void' label='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.g: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.g: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList' label='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' label='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: c()void' label='com.flurry.android.FlurryAgent: c()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' label='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: destroy()void' label='com.masshabit.common.Environment: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.ComponentName: init(android.content.Context,java.lang.Class)void' label='android.content.ComponentName: init(android.content.Context,java.lang.Class)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: f()java.lang.String' label='com.masshabit.squibble.free.activity.e: f()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Float: valueOf(F)java.lang.Float' label='java.lang.Float: valueOf(F)java.lang.Float'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: equals(java.lang.Object)boolean' label='java.lang.String: equals(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.c: init([Lcom.masshabit.squibble.free.activity.d.e)void' label='com.masshabit.squibble.free.activity.d.c: init([Lcom.masshabit.squibble.free.activity.d.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy: allowAccess()boolean' label='com.android.vending.licensing.Policy: allowAccess()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Exception: printStackTrace()void' label='java.lang.Exception: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics$RayCastResult: reset()void' label='com.masshabit.common.physics.Physics$RayCastResult: reset()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decodeWebSafe([B)[B' label='com.android.vending.licensing.util.Base64: decodeWebSafe([B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.HalfEdge: set(FFFF)void' label='com.masshabit.common.physics.HalfEdge: set(FFFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CurveParser: clinit()void' label='com.masshabit.common.curve.CurveParser: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: velY()F' label='com.masshabit.common.physics.CircleParticle: velY()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: init([B)void' label='java.lang.String: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: postTranslate(FF)boolean' label='android.graphics.Matrix: postTranslate(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: d(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' label='android.util.Log: d(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.b: a()void' label='com.masshabit.squibble.free.activity.d.b: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: getRadiusSq()F' label='com.masshabit.common.physics.CircleParticle: getRadiusSq()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: play()void' label='com.masshabit.common.resource.AnimationState: play()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.c: run()void' label='com.flurry.android.c: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$4: init(com.masshabit.squibble.Game)void' label='com.masshabit.squibble.Game$4: init(com.masshabit.squibble.Game)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: hashCode()java.lang.Integer' label='java.lang.String: hashCode()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.ButtonEntity: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: b()boolean' label='com.masshabit.squibble.free.activity.a.d: b()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.pm.PackageManager: getServiceInfo(android.content.ComponentName,java.lang.Integer)android.content.pm.ServiceInfo' label='android.content.pm.PackageManager: getServiceInfo(android.content.ComponentName,java.lang.Integer)android.content.pm.ServiceInfo'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: e(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' label='android.util.Log: e(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: b(com.masshabit.squibble.free.activity.h)java.lang.String' label='com.masshabit.squibble.free.activity.h: b(com.masshabit.squibble.free.activity.h)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: loadUrl(java.lang.String)void' label='android.webkit.WebView: loadUrl(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: update(F)void' label='com.masshabit.squibble.PlayerSelectPanel: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.s: clinit()void' label='com.masshabit.squibble.free.activity.a.s: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.t: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.t: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b: put(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.b: put(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.Socket: getInputStream()java.io.InputStream' label='java.net.Socket: getInputStream()java.io.InputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPath: init(com.masshabit.common.curve.PolyCubicBezier)void' label='com.masshabit.squibble.WorldMapPath: init(com.masshabit.common.curve.PolyCubicBezier)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decode([BII[B)[B' label='com.android.vending.licensing.util.Base64: decode([BII[B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' label='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.Particle: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: setCaptureUncaughtExceptions(boolean)void' label='com.flurry.android.FlurryAgent: setCaptureUncaughtExceptions(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' label='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.s: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.s: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: rewindAndPlay()void' label='com.masshabit.common.resource.AnimationState: rewindAndPlay()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapPlayer: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.t: init()void' label='com.masshabit.squibble.free.activity.a.t: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.NullPointerException: init(java.lang.String)void' label='java.lang.NullPointerException: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onLocationChanged(android.location.Location)void' label='com.flurry.android.FlurryAgent: onLocationChanged(android.location.Location)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: dragEnd(FF)void' label='com.masshabit.squibble.Player: dragEnd(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: showDialog(java.lang.Integer)void' label='com.masshabit.squibble.MainActivity: showDialog(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.c: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.c: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: init()void' label='com.masshabit.squibble.WorldMapPlayer: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.i: a()void' label='com.masshabit.squibble.free.activity.b.i: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b: init(java.util.HashMap)void' label='com.masshabit.squibble.free.activity.b: init(java.util.HashMap)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.BufferedReader: read([C)java.lang.Integer' label='java.io.BufferedReader: read([C)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: init()void' label='org.json.JSONObject: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: init(java.lang.Integer)void' label='com.masshabit.common.Deque: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='[Lcom.android.vending.licensing.Policy$LicenseResponse: clone()java.lang.Object' label='[Lcom.android.vending.licensing.Policy$LicenseResponse: clone()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.i: start()void' label='com.masshabit.squibble.free.activity.i: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: isReady()boolean' label='com.masshabit.squibble.MainButtonPanel: isReady()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.f: b()void' label='com.masshabit.squibble.free.activity.b.f: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: update(F)void' label='com.masshabit.squibble.MenuScreen: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Matrix: set(android.graphics.Matrix)void' label='android.graphics.Matrix: set(android.graphics.Matrix)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: setGraph(com.masshabit.squibble.WorldMapGraph)void' label='com.masshabit.squibble.WorldMapPlayer: setGraph(com.masshabit.squibble.WorldMapGraph)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.v: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.v: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.Button: setEnabled(boolean)void' label='android.widget.Button: setEnabled(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: checkPlayTap(FF)boolean' label='com.masshabit.squibble.WorldMapHud: checkPlayTap(FF)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' label='com.masshabit.common.Environment: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setData(android.net.Uri)android.content.Intent' label='android.content.Intent: setData(android.net.Uri)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: setMuted(boolean)void' label='com.masshabit.common.Environment: setMuted(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: setItems([Ljava.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder' label='android.app.AlertDialog$Builder: setItems([Ljava.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: init([BLjava.lang.String)void' label='java.lang.String: init([BLjava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: runChecks()void' label='com.android.vending.licensing.LicenseChecker: runChecks()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: getBytes(java.lang.String)[B' label='java.lang.String: getBytes(java.lang.String)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$EaseBase: init()void' label='com.masshabit.common.tween.Ease$EaseBase: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: a(java.lang.String,java.lang.String)void' label='com.masshabit.squibble.free.activity.a.q: a(java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONArray: length()java.lang.Integer' label='org.json.JSONArray: length()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void' label='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' label='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: saveState(android.os.Bundle)void' label='com.masshabit.squibble.ItemEntity: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(J)java.lang.StringBuilder' label='java.lang.StringBuilder: append(J)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: fps()F' label='com.masshabit.common.Clock: fps()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: toString()java.lang.String' label='com.masshabit.common.physics.Vector2: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' label='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.Resources: getIdentifier(java.lang.String,java.lang.String,java.lang.String)java.lang.Integer' label='android.content.res.Resources: getIdentifier(java.lang.String,java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Math: exp(D)D' label='java.lang.Math: exp(D)D'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: toString()java.lang.String' label='com.masshabit.squibble.free.activity.Pushable: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: d()java.lang.String' label='com.masshabit.squibble.free.activity.e: d()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.UpsellScreen: init()void' label='com.masshabit.squibble.UpsellScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapHud: getData()com.masshabit.squibble.WorldMapNode' label='com.masshabit.squibble.WorldMapHud: getData()com.masshabit.squibble.WorldMapNode'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.a.Abstract)java.util.HashMap' label='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.a.Abstract)java.util.HashMap'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Level: debugDumpResourceMaps()void' label='com.masshabit.common.Level: debugDumpResourceMaps()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: get(java.lang.Object)java.lang.Object' label='java.util.Map: get(java.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' label='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.List: add(java.lang.Object)boolean' label='java.util.List: add(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPath: init()void' label='com.masshabit.squibble.WorldMapPath: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' label='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.d: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.d: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer$Location: init(com.masshabit.squibble.WorldMapPlayer)void' label='com.masshabit.squibble.WorldMapPlayer$Location: init(com.masshabit.squibble.WorldMapPlayer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.m: clinit()void' label='com.masshabit.squibble.free.activity.m: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.HandlerThread: start()void' label='android.os.HandlerThread: start()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map$Entry: getKey()java.lang.Object' label='java.util.Map$Entry: getKey()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.common.Environment: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.Resources: getString(java.lang.Integer)java.lang.String' label='android.content.res.Resources: getString(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: threadedInit()void' label='com.masshabit.squibble.Game: threadedInit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Arrays: fill([ZZ)void' label='java.util.Arrays: fill([ZZ)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c: f()boolean' label='com.masshabit.squibble.free.activity.c: f()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.a: equals(java.lang.Object)boolean' label='com.masshabit.squibble.free.activity.d.a: equals(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationState: isTrackDone()boolean' label='com.masshabit.common.resource.AnimationState: isTrackDone()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: setPosition(FF)void' label='com.masshabit.common.physics.CircleParticle: setPosition(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: pop_back()java.lang.Object' label='com.masshabit.common.Deque: pop_back()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Long: valueOf(J)java.lang.Long' label='java.lang.Long: valueOf(J)java.lang.Long'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Clock: reset()void' label='com.masshabit.common.Clock: reset()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void' label='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker$ResultListener: access$400(com.android.vending.licensing.LicenseChecker$ResultListener)void' label='com.android.vending.licensing.LicenseChecker$ResultListener: access$400(com.android.vending.licensing.LicenseChecker$ResultListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: getString(java.lang.String)java.lang.String' label='org.json.JSONObject: getString(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: w(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' label='android.util.Log: w(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: update(F)void' label='com.masshabit.common.Camera: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: angle()F' label='com.masshabit.common.physics.Vector2: angle()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: entrySet()java.util.Set' label='java.util.HashMap: entrySet()java.util.Set'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.Entity: draw(android.graphics.Canvas)void' label='com.masshabit.common.entity.Entity: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.text.SimpleDateFormat: init(java.lang.String)void' label='java.text.SimpleDateFormat: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.g: run()void' label='com.masshabit.squibble.free.activity.e.g: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.a: clinit()void' label='com.masshabit.squibble.free.activity.e.a: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: toString(II)java.lang.String' label='java.lang.Integer: toString(II)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String' label='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.security.spec.X509EncodedKeySpec: init([B)void' label='java.security.spec.X509EncodedKeySpec: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.entity.ByteArrayEntity: init([B)void' label='org.apache.http.entity.ByteArrayEntity: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebSettings: setJavaScriptEnabled(boolean)void' label='android.webkit.WebSettings: setJavaScriptEnabled(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.x: init(com.masshabit.squibble.free.activity.h)void' label='com.masshabit.squibble.free.activity.x: init(com.masshabit.squibble.free.activity.h)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object' label='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: setAction(java.lang.String)android.content.Intent' label='android.content.Intent: setAction(java.lang.String)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: clinit()void' label='com.masshabit.squibble.free.activity.e.d: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.n: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.n: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: openFileInput(java.lang.String)java.io.FileInputStream' label='android.content.Context: openFileInput(java.lang.String)java.io.FileInputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface' label='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.provider.Settings$Secure: getString(android.content.ContentResolver,java.lang.String)java.lang.String' label='android.provider.Settings$Secure: getString(android.content.ContentResolver,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeUTF(java.lang.String)void' label='java.io.DataOutputStream: writeUTF(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer' label='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F' label='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.SmsManager: getDefault()android.telephony.SmsManager' label='android.telephony.SmsManager: getDefault()android.telephony.SmsManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: getOutputStream()java.io.OutputStream' label='java.net.HttpURLConnection: getOutputStream()java.io.OutputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object' label='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.y: onClick(android.view.View)void' label='com.masshabit.squibble.free.activity.y: onClick(android.view.View)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void' label='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: bothArmsEngaged()boolean' label='com.masshabit.squibble.Player: bothArmsEngaged()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.R$string: init()void' label='com.android.vending.licensing.R$string: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: a()android.content.Context' label='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: zero()void' label='com.masshabit.common.physics.Vector2: zero()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e,com.masshabit.squibble.free.activity.g)com.masshabit.squibble.free.activity.g' label='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e,com.masshabit.squibble.free.activity.g)com.masshabit.squibble.free.activity.g'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: init()void' label='com.masshabit.common.physics.CollisionDetector: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder' label='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONException: printStackTrace()void' label='org.json.JSONException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' label='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.h)[Z' label='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.h)[Z'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Binder: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' label='android.os.Binder: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void' label='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.NodeList: getLength()java.lang.Integer' label='org.w3c.dom.NodeList: getLength()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences' label='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: c()boolean' label='com.masshabit.squibble.free.activity.a.Abstract: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: h()void' label='com.masshabit.squibble.free.activity.e.k: h()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.c: d()void' label='com.masshabit.squibble.free.activity.a.c: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: init()void' label='com.masshabit.squibble.HowToScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.Policy$LicenseResponse: values()[Lcom.android.vending.licensing.Policy$LicenseResponse' label='com.android.vending.licensing.Policy$LicenseResponse: values()[Lcom.android.vending.licensing.Policy$LicenseResponse'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: destroy()void' label='com.masshabit.common.License: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.Game: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: playerDead()void' label='com.masshabit.squibble.GameScreen: playerDead()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: normalize()F' label='com.masshabit.common.physics.Vector2: normalize()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeShort(java.lang.Integer)void' label='java.io.DataOutputStream: writeShort(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Integer: intValue()java.lang.Integer' label='java.lang.Integer: intValue()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setUseCaches(boolean)void' label='java.net.HttpURLConnection: setUseCaches(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.b: init()void' label='com.masshabit.squibble.free.activity.d.b: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$2: init(com.masshabit.squibble.MenuScreen)void' label='com.masshabit.squibble.MenuScreen$2: init(com.masshabit.squibble.MenuScreen)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: surfaceDestroyed()void' label='com.masshabit.common.Environment: surfaceDestroyed()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.AlertDialog$Builder: init(android.content.Context)void' label='android.app.AlertDialog$Builder: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipInputStream: close()void' label='java.util.zip.ZipInputStream: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a(java.lang.String,ILjava.util.Date,java.util.Date)void' label='com.masshabit.squibble.free.activity.g: a(java.lang.String,ILjava.util.Date,java.util.Date)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: findViewById(java.lang.Integer)android.view.View' label='com.masshabit.squibble.MainActivity: findViewById(java.lang.Integer)android.view.View'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: openFileOutput(java.lang.String,java.lang.Integer)java.io.FileOutputStream' label='android.content.Context: openFileOutput(java.lang.String,java.lang.Integer)java.io.FileOutputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.ProgressBar: setIndeterminate(boolean)void' label='android.widget.ProgressBar: setIndeterminate(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' label='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: encode3to4([BII[BI[B)[B' label='com.android.vending.licensing.util.Base64: encode3to4([BII[BI[B)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.c.rlbdafsj: init()void' label='com.masshabit.squibble.free.activity.c.rlbdafsj: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: fakeTap()void' label='com.masshabit.squibble.HowToScreen: fakeTap()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.r: onCancel(android.content.DialogInterface)void' label='com.masshabit.squibble.free.activity.r: onCancel(android.content.DialogInterface)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.System: currentTimeMillis()J' label='java.lang.System: currentTimeMillis()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeInt(java.lang.Integer)void' label='java.io.DataOutputStream: writeInt(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: getClassLoader()java.lang.ClassLoader' label='java.lang.Class: getClassLoader()java.lang.ClassLoader'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Class: getDeclaredMethod(java.lang.String,[Ljava.lang.Class)java.lang.reflect.Method' label='java.lang.Class: getDeclaredMethod(java.lang.String,[Ljava.lang.Class)java.lang.reflect.Method'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' label='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.IllegalArgumentException: init(java.lang.String)void' label='java.lang.IllegalArgumentException: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.i: init(com.masshabit.squibble.free.activity.a.g)void' label='com.masshabit.squibble.free.activity.a.i: init(com.masshabit.squibble.free.activity.a.g)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeInterfaceToken(java.lang.String)void' label='android.os.Parcel: writeInterfaceToken(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: a(android.content.Context)void' label='com.masshabit.squibble.free.activity.a.Abstract: a(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: get(java.lang.Object)java.lang.Object' label='java.util.HashMap: get(java.lang.Object)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.Resources: getAssets()android.content.res.AssetManager' label='android.content.res.Resources: getAssets()android.content.res.AssetManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileInputStream: read([BII)java.lang.Integer' label='java.io.FileInputStream: read([BII)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String' label='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.NPC: initChildren()void' label='com.masshabit.squibble.NPC: initChildren()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: saveState(android.os.Bundle)void' label='com.masshabit.squibble.Game: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: addConnection(ILcom.masshabit.squibble.WorldMapNode$Connection)void' label='com.masshabit.squibble.WorldMapNode: addConnection(ILcom.masshabit.squibble.WorldMapNode$Connection)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.client.methods.HttpPost: setEntity(org.apache.http.HttpEntity)void' label='org.apache.http.client.methods.HttpPost: setEntity(org.apache.http.HttpEntity)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Pattern: matcher(java.lang.CharSequence)java.util.regex.Matcher' label='java.util.regex.Pattern: matcher(java.lang.CharSequence)java.util.regex.Matcher'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.view.SurfaceView: onKeyDown(ILandroid.view.KeyEvent)boolean' label='android.view.SurfaceView: onKeyDown(ILandroid.view.KeyEvent)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: update(F)void' label='com.masshabit.common.Delay: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONObject: put(java.lang.String,java.lang.Object)org.json.JSONObject' label='org.json.JSONObject: put(java.lang.String,java.lang.Object)org.json.JSONObject'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: destroy()void' label='com.masshabit.squibble.MenuScreen: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: init()void' label='com.masshabit.squibble.free.activity.e.q: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.text.TextUtils$StringSplitter: iterator()java.util.Iterator' label='android.text.TextUtils$StringSplitter: iterator()java.util.Iterator'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: enterNameNo()void' label='com.masshabit.squibble.PlayerSelectPanel: enterNameNo()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.app.ActivityManager: getRunningAppProcesses()java.util.List' label='android.app.ActivityManager: getRunningAppProcesses()java.util.List'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' label='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void' label='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' label='com.masshabit.squibble.free.activity.e.k: i()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease: init()void' label='com.masshabit.common.tween.Ease: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onStart()void' label='com.masshabit.squibble.MainActivity: onStart()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' label='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: contains(java.lang.Object)boolean' label='java.util.ArrayList: contains(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.SystemClock: elapsedRealtime()J' label='android.os.SystemClock: elapsedRealtime()J'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: init()void' label='com.masshabit.common.physics.Physics: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)java.lang.Integer' label='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object' label='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: getState()java.lang.Integer' label='com.masshabit.squibble.Player: getState()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' label='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: handleMessage(android.os.Message)boolean' label='com.masshabit.squibble.MainActivity: handleMessage(android.os.Message)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.InterruptedException: printStackTrace()void' label='java.lang.InterruptedException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setReadTimeout(java.lang.Integer)void' label='java.net.HttpURLConnection: setReadTimeout(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void' label='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: angleDegrees()F' label='com.masshabit.common.physics.Vector2: angleDegrees()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.e: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.e: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: init()void' label='com.masshabit.common.Delay: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Matcher: group(java.lang.Integer)java.lang.String' label='java.util.regex.Matcher: group(java.lang.Integer)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.v: init(com.masshabit.squibble.free.activity.a.u)void' label='com.masshabit.squibble.free.activity.a.v: init(com.masshabit.squibble.free.activity.a.u)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' label='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommandEventPool: allocate()java.lang.Object' label='com.masshabit.squibble.Game$ShowCommandEventPool: allocate()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.i: b()void' label='com.masshabit.squibble.free.activity.b.i: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.telephony.TelephonyManager: getSimState()java.lang.Integer' label='android.telephony.TelephonyManager: getSimState()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: getContext()android.content.Context' label='android.webkit.WebView: getContext()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: setVelocity(FF)void' label='com.masshabit.squibble.Player: setVelocity(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' label='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: init(java.io.OutputStream)void' label='java.io.DataOutputStream: init(java.io.OutputStream)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: onInputEvent(com.masshabit.common.InputEvent)void' label='com.masshabit.squibble.GameScreen: onInputEvent(com.masshabit.common.InputEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: init()void' label='com.masshabit.squibble.free.activity.e.d: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: setState(java.lang.Integer)void' label='com.masshabit.squibble.Player: setState(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.VectorTween: init(FFFFF)void' label='com.masshabit.common.tween.VectorTween: init(FFFFF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicensingService' label='com.android.vending.licensing.ILicensingService$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicensingService'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' label='com.masshabit.common.physics.CircleParticle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void' label='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.HowToScreen: delayComplete(com.masshabit.common.Delay)void' label='com.masshabit.squibble.HowToScreen: delayComplete(com.masshabit.common.Delay)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ResponseData: toString()java.lang.String' label='com.android.vending.licensing.ResponseData: toString()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.d: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.d: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' label='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: init()void' label='java.lang.StringBuffer: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapScreen: init()void' label='com.masshabit.squibble.WorldMapScreen: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.n: init()void' label='com.masshabit.squibble.free.activity.e.n: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.l: a()void' label='com.masshabit.squibble.free.activity.b.l: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onResume()void' label='com.masshabit.squibble.MainActivity: onResume()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' label='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' label='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.b: b()com.masshabit.squibble.free.activity.d.a' label='com.masshabit.squibble.free.activity.d.b: b()com.masshabit.squibble.free.activity.d.a'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: get(java.lang.Integer)java.lang.Object' label='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.BitmapResourceMap: destroy()void' label='com.masshabit.common.resource.BitmapResourceMap: destroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Context: startActivity(android.content.Intent)void' label='android.content.Context: startActivity(android.content.Intent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.SpringConstraint: getLength()F' label='com.masshabit.common.physics.SpringConstraint: getLength()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainView: setFocusableInTouchMode(boolean)void' label='com.masshabit.squibble.MainView: setFocusableInTouchMode(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: postDelayed(java.lang.Runnable,J)boolean' label='android.os.Handler: postDelayed(java.lang.Runnable,J)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void' label='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: distance(FFFF)F' label='com.masshabit.common.physics.Vector2: distance(FFFF)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R$id: init()void' label='com.masshabit.squibble.R$id: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game: onPrepareDialog(ILandroid.app.Dialog)void' label='com.masshabit.squibble.Game: onPrepareDialog(ILandroid.app.Dialog)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.q: run()void' label='com.masshabit.squibble.free.activity.q: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer' label='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.net.Uri: parse(java.lang.String)android.net.Uri' label='android.net.Uri: parse(java.lang.String)android.net.Uri'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' label='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.json.JSONArray: getJSONObject(java.lang.Integer)org.json.JSONObject' label='org.json.JSONArray: getJSONObject(java.lang.Integer)org.json.JSONObject'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Deque: peek_back()java.lang.Object' label='com.masshabit.common.Deque: peek_back()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: addJavascriptInterface(java.lang.Object,java.lang.String)void' label='android.webkit.WebView: addJavascriptInterface(java.lang.Object,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' label='com.masshabit.common.resource.BitmapResourceMap: debugDump()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.StringBuffer: init(java.lang.Integer)void' label='java.lang.StringBuffer: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: init(java.lang.String)void' label='android.content.Intent: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub: attachInterface(android.os.IInterface,java.lang.String)void' label='com.android.vending.licensing.ILicenseResultListener$Stub: attachInterface(android.os.IInterface,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void' label='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void' label='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: writeStrongBinder(android.os.IBinder)void' label='android.os.Parcel: writeStrongBinder(android.os.IBinder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: d()void' label='com.masshabit.squibble.free.activity.a.Abstract: d()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawCircle(FFFLandroid.graphics.Paint)void' label='android.graphics.Canvas: drawCircle(FFFLandroid.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.k: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.k: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.BufferedReader: init(java.io.Reader,java.lang.Integer)void' label='java.io.BufferedReader: init(java.io.Reader,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionResolver: clinit()void' label='com.masshabit.common.physics.CollisionResolver: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' label='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.zip.ZipInputStream: getNextEntry()java.util.zip.ZipEntry' label='java.util.zip.ZipInputStream: getNextEntry()java.util.zip.ZipEntry'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.tween.Ease$3: init()void' label='com.masshabit.common.tween.Ease$3: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void' label='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' label='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processDOWNLOAD_FAILUE_Action()void' label='com.masshabit.squibble.free.activity.g: processDOWNLOAD_FAILUE_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' label='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.d.e: a()java.lang.Object' label='com.masshabit.squibble.free.activity.d.e: a()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.r: b()void' label='com.masshabit.squibble.free.activity.b.r: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void' label='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: clinit()void' label='com.masshabit.common.physics.Physics: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.Player: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void' label='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' label='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: init(android.os.IBinder)void' label='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: init(android.os.IBinder)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.w: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.c)void' label='com.masshabit.squibble.free.activity.w: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.c)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: length()F' label='com.masshabit.common.physics.Vector2: length()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: drawColor(java.lang.Integer)void' label='android.graphics.Canvas: drawColor(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' label='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.R: init()void' label='com.masshabit.squibble.R: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.e: a(java.lang.String)java.lang.String' label='com.masshabit.squibble.free.activity.a.e: a(java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' label='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.l: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.a.l: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: getInputStream()java.io.InputStream' label='java.net.HttpURLConnection: getInputStream()java.io.InputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapPlayer: update(F)void' label='com.masshabit.squibble.WorldMapPlayer: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e: b()java.lang.String' label='com.masshabit.squibble.free.activity.e: b()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.regex.Pattern: compile(java.lang.String,java.lang.Integer)java.util.regex.Pattern' label='java.util.regex.Pattern: compile(java.lang.String,java.lang.Integer)java.util.regex.Pattern'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.GameScreen: playerWon()void' label='com.masshabit.squibble.GameScreen: playerWon()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.BadPaddingException: getMessage()java.lang.String' label='javax.crypto.BadPaddingException: getMessage()java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.FileOutputStream: init(java.io.File)void' label='java.io.FileOutputStream: init(java.io.File)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.PathEntity: init(com.masshabit.common.curve.PolyCubicBezier)void' label='com.masshabit.common.entity.PathEntity: init(com.masshabit.common.curve.PolyCubicBezier)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.ByteArrayInputStream: init([B)void' label='java.io.ByteArrayInputStream: init([B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' label='com.android.vending.licensing.ILicensingService$Stub: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.database.Cursor: close()void' label='android.database.Cursor: close()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void' label='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Float: floatValue()F' label='java.lang.Float: floatValue()F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.HashMap: init()void' label='java.util.HashMap: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Parcel: obtain()android.os.Parcel' label='android.os.Parcel: obtain()android.os.Parcel'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' label='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: update(F)void' label='com.masshabit.squibble.MainButtonPanel: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void' label='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.a: init()void' label='com.masshabit.squibble.free.activity.a.a: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.r: a()void' label='com.masshabit.squibble.free.activity.b.r: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.webkit.WebView: init(android.content.Context)void' label='android.webkit.WebView: init(android.content.Context)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CircleParticle: draw(android.graphics.Canvas,android.graphics.Paint)void' label='com.masshabit.common.physics.CircleParticle: draw(android.graphics.Canvas,android.graphics.Paint)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.l: run()void' label='com.masshabit.squibble.free.activity.e.l: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.ObjectPool: init()void' label='com.masshabit.common.ObjectPool: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' label='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' label='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.o: equals(java.lang.Object)boolean' label='com.masshabit.squibble.free.activity.o: equals(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String' label='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.f: init(B)void' label='com.flurry.android.f: init(B)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.util.ByteArrayBuffer: append([BII)void' label='org.apache.http.util.ByteArrayBuffer: append([BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='[Lcom.masshabit.squibble.free.activity.o: clone()java.lang.Object' label='[Lcom.masshabit.squibble.free.activity.o: clone()java.lang.Object'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: a()void' label='com.masshabit.squibble.free.activity.g: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor' label='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Screen: draw(android.graphics.Canvas)void' label='com.masshabit.squibble.Screen: draw(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Object: equals(java.lang.Object)boolean' label='java.lang.Object: equals(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.w3c.dom.Node: getNodeType()S' label='org.w3c.dom.Node: getNodeType()S'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.net.HttpURLConnection: setRequestMethod(java.lang.String)void' label='java.net.HttpURLConnection: setRequestMethod(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.StatusLine: getStatusCode()java.lang.Integer' label='org.apache.http.StatusLine: getStatusCode()java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.e.m)void' label='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.e.m)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.graphics.PaintFlagsDrawFilter: init(II)void' label='android.graphics.PaintFlagsDrawFilter: init(II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.Flog: enableLog()void' label='com.flurry.android.Flog: enableLog()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.provider.Settings$System: getString(android.content.ContentResolver,java.lang.String)java.lang.String' label='android.provider.Settings$System: getString(android.content.ContentResolver,java.lang.String)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' label='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.Game$ShowCommandEventPool: fill()void' label='com.masshabit.squibble.Game$ShowCommandEventPool: fill()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.InputStreamReader: init(java.io.InputStream)void' label='java.io.InputStreamReader: init(java.io.InputStream)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ProfileManager: create(android.content.Context)com.masshabit.squibble.ProfileManager' label='com.masshabit.squibble.ProfileManager: create(android.content.Context)com.masshabit.squibble.ProfileManager'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Long: toString(JI)java.lang.String' label='java.lang.Long: toString(JI)java.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.SecretKeyFactory: generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey' label='javax.crypto.SecretKeyFactory: generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainButtonPanel: drawChildren(android.graphics.Canvas)void' label='com.masshabit.squibble.MainButtonPanel: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph: init()void' label='com.masshabit.squibble.WorldMapGraph: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.ClassNotFoundException: printStackTrace()void' label='java.lang.ClassNotFoundException: printStackTrace()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' label='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.d: a([D)boolean' label='com.masshabit.squibble.free.activity.e.d: a([D)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: getDelay(java.lang.Integer)F' label='com.masshabit.squibble.StoryScreen: getDelay(java.lang.Integer)F'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.q: a()android.content.Context' label='com.masshabit.squibble.free.activity.a.q: a()android.content.Context'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void' label='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a: clinit()void' label='com.masshabit.squibble.free.activity.a: clinit()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void' label='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' label='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.o: b()void' label='com.masshabit.squibble.free.activity.b.o: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Bundle: getInt(java.lang.String,java.lang.Integer)java.lang.Integer' label='android.os.Bundle: getInt(java.lang.String,java.lang.Integer)java.lang.Integer'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.curve.PolyCubicBezier: init()void' label='com.masshabit.common.curve.PolyCubicBezier: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.l: run()void' label='com.masshabit.squibble.free.activity.l: run()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataInputStream: init(java.io.InputStream)void' label='java.io.DataInputStream: init(java.io.InputStream)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.Intent: addFlags(java.lang.Integer)android.content.Intent' label='android.content.Intent: addFlags(java.lang.Integer)android.content.Intent'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.location.Criteria: init()void' label='android.location.Criteria: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License$MyCallback: dontAllow()void' label='com.masshabit.common.License$MyCallback: dontAllow()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.r: init(java.lang.String)void' label='com.masshabit.squibble.free.activity.b.r: init(java.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' label='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void' label='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MainActivity: onDestroy()void' label='com.masshabit.squibble.MainActivity: onDestroy()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.StoryScreen: delayComplete(com.masshabit.common.Delay)void' label='com.masshabit.squibble.StoryScreen: delayComplete(com.masshabit.common.Delay)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void' label='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.m: c()boolean' label='com.masshabit.squibble.free.activity.a.m: c()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Arrays: fill([II)void' label='java.util.Arrays: fill([II)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.RandomAccessFile: write([BII)void' label='java.io.RandomAccessFile: write([BII)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.i: init(com.masshabit.squibble.free.activity.e)void' label='com.masshabit.squibble.free.activity.i: init(com.masshabit.squibble.free.activity.e)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Camera: setTarget(FF)void' label='com.masshabit.common.Camera: setTarget(FF)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Map: entrySet()java.util.Set' label='java.util.Map: entrySet()java.util.Set'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.io.DataOutputStream: writeByte(java.lang.Integer)void' label='java.io.DataOutputStream: writeByte(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.util.ByteArrayBuffer: init(java.lang.Integer)void' label='org.apache.http.util.ByteArrayBuffer: init(java.lang.Integer)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Constraint: init()void' label='com.masshabit.common.physics.Constraint: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.LinkedList: init()void' label='java.util.LinkedList: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.u: a()void' label='com.masshabit.squibble.free.activity.b.u: a()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.os.Handler: post(java.lang.Runnable)boolean' label='android.os.Handler: post(java.lang.Runnable)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseValidator: handleApplicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' label='com.android.vending.licensing.LicenseValidator: handleApplicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.License: notReadyOrBad()boolean' label='com.masshabit.common.License: notReadyOrBad()boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void' label='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' label='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.entity.AnimatedEntity: drawChildren(android.graphics.Canvas)void' label='com.masshabit.common.entity.AnimatedEntity: drawChildren(android.graphics.Canvas)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: init(com.masshabit.squibble.WorldMapGraph)void' label='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: init(com.masshabit.squibble.WorldMapGraph)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.widget.EditText: addTextChangedListener(android.text.TextWatcher)void' label='android.widget.EditText: addTextChangedListener(android.text.TextWatcher)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.LicenseChecker: access$200(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' label='com.android.vending.licensing.LicenseChecker: access$200(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.PlayerSelectPanel: updateChildren(F)void' label='com.masshabit.squibble.PlayerSelectPanel: updateChildren(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.util.ByteArrayBuffer: clear()void' label='org.apache.http.util.ByteArrayBuffer: clear()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.h: init(com.masshabit.squibble.free.activity.a.g)void' label='com.masshabit.squibble.free.activity.a.h: init(com.masshabit.squibble.free.activity.a.g)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='org.apache.http.util.ByteArrayBuffer: toByteArray()[B' label='org.apache.http.util.ByteArrayBuffer: toByteArray()[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.Date: after(java.util.Date)boolean' label='java.util.Date: after(java.util.Date)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.Environment: saveState(android.os.Bundle)void' label='com.masshabit.common.Environment: saveState(android.os.Bundle)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.g: processPARSE_OK_Action()void' label='com.masshabit.squibble.free.activity.g: processPARSE_OK_Action()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.e.a: init()void' label='com.masshabit.squibble.free.activity.e.a: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.common.physics.Physics: unregisterGroup(com.masshabit.common.physics.CollisionGroup)void' label='com.masshabit.common.physics.Physics: unregisterGroup(com.masshabit.common.physics.CollisionGroup)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' label='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.util.ArrayList: add(java.lang.Object)boolean' label='java.util.ArrayList: add(java.lang.Object)boolean'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.b.u: b()void' label='com.masshabit.squibble.free.activity.b.u: b()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream' label='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='javax.crypto.spec.SecretKeySpec: init([BLjava.lang.String)void' label='javax.crypto.spec.SecretKeySpec: init([BLjava.lang.String)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.ItemEntity: update(F)void' label='com.masshabit.squibble.ItemEntity: update(F)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.free.activity.a.Abstract: i()[Ljava.lang.String' label='com.masshabit.squibble.free.activity.a.Abstract: i()[Ljava.lang.String'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.masshabit.squibble.MenuScreen$DialogResponse: init(ILjava.lang.Object)void' label='com.masshabit.squibble.MenuScreen$DialogResponse: init(ILjava.lang.Object)void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B' label='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='java.lang.Exception: init()void' label='java.lang.Exception: init()void'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		<node id='com.flurry.android.FlurryAgent: e()[B' label='com.flurry.android.FlurryAgent: e()[B'>
			<attvalues></attvalues>
			<viz:color r='30' g='144' b='255'></viz:color>
			</node>
		</nodes>
		<edges>
			<edge id='0' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.io.InputStream: close()void'/>
			<edge id='2' source='com.masshabit.common.physics.CollisionUtils: testSegmentSegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.CollisionUtils: signedTriArea(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='3' source='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void' target='com.masshabit.common.Clock: getTimeRaw()J'/>
			<edge id='4' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: writeShort(java.lang.Integer)void'/>
			<edge id='5' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='6' source='com.masshabit.common.Environment: updateThreadCondition()void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='7' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='8' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='9' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='java.util.Collection: iterator()java.util.Iterator'/>
			<edge id='10' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='11' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='org.apache.http.util.ByteArrayBuffer: append([BII)void'/>
			<edge id='12' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='13' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='14' source='com.masshabit.squibble.WorldMapNode: addConnection(ILcom.masshabit.squibble.WorldMapNode$Connection)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='15' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='16' source='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' target='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'/>
			<edge id='17' source='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='18' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.StaticEntity: init()void'/>
			<edge id='19' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='java.io.File: init(java.lang.String)void'/>
			<edge id='20' source='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void' target='com.masshabit.common.Environment: isMuted()boolean'/>
			<edge id='21' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.io.IOException: getMessage()java.lang.String'/>
			<edge id='22' source='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void' target='com.masshabit.squibble.free.activity.d.e: c()void'/>
			<edge id='23' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void'/>
			<edge id='24' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='25' source='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void' target='java.lang.Integer: intValue()java.lang.Integer'/>
			<edge id='26' source='com.masshabit.squibble.GameScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='android.graphics.Matrix: mapPoints([F)void'/>
			<edge id='27' source='com.masshabit.common.physics.ConvexHull: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='28' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='29' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='30' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Node: getNodeType()S'/>
			<edge id='31' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='com.masshabit.squibble.WorldMapNode: addConnection(ILcom.masshabit.squibble.WorldMapNode$Connection)void'/>
			<edge id='32' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='33' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='34' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='35' source='com.masshabit.squibble.free.activity.b.r: a()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='36' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setTitle(java.lang.Integer)android.app.AlertDialog$Builder'/>
			<edge id='37' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.String: init([B)void'/>
			<edge id='38' source='com.masshabit.squibble.free.activity.c: f()boolean' target='com.masshabit.squibble.free.activity.a.Abstract: h()boolean'/>
			<edge id='39' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='android.content.pm.ApplicationInfo: loadLabel(android.content.pm.PackageManager)java.lang.CharSequence'/>
			<edge id='40' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: getString(java.lang.Integer)java.lang.String'/>
			<edge id='41' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.util.List: iterator()java.util.Iterator'/>
			<edge id='42' source='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void' target='com.masshabit.squibble.Game: pushScreen(IF)void'/>
			<edge id='43' source='com.masshabit.common.physics.Particle: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='44' source='com.masshabit.squibble.free.activity.b.k: b()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='45' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void'/>
			<edge id='46' source='com.masshabit.squibble.SplashScreen: proceed()void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='47' source='com.masshabit.squibble.free.activity.b.i: b()void' target='com.masshabit.squibble.free.activity.e.l: start()void'/>
			<edge id='48' source='com.masshabit.common.Environment: saveState(android.os.Bundle)void' target='com.masshabit.squibble.Game: saveState(android.os.Bundle)void'/>
			<edge id='49' source='com.masshabit.squibble.MenuScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='50' source='com.masshabit.squibble.free.activity.b.b: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='51' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='org.w3c.dom.Node: getNodeName()java.lang.String'/>
			<edge id='52' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='53' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeDouble(D)void'/>
			<edge id='54' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='55' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.FlurryAgent: a()void'/>
			<edge id='56' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.util.HashMap: containsKey(java.lang.Object)boolean'/>
			<edge id='57' source='com.masshabit.squibble.WorldMapNode: unlockChildren()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='58' source='com.masshabit.squibble.MainActivity: onDestroy()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='59' source='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' target='java.lang.IllegalArgumentException: init(java.lang.String)void'/>
			<edge id='60' source='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='61' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='62' source='com.masshabit.squibble.free.activity.a.v: init(com.masshabit.squibble.free.activity.a.u)void' target='java.lang.Object: init()void'/>
			<edge id='63' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebSettings: setJavaScriptEnabled(boolean)void'/>
			<edge id='64' source='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void' target='java.lang.Thread$UncaughtExceptionHandler: uncaughtException(java.lang.Thread,java.lang.Throwable)void'/>
			<edge id='65' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='66' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='67' source='com.masshabit.squibble.MenuScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='68' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String'/>
			<edge id='69' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='70' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='71' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.Node: getNodeName()java.lang.String'/>
			<edge id='72' source='com.masshabit.squibble.free.activity.b.n: b()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='73' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setNegativeButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='74' source='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void' target='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void'/>
			<edge id='75' source='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.Pushable: a(android.os.Parcel)void'/>
			<edge id='76' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='77' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='com.masshabit.common.physics.CircleParticle: setVelocity(FF)void'/>
			<edge id='78' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='79' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='80' source='com.masshabit.squibble.free.activity.a.b: init()void' target='java.lang.Object: init()void'/>
			<edge id='81' source='com.android.vending.licensing.LicenseChecker: cleanupService()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='82' source='com.masshabit.squibble.MenuScreen: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='83' source='com.masshabit.squibble.CreditsScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='84' source='com.masshabit.squibble.SplashScreen: init()void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='85' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='86' source='com.masshabit.squibble.ProfileManager: create(android.content.Context)com.masshabit.squibble.ProfileManager' target='com.masshabit.squibble.ProfileManager: init(android.content.Context)void'/>
			<edge id='87' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='88' source='com.flurry.android.Flog: a(java.lang.String)boolean' target='android.util.Log: isLoggable(java.lang.String,java.lang.Integer)boolean'/>
			<edge id='89' source='com.masshabit.squibble.free.activity.d: init()void' target='java.lang.Object: init()void'/>
			<edge id='90' source='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZ)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='91' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='92' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.FileOutputStream: flush()void'/>
			<edge id='93' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='android.os.Bundle: getInt(java.lang.String)java.lang.Integer'/>
			<edge id='94' source='com.masshabit.squibble.StoryScreen: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.StoryScreen: getDelay(java.lang.Integer)F'/>
			<edge id='95' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='96' source='com.masshabit.common.Globals: init()void' target='com.masshabit.common.License: instance()com.masshabit.common.License'/>
			<edge id='97' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.io.BufferedReader: init(java.io.Reader,java.lang.Integer)void'/>
			<edge id='98' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='com.masshabit.common.ProfileManagerBase$PlayerProfile: load(org.json.JSONObject)void'/>
			<edge id='99' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapPlayer: setGraph(com.masshabit.squibble.WorldMapGraph)void'/>
			<edge id='100' source='com.masshabit.squibble.MainView: onKeyUp(ILandroid.view.KeyEvent)boolean' target='android.view.SurfaceView: onKeyUp(ILandroid.view.KeyEvent)boolean'/>
			<edge id='101' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.DataInputStream: read([BII)java.lang.Integer'/>
			<edge id='102' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='103' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.lang.String: charAt(java.lang.Integer)C'/>
			<edge id='104' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='105' source='com.masshabit.squibble.Game: init()void' target='android.content.Context: getSharedPreferences(java.lang.String,java.lang.Integer)android.content.SharedPreferences'/>
			<edge id='106' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='107' source='com.masshabit.squibble.WorldMapPath: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='108' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.os.Bundle: putParcelable(java.lang.String,android.os.Parcelable)void'/>
			<edge id='109' source='com.flurry.android.FlurryAgent: g()void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='110' source='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void' target='com.masshabit.common.curve.CubicBezier: estimateLength()void'/>
			<edge id='111' source='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' target='java.lang.StringBuilder: init()void'/>
			<edge id='112' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout: addView(android.view.View)void'/>
			<edge id='113' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='114' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.InputStream: read()java.lang.Integer'/>
			<edge id='115' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Particle: getVelocity(com.masshabit.common.physics.Vector2)void'/>
			<edge id='116' source='com.masshabit.squibble.WorldMapNode$Connection: init(java.lang.String,boolean)void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='117' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.ContentValues: put(java.lang.String,java.lang.String)void'/>
			<edge id='118' source='com.masshabit.common.Level: init(java.lang.String)void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='119' source='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='120' source='com.masshabit.squibble.free.activity.a.q: d()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='121' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.Cipher: getInstance(java.lang.String)javax.crypto.Cipher'/>
			<edge id='122' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.ContentResolver: insert(android.net.Uri,android.content.ContentValues)android.net.Uri'/>
			<edge id='123' source='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='124' source='com.masshabit.squibble.free.activity.a.u: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='125' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='126' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void'/>
			<edge id='127' source='com.masshabit.common.tween.Ease$4: ease(F)F' target='com.masshabit.common.tween.Ease: easeOutIn(F)F'/>
			<edge id='128' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.app.AlertDialog$Builder: create()android.app.AlertDialog'/>
			<edge id='129' source='com.masshabit.squibble.Profile$CompletedLevel: init(java.lang.String,F)void' target='java.lang.Object: init()void'/>
			<edge id='130' source='com.masshabit.squibble.free.activity.a.l: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='131' source='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='132' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='133' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='134' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.lang.Float: valueOf(F)java.lang.Float'/>
			<edge id='135' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='136' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='137' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='138' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.io.InputStreamReader: init(java.io.InputStream)void'/>
			<edge id='139' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.net.URL: openConnection()java.net.URLConnection'/>
			<edge id='140' source='com.masshabit.squibble.free.activity.b.r: a()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='141' source='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String' target='java.lang.String: init([BII)void'/>
			<edge id='142' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='143' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.a: init(com.flurry.android.FlurryAgent,android.content.Context)void'/>
			<edge id='144' source='com.masshabit.squibble.free.activity.b.i: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='145' source='com.masshabit.common.Environment: setMuted(boolean)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='146' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.Layer: update(F)void'/>
			<edge id='147' source='com.masshabit.squibble.GameScreen: init()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='148' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='149' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void'/>
			<edge id='150' source='com.masshabit.squibble.free.activity.e.n: init()void' target='java.lang.Object: init()void'/>
			<edge id='151' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.l: init(java.lang.String)void'/>
			<edge id='152' source='com.android.vending.licensing.R$array: init()void' target='java.lang.Object: init()void'/>
			<edge id='153' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='java.lang.StringBuilder: init()void'/>
			<edge id='154' source='com.masshabit.squibble.WorldMapScreen: init()void' target='android.graphics.Matrix: init()void'/>
			<edge id='155' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.net.HttpURLConnection: getHeaderField(java.lang.String)java.lang.String'/>
			<edge id='156' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.LinearLayout: setPadding(IIII)void'/>
			<edge id='157' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MuteEntity: checkTap(FF)boolean'/>
			<edge id='158' source='com.masshabit.squibble.WorldMapNode: init()void' target='com.masshabit.squibble.WorldMapGraph: reportNode(com.masshabit.squibble.WorldMapNode)java.lang.Integer'/>
			<edge id='159' source='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' target='android.content.Context: sendBroadcast(android.content.Intent)void'/>
			<edge id='160' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: getOutputStream()java.io.OutputStream'/>
			<edge id='161' source='com.masshabit.squibble.Game: init()void' target='android.graphics.BitmapFactory: decodeStream(java.io.InputStream)android.graphics.Bitmap'/>
			<edge id='162' source='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='163' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='164' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: hasAttribute(java.lang.String)boolean'/>
			<edge id='165' source='com.masshabit.common.physics.Physics: unregisterConstraint(com.masshabit.common.physics.Constraint)void' target='java.util.ArrayList: remove(java.lang.Object)boolean'/>
			<edge id='166' source='com.masshabit.squibble.free.activity.b.h: b()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='167' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseChecker: access$500(com.android.vending.licensing.LicenseChecker)java.security.PublicKey'/>
			<edge id='168' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.flurry.android.f: init()void'/>
			<edge id='169' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.ContentValues: put(java.lang.String,java.lang.String)void'/>
			<edge id='170' source='com.masshabit.squibble.free.activity.b.i: a()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='171' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.k: m()void'/>
			<edge id='172' source='com.masshabit.common.resource.Animation$Track: init()void' target='java.lang.Object: init()void'/>
			<edge id='173' source='com.masshabit.squibble.free.activity.b.r: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='174' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='175' source='com.masshabit.common.physics.Particle: update(F)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='176' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='177' source='com.masshabit.common.physics.SpringConstraint: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='178' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='179' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='180' source='com.masshabit.squibble.MainActivity: onRestoreInstanceState(android.os.Bundle)void' target='android.app.Activity: onRestoreInstanceState(android.os.Bundle)void'/>
			<edge id='181' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='182' source='com.masshabit.squibble.free.MainActivity: init()void' target='com.masshabit.squibble.MainActivity: init()void'/>
			<edge id='183' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String)java.lang.String'/>
			<edge id='184' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.URL: openConnection()java.net.URLConnection'/>
			<edge id='185' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void'/>
			<edge id='186' source='com.flurry.android.FlurryAgent: onError(java.lang.String,java.lang.String,java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='187' source='com.masshabit.squibble.StoryScreen: init()void' target='java.io.InputStreamReader: init(java.io.InputStream)void'/>
			<edge id='188' source='com.masshabit.squibble.free.activity.e.g: run()void' target='com.masshabit.squibble.free.activity.e.d: a(DD)void'/>
			<edge id='189' source='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void' target='com.android.vending.licensing.Policy$LicenseResponse: toString()java.lang.String'/>
			<edge id='190' source='com.masshabit.common.Environment: updateThreadCondition()void' target='java.lang.Boolean: valueOf(boolean)java.lang.Boolean'/>
			<edge id='191' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='android.graphics.Matrix: setTranslate(FF)void'/>
			<edge id='192' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='193' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.squibble.MainButtonPanel: initChildren()void'/>
			<edge id='194' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: setWebChromeClient(android.webkit.WebChromeClient)void'/>
			<edge id='195' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void' target='android.content.SharedPreferences$Editor: commit()boolean'/>
			<edge id='196' source='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.j: a(java.lang.String)java.lang.String'/>
			<edge id='197' source='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' target='android.os.Bundle: getBoolean(java.lang.String,boolean)boolean'/>
			<edge id='198' source='com.masshabit.build.BuildVars: init()void' target='java.lang.Object: init()void'/>
			<edge id='199' source='com.masshabit.squibble.free.activity.a.m: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='200' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='201' source='com.masshabit.squibble.free.activity.c.Show: init()void' target='java.lang.Object: init()void'/>
			<edge id='202' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='java.io.File: exists()boolean'/>
			<edge id='203' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='android.view.MenuItem: setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)android.view.MenuItem'/>
			<edge id='204' source='com.masshabit.squibble.StoryScreen: init()void' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='205' source='com.masshabit.squibble.Game: update(F)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='206' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='207' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.client.HttpClient: execute(org.apache.http.client.methods.HttpUriRequest)org.apache.http.HttpResponse'/>
			<edge id='208' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='209' source='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' target='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'/>
			<edge id='210' source='com.masshabit.common.ProfileManagerBase$PlayerProfile: init()void' target='java.lang.Object: init()void'/>
			<edge id='211' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void'/>
			<edge id='212' source='com.masshabit.squibble.free.activity.c.Show: show()void' target='com.masshabit.squibble.free.activity.e: a(java.lang.Runnable)void'/>
			<edge id='213' source='com.masshabit.squibble.free.activity.e.r: init()void' target='java.lang.Object: init()void'/>
			<edge id='214' source='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='215' source='com.masshabit.squibble.free.activity.j: run()void' target='java.lang.String: init([BII)void'/>
			<edge id='216' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='217' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='218' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='219' source='com.masshabit.squibble.free.activity.e.l: run()void' target='com.masshabit.squibble.free.activity.e.m: b(java.lang.String)void'/>
			<edge id='220' source='com.masshabit.common.License: init(android.content.Context)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='221' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='222' source='com.masshabit.squibble.free.activity.a.h: a()void' target='com.masshabit.squibble.free.activity.e.m: a()void'/>
			<edge id='223' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.physics.CircleParticle: setPosition(FF)void'/>
			<edge id='224' source='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='225' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.squibble.GameScreen: loadSound(ILjava.lang.String)void'/>
			<edge id='226' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Map$Entry: getValue()java.lang.Object'/>
			<edge id='227' source='com.masshabit.squibble.WorldMapScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='228' source='com.masshabit.squibble.free.activity.e.k: m()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='229' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='230' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: rotate(F)void'/>
			<edge id='231' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='232' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='233' source='com.masshabit.squibble.free.activity.b.p: a()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='234' source='com.flurry.android.FlurryAgent: e()[B' target='java.util.List: size()java.lang.Integer'/>
			<edge id='235' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='com.android.vending.licensing.Policy$LicenseResponse: toString()java.lang.String'/>
			<edge id='236' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='237' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.LinearLayout: addView(android.view.View,android.view.ViewGroup$LayoutParams)void'/>
			<edge id='238' source='com.masshabit.common.entity.Entity: drawChildren(android.graphics.Canvas)void' target='com.masshabit.common.entity.Entity: draw(android.graphics.Canvas)void'/>
			<edge id='239' source='com.masshabit.common.Environment: setArtificiallyPaused(boolean)void' target='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void'/>
			<edge id='240' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='241' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.s: init(java.lang.String)void'/>
			<edge id='242' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.util.HashMap: init()void'/>
			<edge id='243' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='244' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='245' source='com.masshabit.squibble.GameScreen: init()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='246' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='android.content.Intent: putExtra(java.lang.String,android.os.Parcelable)android.content.Intent'/>
			<edge id='247' source='com.masshabit.squibble.free.activity.e.k: l()void' target='android.content.SharedPreferences$Editor: putInt(java.lang.String,java.lang.Integer)android.content.SharedPreferences$Editor'/>
			<edge id='248' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='249' source='com.masshabit.common.physics.CollisionResolver: clinit()void' target='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void'/>
			<edge id='250' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer'/>
			<edge id='251' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='252' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='253' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: moveToFirst()boolean'/>
			<edge id='254' source='com.masshabit.common.physics.Physics$RayCastResult: init()void' target='com.masshabit.common.physics.Physics$RayCastResult: reset()void'/>
			<edge id='255' source='com.masshabit.squibble.Game: nextScreen()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='256' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: getResources()android.content.res.Resources'/>
			<edge id='257' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: getWindow()android.view.Window'/>
			<edge id='258' source='com.masshabit.squibble.Game$5: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='259' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZ)void'/>
			<edge id='260' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.squibble.HowToScreen: fakeTap()void'/>
			<edge id='261' source='com.masshabit.squibble.MainActivity: onDestroy()void' target='com.masshabit.common.Environment: destroy()void'/>
			<edge id='262' source='com.masshabit.common.physics.Vector2: init(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='263' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='264' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='org.apache.http.NameValuePair: getName()java.lang.String'/>
			<edge id='265' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='android.graphics.RectF: contains(FF)boolean'/>
			<edge id='266' source='com.flurry.android.FlurryAgent: e()[B' target='java.util.ArrayList: init(java.util.Collection)void'/>
			<edge id='267' source='com.masshabit.squibble.free.activity.a.c: d()void' target='com.masshabit.squibble.free.activity.a.c: a(java.lang.String,java.lang.String)void'/>
			<edge id='268' source='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' target='java.lang.String: init([B)void'/>
			<edge id='269' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.Deque: push_front(java.lang.Object)void'/>
			<edge id='270' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.IBinder: transact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'/>
			<edge id='271' source='com.masshabit.squibble.WorldMapGraph: init()void' target='java.lang.Object: init()void'/>
			<edge id='272' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.squibble.StoryScreen: getDelay(java.lang.Integer)F'/>
			<edge id='273' source='com.flurry.android.FlurryAgent: onLocationChanged(android.location.Location)void' target='com.flurry.android.FlurryAgent: a()void'/>
			<edge id='274' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.os.Bundle: init()void'/>
			<edge id='275' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='276' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='277' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.Double: parseDouble(java.lang.String)D'/>
			<edge id='278' source='com.masshabit.common.physics.Particle: addVelocity(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='279' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='280' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: create()android.app.AlertDialog'/>
			<edge id='281' source='com.masshabit.squibble.StoryScreen: init()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='282' source='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void' target='com.android.vending.licensing.LicenseChecker: access$600(com.android.vending.licensing.LicenseChecker)android.os.Handler'/>
			<edge id='283' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='284' source='com.masshabit.squibble.StoryScreen: next()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='285' source='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='286' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.b: init(java.util.HashMap)void'/>
			<edge id='287' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.StringBuilder: length()java.lang.Integer'/>
			<edge id='288' source='com.masshabit.squibble.GameScreen: playerDead()void' target='com.masshabit.squibble.Game: changeScreen(IF)void'/>
			<edge id='289' source='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' target='java.lang.Long: longValue()J'/>
			<edge id='290' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='com.masshabit.squibble.free.activity.e.b: init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='291' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Level: init()void'/>
			<edge id='292' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='293' source='com.masshabit.squibble.free.activity.e.f: init()void' target='java.lang.Object: init()void'/>
			<edge id='294' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='295' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='296' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='java.util.LinkedList: init()void'/>
			<edge id='297' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='298' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.common.Globals: init()void'/>
			<edge id='299' source='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void' target='com.android.vending.licensing.LicenseChecker: access$200(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='300' source='com.masshabit.squibble.WorldMapPlayer: update(F)void' target='com.masshabit.common.tween.Tween: isDone()boolean'/>
			<edge id='301' source='com.flurry.android.FlurryAgent: e()[B' target='java.util.List: get(java.lang.Integer)java.lang.Object'/>
			<edge id='302' source='com.masshabit.common.Delay: update(F)void' target='com.masshabit.common.Delay$IDelayCompleteListener: delayComplete(com.masshabit.common.Delay)void'/>
			<edge id='303' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='304' source='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='305' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='306' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.Paint: setFilterBitmap(boolean)void'/>
			<edge id='307' source='com.android.vending.licensing.R$id: init()void' target='java.lang.Object: init()void'/>
			<edge id='308' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='309' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='310' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void'/>
			<edge id='311' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e.p: a([B)[B'/>
			<edge id='312' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.Integer: intValue()java.lang.Integer'/>
			<edge id='313' source='com.masshabit.common.physics.Physics: registerConstraint(com.masshabit.common.physics.Constraint)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='314' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='315' source='com.masshabit.common.physics.Particle: update(F)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='316' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='317' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='java.util.Arrays: fill([ZZ)void'/>
			<edge id='318' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='android.os.HandlerThread: getLooper()android.os.Looper'/>
			<edge id='319' source='com.masshabit.squibble.free.activity.a.h: a()void' target='com.masshabit.squibble.free.activity.a.g: a(com.masshabit.squibble.free.activity.a.g,boolean)boolean'/>
			<edge id='320' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='321' source='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void' target='com.masshabit.squibble.free.activity.q: init(android.content.Context)void'/>
			<edge id='322' source='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='323' source='com.masshabit.common.physics.CollisionDetector: init()void' target='java.lang.Object: init()void'/>
			<edge id='324' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSubscriberId()java.lang.String'/>
			<edge id='325' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='java.lang.System: gc()void'/>
			<edge id='326' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: writeLong(J)void'/>
			<edge id='327' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.telephony.SmsMessage: getDisplayOriginatingAddress()java.lang.String'/>
			<edge id='328' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='329' source='com.masshabit.squibble.free.activity.q: run()void' target='android.content.Intent: init(android.content.Context,java.lang.Class)void'/>
			<edge id='330' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.f: init(java.lang.String)void'/>
			<edge id='331' source='com.masshabit.squibble.free.activity.e.k: m()void' target='android.content.SharedPreferences: getInt(java.lang.String,java.lang.Integer)java.lang.Integer'/>
			<edge id='332' source='com.masshabit.squibble.SplashScreen: update(F)void' target='com.masshabit.common.Delay: update(F)void'/>
			<edge id='333' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='com.masshabit.squibble.free.activity.i: init(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='334' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties'/>
			<edge id='335' source='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean' target='com.masshabit.squibble.free.activity.d.b: b()com.masshabit.squibble.free.activity.d.a'/>
			<edge id='336' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='android.content.Intent: setData(android.net.Uri)android.content.Intent'/>
			<edge id='337' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.e.m)void'/>
			<edge id='338' source='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' target='com.masshabit.common.physics.Physics$RayCastResult: set(com.masshabit.common.physics.Physics$RayCastResult)void'/>
			<edge id='339' source='com.masshabit.squibble.free.activity.b.h: b()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='340' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='341' source='com.masshabit.squibble.free.activity.a.p: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='342' source='com.masshabit.squibble.free.activity.b.p: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='343' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='344' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='345' source='com.masshabit.squibble.WorldMapPlayer: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='346' source='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='347' source='com.masshabit.squibble.MenuScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void'/>
			<edge id='348' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.Vector2: lengthSq()F'/>
			<edge id='349' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeBoolean(boolean)void'/>
			<edge id='350' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapGraph: checkTap(FF)com.masshabit.squibble.WorldMapNode'/>
			<edge id='351' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.String: trim()java.lang.String'/>
			<edge id='352' source='com.masshabit.squibble.free.activity.b: put(java.lang.String,java.lang.String)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='353' source='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='354' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.Exception: printStackTrace()void'/>
			<edge id='355' source='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void' target='android.view.KeyEvent: getKeyCode()java.lang.Integer'/>
			<edge id='356' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void'/>
			<edge id='357' source='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='358' source='com.masshabit.squibble.free.activity.e.k: n()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='359' source='com.android.vending.licensing.LicenseChecker$ResultListener: access$400(com.android.vending.licensing.LicenseChecker$ResultListener)void' target='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void'/>
			<edge id='360' source='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.p: a(java.lang.String)java.lang.String'/>
			<edge id='361' source='com.flurry.android.FlurryAgent: e()[B' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='362' source='com.masshabit.common.License$MyCallback: allow()void' target='com.masshabit.common.License: access$000(com.masshabit.common.License)J'/>
			<edge id='363' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='364' source='com.masshabit.squibble.free.activity.a.n: c()boolean' target='com.masshabit.squibble.free.activity.a.n: a(java.lang.String)java.lang.String'/>
			<edge id='365' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='366' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.Camera: setTarget(FF)void'/>
			<edge id='367' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Parcel: recycle()void'/>
			<edge id='368' source='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' target='android.content.ComponentName: init(java.lang.String,java.lang.String)void'/>
			<edge id='369' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.PaintFlagsDrawFilter: init(II)void'/>
			<edge id='370' source='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='371' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='372' source='com.android.vending.licensing.util.Base64: decodeWebSafe(java.lang.String)[B' target='com.android.vending.licensing.util.Base64: decodeWebSafe([BII)[B'/>
			<edge id='373' source='com.masshabit.common.entity.AnimatedEntity: update(F)void' target='com.masshabit.common.resource.AnimationState: update(F)void'/>
			<edge id='374' source='com.masshabit.squibble.free.activity.e.a: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='375' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'/>
			<edge id='376' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.common.Camera: update(F)void'/>
			<edge id='377' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='378' source='com.masshabit.squibble.MainButtonPanel: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='379' source='com.android.vending.licensing.util.Base64: encodeWebSafe([BZ)java.lang.String' target='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String'/>
			<edge id='380' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Level: init(java.lang.String)void'/>
			<edge id='381' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.CollisionGroup: size()java.lang.Integer'/>
			<edge id='382' source='com.masshabit.squibble.WorldMapHud: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='383' source='com.masshabit.common.Level: init(java.lang.String)void' target='com.masshabit.common.physics.CollisionGroup: init(II)void'/>
			<edge id='384' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: c()boolean'/>
			<edge id='385' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='386' source='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' target='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'/>
			<edge id='387' source='com.masshabit.squibble.free.activity.b.u: b()void' target='com.masshabit.squibble.free.activity.e.k: k()[Lcom.masshabit.squibble.free.activity.e.b'/>
			<edge id='388' source='com.masshabit.common.License: check()void' target='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void'/>
			<edge id='389' source='com.masshabit.common.physics.Particle: update(F)void' target='com.masshabit.common.physics.Vector2: divide(F)void'/>
			<edge id='390' source='com.masshabit.squibble.GameScreen: destroy()void' target='com.masshabit.common.Level: destroy()void'/>
			<edge id='391' source='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='392' source='com.masshabit.squibble.WorldMapGraph: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='393' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.physics.Physics$RayCastResult: reset()void'/>
			<edge id='394' source='com.masshabit.squibble.free.activity.a.e: d()void' target='com.masshabit.squibble.free.activity.a.e: a(java.lang.String,java.lang.String)void'/>
			<edge id='395' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: write([B)void'/>
			<edge id='396' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='397' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='398' source='com.masshabit.squibble.Game: update(F)void' target='java.lang.System: gc()void'/>
			<edge id='399' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='400' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.FileInputStream: close()void'/>
			<edge id='401' source='com.masshabit.squibble.free.activity.b.v: b()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='402' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='403' source='com.masshabit.squibble.Game: saveState(android.os.Bundle)void' target='android.os.Bundle: putString(java.lang.String,java.lang.String)void'/>
			<edge id='404' source='com.masshabit.squibble.free.activity.e.k: j()void' target='java.util.Vector: get(java.lang.Integer)java.lang.Object'/>
			<edge id='405' source='com.masshabit.squibble.free.activity.e.k: l()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='406' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='407' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='android.os.Handler: postDelayed(java.lang.Runnable,J)boolean'/>
			<edge id='408' source='com.masshabit.squibble.free.activity.e.d: clinit()void' target='com.masshabit.squibble.free.activity.e.h: init()void'/>
			<edge id='409' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'/>
			<edge id='410' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.IOException: init(java.lang.String)void'/>
			<edge id='411' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: putFloat(java.lang.String,F)void'/>
			<edge id='412' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='413' source='com.android.vending.licensing.Policy$LicenseResponse: init(java.lang.String,java.lang.Integer)void' target='java.lang.Enum: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='414' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='415' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='416' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='417' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='418' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='com.masshabit.common.Environment: quit()void'/>
			<edge id='419' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='420' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawColor(java.lang.Integer)void'/>
			<edge id='421' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.ContentResolver: insert(android.net.Uri,android.content.ContentValues)android.net.Uri'/>
			<edge id='422' source='com.masshabit.common.Environment: purgeEvents()void' target='com.masshabit.common.InputEvent: release()void'/>
			<edge id='423' source='com.flurry.android.FlurryAgent: g()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='424' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='android.webkit.WebView: loadUrl(java.lang.String)void'/>
			<edge id='425' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='426' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.RandomAccessFile: init(java.lang.String,java.lang.String)void'/>
			<edge id='427' source='com.masshabit.common.physics.SpringConstraint: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='428' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='429' source='com.masshabit.common.Environment: setFocused(boolean)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='430' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='431' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='432' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='433' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='434' source='com.masshabit.squibble.free.activity.j: run()void' target='java.lang.String: getBytes()[B'/>
			<edge id='435' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='436' source='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='437' source='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='438' source='com.masshabit.squibble.free.activity.e.o: b()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='439' source='com.masshabit.squibble.free.activity.a.g: d()void' target='com.masshabit.squibble.free.activity.a.g: a(java.lang.String,java.lang.String)void'/>
			<edge id='440' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: setContentView(java.lang.Integer)void'/>
			<edge id='441' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='442' source='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='443' source='com.masshabit.squibble.free.activity.a.p: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='444' source='com.masshabit.common.Environment: init()void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='445' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='446' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='447' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Level: init()void'/>
			<edge id='448' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'/>
			<edge id='449' source='com.masshabit.squibble.free.activity.g: run()void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='450' source='com.masshabit.squibble.free.activity.a.e: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='451' source='com.masshabit.common.physics.Constraint: update(F)void' target='com.masshabit.common.physics.Constraint: satisfy(F)void'/>
			<edge id='452' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='453' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='454' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='455' source='com.masshabit.squibble.free.activity.b.s: b()void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean'/>
			<edge id='456' source='com.masshabit.squibble.free.activity.i: run()void' target='java.net.ServerSocket: init(java.lang.Integer)void'/>
			<edge id='457' source='com.masshabit.common.Environment: run()void' target='java.util.concurrent.Semaphore: acquireUninterruptibly()void'/>
			<edge id='458' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='459' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='460' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='java.lang.Class: getName()java.lang.String'/>
			<edge id='461' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='462' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='463' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer'/>
			<edge id='464' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='465' source='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' target='java.io.File: init(java.lang.String)void'/>
			<edge id='466' source='com.masshabit.common.Globals: clinit()void' target='java.util.HashSet: init(java.lang.Integer)void'/>
			<edge id='467' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.Float: floatValue()F'/>
			<edge id='468' source='com.masshabit.squibble.free.activity.x: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='469' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String'/>
			<edge id='470' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Level: init(java.lang.String)void'/>
			<edge id='471' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.Cipher: init(ILjava.security.Key)void'/>
			<edge id='472' source='com.masshabit.squibble.WorldMapPath: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='473' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='474' source='com.masshabit.common.physics.Vector2: init(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='475' source='com.flurry.android.FlurryAgent: onLocationChanged(android.location.Location)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='476' source='com.masshabit.squibble.free.activity.i: run()void' target='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='477' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setTitle(java.lang.CharSequence)android.app.AlertDialog$Builder'/>
			<edge id='478' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Environment: dispatchEvents()void'/>
			<edge id='479' source='com.masshabit.common.Environment: run()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='480' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipInputStream: close()void'/>
			<edge id='481' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='482' source='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='483' source='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='484' source='com.masshabit.squibble.free.activity.b.u: a()void' target='com.masshabit.squibble.free.activity.e.k: j()void'/>
			<edge id='485' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='486' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.c: d()com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='487' source='com.masshabit.squibble.WorldMapNode: init()void' target='com.masshabit.common.entity.AnimatedEntity: init()void'/>
			<edge id='488' source='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='489' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='490' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='com.masshabit.common.physics.Physics: reset()void'/>
			<edge id='491' source='com.masshabit.squibble.MainActivity: onSaveInstanceState(android.os.Bundle)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='492' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='493' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Level: init(java.lang.String)void'/>
			<edge id='494' source='com.masshabit.common.curve.CurveParser: init()void' target='java.lang.Object: init()void'/>
			<edge id='495' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Map: entrySet()java.util.Set'/>
			<edge id='496' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void' target='android.view.MotionEvent: getHistoricalEventTime(java.lang.Integer)J'/>
			<edge id='497' source='com.masshabit.squibble.R$array: init()void' target='java.lang.Object: init()void'/>
			<edge id='498' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='499' source='com.masshabit.common.physics.Particle: addImpulse(FF)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='500' source='com.flurry.android.FlurryAgent: e()[B' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='501' source='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.MainButtonPanel: drawChildren(android.graphics.Canvas)void'/>
			<edge id='502' source='com.masshabit.squibble.NPC: calcMatrix()void' target='android.graphics.Matrix: preScale(FF)boolean'/>
			<edge id='503' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='504' source='com.masshabit.squibble.free.activity.b.u: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='505' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='506' source='com.masshabit.squibble.free.activity.a.m: d()void' target='com.masshabit.squibble.free.activity.a.Abstract: a(android.content.Context)void'/>
			<edge id='507' source='com.masshabit.squibble.free.activity.g: processPARSE_OK_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='508' source='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.m: a()void'/>
			<edge id='509' source='com.masshabit.common.tween.VectorTween: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='510' source='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void' target='com.masshabit.squibble.free.activity.d.e: toString()java.lang.String'/>
			<edge id='511' source='com.masshabit.common.physics.Vector2: distance(FFFF)F' target='java.lang.Math: sqrt(D)D'/>
			<edge id='512' source='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseChecker$ResultListener$1: init(com.android.vending.licensing.LicenseChecker$ResultListener,com.android.vending.licensing.LicenseChecker)void'/>
			<edge id='513' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Clock: start()void'/>
			<edge id='514' source='com.masshabit.squibble.free.activity.a: b()boolean' target='com.masshabit.squibble.free.activity.b.a: b()void'/>
			<edge id='515' source='com.masshabit.squibble.free.activity.b.n: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='516' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.List: add(java.lang.Object)boolean'/>
			<edge id='517' source='com.masshabit.squibble.MenuScreen: init()void' target='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void'/>
			<edge id='518' source='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='519' source='com.masshabit.squibble.free.activity.a.c: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='520' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='521' source='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' target='java.lang.Float: floatValue()F'/>
			<edge id='522' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.c: i()java.lang.Integer'/>
			<edge id='523' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='com.masshabit.common.Deque: push_front(java.lang.Object)void'/>
			<edge id='524' source='com.masshabit.squibble.free.activity.z: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='525' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='526' source='com.masshabit.common.tween.Ease$2: ease(F)F' target='com.masshabit.common.tween.Ease: easeOut(F)F'/>
			<edge id='527' source='com.masshabit.common.Clock: stop()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='528' source='com.masshabit.squibble.free.activity.a.Abstract: toString()java.lang.String' target='java.util.HashMap: toString()java.lang.String'/>
			<edge id='529' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Environment: purgeEvents()void'/>
			<edge id='530' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='531' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Particle: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'/>
			<edge id='532' source='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void'/>
			<edge id='533' source='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='534' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'/>
			<edge id='535' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.GameScreen: init()void'/>
			<edge id='536' source='com.masshabit.common.physics.Particle: setPosition(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='537' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='538' source='com.masshabit.squibble.Game: update(F)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='539' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='540' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='541' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='542' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='543' source='com.masshabit.squibble.free.activity.q: run()void' target='com.masshabit.squibble.free.activity.e: f()java.lang.String'/>
			<edge id='544' source='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.j: init(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='545' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='android.text.TextUtils$StringSplitter: setString(java.lang.String)void'/>
			<edge id='546' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='547' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='com.masshabit.squibble.MainView: setClickable(boolean)void'/>
			<edge id='548' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='549' source='com.flurry.android.FlurryAgent: c()void' target='java.util.List: add(java.lang.Object)boolean'/>
			<edge id='550' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.content.Intent: putExtras(android.os.Bundle)android.content.Intent'/>
			<edge id='551' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.GameScreen: playerWon()void'/>
			<edge id='552' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String'/>
			<edge id='553' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='554' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'/>
			<edge id='555' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='com.android.vending.licensing.ILicensingService: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void'/>
			<edge id='556' source='com.masshabit.squibble.free.activity.h: setDebugMode()void' target='com.masshabit.squibble.free.activity.e: a()void'/>
			<edge id='557' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='558' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.String: valueOf(java.lang.Integer)java.lang.String'/>
			<edge id='559' source='com.masshabit.squibble.free.activity.a.u: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='560' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.Long: longValue()J'/>
			<edge id='561' source='com.masshabit.squibble.free.activity.a.k: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='562' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Player: castGrapple(FF)boolean'/>
			<edge id='563' source='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='564' source='com.flurry.android.FlurryAgent: setLogEnabled(boolean)void' target='com.flurry.android.Flog: disableLog()void'/>
			<edge id='565' source='com.masshabit.squibble.free.activity.a.n: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='566' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='567' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.EntityFactory: init()void'/>
			<edge id='568' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.m: init(java.lang.String)void'/>
			<edge id='569' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.Player$Hand: isActive()boolean'/>
			<edge id='570' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void'/>
			<edge id='571' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='572' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.d: a([D)boolean'/>
			<edge id='573' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.util.regex.Pattern: matcher(java.lang.CharSequence)java.util.regex.Matcher'/>
			<edge id='574' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.util.HashMap: keySet()java.util.Set'/>
			<edge id='575' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='576' source='com.masshabit.squibble.free.activity.e.o: a()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='577' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='578' source='com.flurry.android.FlurryAgent: onPageView()void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='579' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='580' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='581' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'/>
			<edge id='582' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='583' source='com.masshabit.squibble.free.activity.b.l: a()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='584' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='585' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='586' source='com.masshabit.common.Environment: surfaceDestroyed()void' target='java.util.concurrent.Semaphore: acquireUninterruptibly()void'/>
			<edge id='587' source='com.masshabit.squibble.StoryScreen: next()void' target='com.masshabit.squibble.StoryScreen: getBitmap(java.lang.Integer)android.graphics.Bitmap'/>
			<edge id='588' source='com.masshabit.squibble.Game: mutedChanged(boolean)void' target='android.content.SharedPreferences$Editor: commit()boolean'/>
			<edge id='589' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='590' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='591' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='android.os.HandlerThread: start()void'/>
			<edge id='592' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='593' source='com.masshabit.common.curve.CubicBezier: estimateLength()void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='594' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.f: init()void'/>
			<edge id='595' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='596' source='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.Policy: allowAccess()boolean'/>
			<edge id='597' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: readInt()java.lang.Integer'/>
			<edge id='598' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity'/>
			<edge id='599' source='com.masshabit.squibble.SplashScreen: init()void' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='600' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.StringBuilder: append(J)java.lang.StringBuilder'/>
			<edge id='601' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='java.util.HashMap: values()java.util.Collection'/>
			<edge id='602' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.c: init(com.flurry.android.FlurryAgent,android.content.Context,boolean)void'/>
			<edge id='603' source='com.flurry.android.FlurryAgent: c()void' target='java.io.ByteArrayOutputStream: toByteArray()[B'/>
			<edge id='604' source='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='605' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='606' source='com.masshabit.common.physics.SpringConstraint: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='607' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: init(java.io.OutputStream)void'/>
			<edge id='608' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='609' source='com.masshabit.common.Clock$Time: init(com.masshabit.common.Clock,J)void' target='java.lang.Object: init()void'/>
			<edge id='610' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='611' source='com.masshabit.common.physics.Vector2: distance(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: distance(FFFF)F'/>
			<edge id='612' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='613' source='com.masshabit.common.physics.Physics: unregisterGroup(com.masshabit.common.physics.CollisionGroup)void' target='java.util.ArrayList: remove(java.lang.Object)boolean'/>
			<edge id='614' source='com.masshabit.common.Level: init(java.lang.String)void' target='com.masshabit.common.resource.AnimationResourceMap: init(ILcom.masshabit.common.resource.BitmapResourceMap)void'/>
			<edge id='615' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='616' source='com.masshabit.squibble.free.activity.m: clinit()void' target='com.masshabit.squibble.free.activity.o: a()[Lcom.masshabit.squibble.free.activity.o'/>
			<edge id='617' source='com.masshabit.squibble.WorldMapNode: lockChildren()void' target='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'/>
			<edge id='618' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='619' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='620' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='621' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.squibble.HidableEntity: setVisible(boolean)void'/>
			<edge id='622' source='com.flurry.android.FlurryAgent: a(android.content.Context)void' target='android.os.SystemClock: elapsedRealtime()J'/>
			<edge id='623' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='624' source='com.masshabit.squibble.HowToScreen: fakeTap()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='625' source='com.masshabit.squibble.free.activity.g: processTRANSACT_FAILUE_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='626' source='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='627' source='com.masshabit.common.physics.Vector2: init(com.masshabit.common.physics.Vector2)void' target='java.lang.Object: init()void'/>
			<edge id='628' source='com.masshabit.squibble.UpsellScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='629' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean'/>
			<edge id='630' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='631' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Environment: draw(android.graphics.Canvas)void'/>
			<edge id='632' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: h()void'/>
			<edge id='633' source='com.masshabit.squibble.MenuScreen: update(F)void' target='com.masshabit.common.Layer: update(F)void'/>
			<edge id='634' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void'/>
			<edge id='635' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='636' source='com.masshabit.common.tween.Ease: clinit()void' target='com.masshabit.common.tween.Ease$4: init()void'/>
			<edge id='637' source='com.android.vending.licensing.LicenseChecker$ResultListener: verifyLicense(ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.LicenseChecker$ResultListener$2: init(com.android.vending.licensing.LicenseChecker$ResultListener,ILjava.lang.String,java.lang.String)void'/>
			<edge id='638' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.common.License: getStatus()java.lang.Integer'/>
			<edge id='639' source='com.masshabit.common.physics.Constraint: init()void' target='java.lang.Object: init()void'/>
			<edge id='640' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='641' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='642' source='com.masshabit.squibble.free.activity.b.h: b()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='643' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.Environment: quit()void'/>
			<edge id='644' source='com.masshabit.squibble.free.activity.a.f: c()boolean' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='645' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='646' source='com.masshabit.squibble.free.activity.a.r: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='647' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void'/>
			<edge id='648' source='com.masshabit.common.entity.Entity: calcMatrix()void' target='android.graphics.Matrix: postTranslate(FF)boolean'/>
			<edge id='649' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'/>
			<edge id='650' source='com.masshabit.squibble.free.activity.b.w: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='651' source='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: g()android.content.Intent'/>
			<edge id='652' source='com.masshabit.squibble.Game$1: run()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='653' source='com.masshabit.squibble.free.activity.a.c: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='654' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.net.Socket: close()void'/>
			<edge id='655' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.CircleParticle: setVelocity(com.masshabit.common.physics.Vector2)void'/>
			<edge id='656' source='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='657' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='658' source='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='659' source='com.masshabit.squibble.SplashScreen: delayComplete(com.masshabit.common.Delay)void' target='com.masshabit.squibble.SplashScreen: proceed()void'/>
			<edge id='660' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: obtain()android.os.Parcel'/>
			<edge id='661' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseChecker: runChecks()void'/>
			<edge id='662' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='android.content.Context: getPackageManager()android.content.pm.PackageManager'/>
			<edge id='663' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='664' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.database.Cursor: moveToFirst()boolean'/>
			<edge id='665' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='666' source='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'/>
			<edge id='667' source='com.masshabit.common.curve.PolyCubicBezier: draw(android.graphics.Canvas)void' target='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void'/>
			<edge id='668' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='java.security.KeyFactory: getInstance(java.lang.String)java.security.KeyFactory'/>
			<edge id='669' source='com.masshabit.squibble.free.activity.a.v: b(java.lang.String)void' target='android.content.Context: setWallpaper(android.graphics.Bitmap)void'/>
			<edge id='670' source='com.masshabit.squibble.free.activity.e.k: m()void' target='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'/>
			<edge id='671' source='com.masshabit.common.tween.Ease$3: init()void' target='com.masshabit.common.tween.Ease$EaseBase: init()void'/>
			<edge id='672' source='com.masshabit.common.Environment: setMuted(boolean)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='673' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='674' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='675' source='com.masshabit.squibble.free.activity.a.q: c()boolean' target='com.masshabit.squibble.free.activity.e.k: j()void'/>
			<edge id='676' source='com.masshabit.common.Camera: update(F)void' target='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,F)void'/>
			<edge id='677' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='java.util.Timer: init()void'/>
			<edge id='678' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable'/>
			<edge id='679' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='680' source='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='681' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONObject: put(java.lang.String,D)org.json.JSONObject'/>
			<edge id='682' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.Boolean: parseBoolean(java.lang.String)boolean'/>
			<edge id='683' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='684' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='685' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='686' source='com.masshabit.squibble.free.activity.j: run()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='687' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='688' source='com.masshabit.common.Environment: init()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='689' source='com.masshabit.squibble.Game: saveState(android.os.Bundle)void' target='com.masshabit.squibble.Screen: saveState(android.os.Bundle)void'/>
			<edge id='690' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='691' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='692' source='com.masshabit.squibble.Game: update(F)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='693' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='694' source='com.masshabit.squibble.free.activity.b.o: b()void' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='695' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.app.NotificationManager: notify(ILandroid.app.Notification)void'/>
			<edge id='696' source='com.masshabit.squibble.free.activity.e.k: l()void' target='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'/>
			<edge id='697' source='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: values()[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode' target='[Lcom.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clone()java.lang.Object'/>
			<edge id='698' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: getNodeName()java.lang.String'/>
			<edge id='699' source='com.masshabit.squibble.free.activity.a: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='700' source='com.masshabit.squibble.free.activity.g: processTRANSACT_OK_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='701' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='702' source='com.masshabit.common.tween.Ease$4: init()void' target='com.masshabit.common.tween.Ease$EaseBase: init()void'/>
			<edge id='703' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='704' source='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='705' source='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='706' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: writeLong(J)void'/>
			<edge id='707' source='com.masshabit.squibble.free.activity.q: run()void' target='android.content.Intent: addFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='708' source='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='android.app.AlertDialog: findViewById(java.lang.Integer)android.view.View'/>
			<edge id='709' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='710' source='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' target='android.content.Intent: putExtra(java.lang.String,android.os.Parcelable)android.content.Intent'/>
			<edge id='711' source='com.masshabit.common.physics.CollisionGroup: size()java.lang.Integer' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='712' source='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.Camera: setTarget(FF)void'/>
			<edge id='713' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void'/>
			<edge id='714' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: setFilters([Landroid.text.InputFilter)void'/>
			<edge id='715' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.A: init(com.masshabit.squibble.free.activity.h,android.content.Context,I[Ljava.lang.String)void'/>
			<edge id='716' source='com.masshabit.squibble.free.activity.a.g: c()boolean' target='com.masshabit.squibble.free.activity.e.l: start()void'/>
			<edge id='717' source='com.masshabit.squibble.free.activity.b.c: b()void' target='android.content.Intent: setData(android.net.Uri)android.content.Intent'/>
			<edge id='718' source='com.masshabit.common.Environment: setFocused(boolean)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='719' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='720' source='com.masshabit.squibble.WorldMapNode: finalizeConnections()void' target='java.lang.Integer: intValue()java.lang.Integer'/>
			<edge id='721' source='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='722' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='723' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='724' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.util.Vector: indexOf(java.lang.Object)java.lang.Integer'/>
			<edge id='725' source='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void' target='java.util.concurrent.Semaphore: acquireUninterruptibly()void'/>
			<edge id='726' source='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String' target='android.content.Context: getPackageManager()android.content.pm.PackageManager'/>
			<edge id='727' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='728' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: getSettings()android.webkit.WebSettings'/>
			<edge id='729' source='com.android.vending.licensing.LicenseChecker$ResultListener: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Handler: post(java.lang.Runnable)boolean'/>
			<edge id='730' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Level: registerGeometry()void'/>
			<edge id='731' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='android.os.Handler: init(android.os.Handler$Callback)void'/>
			<edge id='732' source='com.masshabit.common.physics.CollisionComponents: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='733' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getDeviceId()java.lang.String'/>
			<edge id='734' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B'/>
			<edge id='735' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'/>
			<edge id='736' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='java.lang.Math: max(FF)F'/>
			<edge id='737' source='com.masshabit.common.Camera: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='738' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='android.view.Menu: add(java.lang.CharSequence)android.view.MenuItem'/>
			<edge id='739' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.Cipher: init(ILjava.security.Key)void'/>
			<edge id='740' source='com.masshabit.common.Environment: init()void' target='com.masshabit.common.Camera: restoreState(android.os.Bundle)void'/>
			<edge id='741' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.lang.StringBuilder: init()void'/>
			<edge id='742' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='java.util.HashSet: init()void'/>
			<edge id='743' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.ItemEntity: init()void'/>
			<edge id='744' source='com.flurry.android.FlurryAgent: f()void' target='com.flurry.android.FlurryAgent: g()void'/>
			<edge id='745' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: moveToNext()boolean'/>
			<edge id='746' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.ByteArrayOutputStream: toByteArray()[B'/>
			<edge id='747' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='748' source='com.masshabit.common.Environment: surfaceDestroyed()void' target='java.util.concurrent.Semaphore: release()void'/>
			<edge id='749' source='com.masshabit.squibble.GameScreen: saveState(android.os.Bundle)void' target='com.masshabit.common.Layer: saveState(android.os.Bundle)void'/>
			<edge id='750' source='com.masshabit.common.Deque: peek_front()java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='751' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean'/>
			<edge id='752' source='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='753' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='754' source='com.masshabit.common.Environment: setMuted(boolean)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='755' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String'/>
			<edge id='756' source='com.masshabit.common.physics.Vector2: length()F' target='java.lang.Math: sqrt(D)D'/>
			<edge id='757' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.MenuScreen$3: init(com.masshabit.squibble.MenuScreen,android.app.AlertDialog)void'/>
			<edge id='758' source='com.masshabit.common.physics.SegmentParticle: set(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.SegmentParticle: set(FFFF)void'/>
			<edge id='759' source='com.masshabit.common.LevelLoader$MinBounds: addChild(FF)void' target='java.lang.Math: min(FF)F'/>
			<edge id='760' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='761' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='762' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: writeShort(java.lang.Integer)void'/>
			<edge id='763' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void'/>
			<edge id='764' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Level: init(java.lang.String)void'/>
			<edge id='765' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setAlpha(java.lang.Integer)void'/>
			<edge id='766' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='767' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getNetworkOperator()java.lang.String'/>
			<edge id='768' source='com.masshabit.squibble.WorldMapHud: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='769' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='770' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.SegmentParticle: getPoint1(com.masshabit.common.physics.Vector2)void'/>
			<edge id='771' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='com.masshabit.common.physics.CollisionComponents: init()void'/>
			<edge id='772' source='com.masshabit.common.physics.Particle: setVelocity(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='773' source='com.masshabit.squibble.free.activity.e.r: clinit()void' target='javax.xml.parsers.DocumentBuilderFactory: newInstance()javax.xml.parsers.DocumentBuilderFactory'/>
			<edge id='774' source='com.masshabit.squibble.free.activity.a.c: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='775' source='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String' target='java.lang.String: valueOf(java.lang.Integer)java.lang.String'/>
			<edge id='776' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='777' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='778' source='com.masshabit.squibble.free.activity.b.g: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='779' source='com.masshabit.common.physics.Particle: update(F)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='780' source='com.masshabit.squibble.SplashScreen: init()void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='781' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Map$Entry: getKey()java.lang.Object'/>
			<edge id='782' source='com.flurry.android.Flog: c(java.lang.String,java.lang.String)java.lang.Integer' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='783' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties'/>
			<edge id='784' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.io.DataOutputStream: init(java.io.OutputStream)void'/>
			<edge id='785' source='com.masshabit.squibble.free.activity.b.c: b()void' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='786' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='787' source='com.masshabit.squibble.GameScreen: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='788' source='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='789' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='790' source='com.masshabit.squibble.WorldMapNode: unlockChildren()void' target='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'/>
			<edge id='791' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='792' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='793' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='794' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.net.URL: openConnection()java.net.URLConnection'/>
			<edge id='795' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='com.masshabit.common.Layer: init()void'/>
			<edge id='796' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='javax.xml.parsers.ParserConfigurationException: printStackTrace()void'/>
			<edge id='797' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.p: init(java.lang.String)void'/>
			<edge id='798' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.Float: valueOf(F)java.lang.Float'/>
			<edge id='799' source='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='800' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='801' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.Flog: a(java.lang.String)boolean'/>
			<edge id='802' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='803' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='804' source='com.masshabit.squibble.free.activity.d.c: init([Lcom.masshabit.squibble.free.activity.d.e)void' target='java.lang.Object: init()void'/>
			<edge id='805' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setOnCancelListener(android.content.DialogInterface$OnCancelListener)android.app.AlertDialog$Builder'/>
			<edge id='806' source='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='807' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='808' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.util.Vector: add(java.lang.Object)boolean'/>
			<edge id='809' source='com.masshabit.squibble.WorldMapNode: init()void' target='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void'/>
			<edge id='810' source='com.android.vending.licensing.ServerManagedPolicy: allowAccess()boolean' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='811' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='com.masshabit.common.resource.Animation: init()void'/>
			<edge id='812' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor'/>
			<edge id='813' source='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='814' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.location.LocationManager: getLastKnownLocation(java.lang.String)android.location.Location'/>
			<edge id='815' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void' target='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'/>
			<edge id='816' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='817' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='android.text.TextUtils$SimpleStringSplitter: init(C)void'/>
			<edge id='818' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.net.Uri: withAppendedPath(android.net.Uri,java.lang.String)android.net.Uri'/>
			<edge id='819' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.common.License: ready()boolean'/>
			<edge id='820' source='com.masshabit.squibble.free.activity.j: run()void' target='java.net.Socket: getOutputStream()java.io.OutputStream'/>
			<edge id='821' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void' target='com.masshabit.squibble.free.activity.e.e: init()void'/>
			<edge id='822' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void'/>
			<edge id='823' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSimOperatorName()java.lang.String'/>
			<edge id='824' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Camera: move(com.masshabit.common.physics.Vector2)void'/>
			<edge id='825' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='826' source='com.masshabit.squibble.R$drawable: init()void' target='java.lang.Object: init()void'/>
			<edge id='827' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='android.graphics.BitmapFactory: decodeResource(android.content.res.Resources,java.lang.Integer)android.graphics.Bitmap'/>
			<edge id='828' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='android.content.Context: openFileInput(java.lang.String)java.io.FileInputStream'/>
			<edge id='829' source='com.masshabit.common.physics.Vector2: toString()java.lang.String' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='830' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='831' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String'/>
			<edge id='832' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.a: a(java.lang.String)java.lang.String'/>
			<edge id='833' source='com.masshabit.squibble.free.activity.b.s: a()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='834' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='android.widget.EditText: setText(java.lang.CharSequence)void'/>
			<edge id='835' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='836' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='837' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='838' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.g: a(java.lang.String)java.lang.String'/>
			<edge id='839' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='java.lang.Object: init()void'/>
			<edge id='840' source='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='841' source='com.masshabit.squibble.free.activity.r: onCancel(android.content.DialogInterface)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='842' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='843' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='844' source='com.masshabit.squibble.free.activity.a.h: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.m: b(java.lang.String)void'/>
			<edge id='845' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='846' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: setDoOutput(boolean)void'/>
			<edge id='847' source='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void' target='android.view.KeyEvent: getEventTime()J'/>
			<edge id='848' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='849' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='850' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='851' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='852' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='853' source='com.flurry.android.FlurryAgent: g()void' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='854' source='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='855' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='856' source='com.masshabit.squibble.Game$4: onMenuItemClick(android.view.MenuItem)boolean' target='com.masshabit.common.Environment: getArtificiallyPaused()boolean'/>
			<edge id='857' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.Object: init()void'/>
			<edge id='858' source='com.masshabit.squibble.free.activity.b.q: a()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='859' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='860' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='861' source='com.masshabit.common.ObjectPool: init(java.lang.Integer)void' target='java.lang.Object: init()void'/>
			<edge id='862' source='com.masshabit.squibble.StoryScreen: destroy()void' target='com.masshabit.common.resource.BitmapResourceMap: destroy()void'/>
			<edge id='863' source='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.a.Abstract)java.util.HashMap'/>
			<edge id='864' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'/>
			<edge id='865' source='com.masshabit.squibble.free.activity.e.e: init()void' target='java.lang.Object: init()void'/>
			<edge id='866' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='867' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='java.util.Queue: offer(java.lang.Object)boolean'/>
			<edge id='868' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='869' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.LevelLoader: load(java.lang.String)void'/>
			<edge id='870' source='com.masshabit.squibble.free.activity.e: b()java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='871' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='872' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='android.os.Bundle: getInt(java.lang.String)java.lang.Integer'/>
			<edge id='873' source='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='874' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='875' source='com.masshabit.squibble.StoryScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='876' source='com.masshabit.squibble.StoryScreen: delayComplete(com.masshabit.common.Delay)void' target='com.masshabit.squibble.StoryScreen: next()void'/>
			<edge id='877' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.LevelLoader$MinBounds: init(com.masshabit.common.LevelLoader)void'/>
			<edge id='878' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseCheckerCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'/>
			<edge id='879' source='com.masshabit.squibble.free.activity.b.i: b()void' target='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void'/>
			<edge id='880' source='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void' target='java.util.HashMap: init(java.lang.Integer)void'/>
			<edge id='881' source='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'/>
			<edge id='882' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Map$Entry: getKey()java.lang.Object'/>
			<edge id='883' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='884' source='com.masshabit.squibble.free.activity.a.k: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='885' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.util.concurrent.Semaphore: acquireUninterruptibly()void'/>
			<edge id='886' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout: setGravity(java.lang.Integer)void'/>
			<edge id='887' source='com.android.vending.licensing.LicenseChecker: clinit()void' target='java.security.SecureRandom: init()void'/>
			<edge id='888' source='com.masshabit.squibble.free.activity.e.l: run()void' target='com.masshabit.squibble.free.activity.e.m: a()void'/>
			<edge id='889' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='890' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.File: getParent()java.lang.String'/>
			<edge id='891' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='892' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='893' source='com.masshabit.squibble.Game: init()void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='894' source='com.masshabit.common.physics.Particle: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.common.physics.ICollisionListener: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer'/>
			<edge id='895' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='896' source='com.masshabit.common.Level: init(java.lang.String)void' target='com.masshabit.common.resource.BitmapResourceMap: init(java.lang.Integer)void'/>
			<edge id='897' source='com.flurry.android.FlurryAgent: setCaptureUncaughtExceptions(boolean)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='898' source='com.masshabit.squibble.free.activity.e.o: c()void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void'/>
			<edge id='899' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Clock: dt()F'/>
			<edge id='900' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.NullDeviceLimiter: init()void'/>
			<edge id='901' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setMessage(java.lang.Integer)android.app.AlertDialog$Builder'/>
			<edge id='902' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'/>
			<edge id='903' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='904' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void'/>
			<edge id='905' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='906' source='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='907' source='com.masshabit.common.Clock: stop()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='908' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: mkdirs()boolean'/>
			<edge id='909' source='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='910' source='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void' target='android.os.Handler: postDelayed(java.lang.Runnable,J)boolean'/>
			<edge id='911' source='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String,java.lang.String)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='912' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: setLayoutParams(android.view.ViewGroup$LayoutParams)void'/>
			<edge id='913' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='914' source='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void' target='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void'/>
			<edge id='915' source='com.masshabit.squibble.HowToScreen: destroy()void' target='com.masshabit.common.Level: destroy()void'/>
			<edge id='916' source='com.masshabit.squibble.free.activity.b.c: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='917' source='com.masshabit.squibble.free.activity.e.j: init()void' target='java.lang.Object: init()void'/>
			<edge id='918' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='919' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='920' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='921' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='922' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setCancelable(boolean)android.app.AlertDialog$Builder'/>
			<edge id='923' source='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void' target='com.masshabit.common.Environment: updateThreadCondition()void'/>
			<edge id='924' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='925' source='com.masshabit.squibble.Game: pushScreen(IF)void' target='com.masshabit.squibble.Game$ShowCommand: set(IF)void'/>
			<edge id='926' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='927' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.CircleParticle: clearForce()void'/>
			<edge id='928' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='android.content.Intent: init(java.lang.String,android.net.Uri)void'/>
			<edge id='929' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='930' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='931' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: init()void'/>
			<edge id='932' source='com.masshabit.squibble.GameScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.Environment: showDialog(java.lang.Integer)void'/>
			<edge id='933' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.Environment: setMuted(boolean)void'/>
			<edge id='934' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.Exception: init()void'/>
			<edge id='935' source='com.masshabit.squibble.free.activity.a.v: b(java.lang.String)void' target='android.graphics.BitmapFactory: decodeFile(java.lang.String)android.graphics.Bitmap'/>
			<edge id='936' source='com.masshabit.common.ObjectPool: init()void' target='java.lang.Object: init()void'/>
			<edge id='937' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='938' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.WorldMapPlayer: init()void'/>
			<edge id='939' source='com.masshabit.squibble.WorldMapHud: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='940' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.Policy: allowAccess()boolean'/>
			<edge id='941' source='com.masshabit.squibble.free.activity.b.n: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='942' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='943' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='944' source='com.masshabit.common.physics.Physics: registerGroup(com.masshabit.common.physics.CollisionGroup)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='945' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor'/>
			<edge id='946' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.LicenseValidator: handleInvalidResponse()void'/>
			<edge id='947' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='948' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='android.content.Context: getApplicationContext()android.content.Context'/>
			<edge id='949' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void'/>
			<edge id='950' source='com.masshabit.squibble.free.activity.d.e: toString()java.lang.String' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='951' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.os.Looper: getMainLooper()android.os.Looper'/>
			<edge id='952' source='com.masshabit.squibble.Screen: init()void' target='java.lang.Object: init()void'/>
			<edge id='953' source='com.masshabit.squibble.free.activity.a.t: run()void' target='android.widget.Toast: makeText(android.content.Context,java.lang.CharSequence,java.lang.Integer)android.widget.Toast'/>
			<edge id='954' source='com.masshabit.common.Environment: dispatchEvents()void' target='com.masshabit.squibble.Game: onInputEvent(com.masshabit.common.InputEvent)void'/>
			<edge id='955' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='956' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.squibble.ButtonEntity: setVisible(boolean)void'/>
			<edge id='957' source='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.Policy: allowAccess()boolean'/>
			<edge id='958' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='959' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='960' source='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void' target='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'/>
			<edge id='961' source='com.masshabit.squibble.free.activity.m: clinit()void' target='com.masshabit.squibble.free.activity.o: ordinal()java.lang.Integer'/>
			<edge id='962' source='com.masshabit.squibble.free.activity.a.l: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='963' source='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='964' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Element: getElementsByTagName(java.lang.String)org.w3c.dom.NodeList'/>
			<edge id='965' source='com.masshabit.common.InputEventPool: init(java.lang.Integer)void' target='com.masshabit.common.ObjectPool: init(java.lang.Integer)void'/>
			<edge id='966' source='com.masshabit.squibble.WorldMapNode: finalizeConnections()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='967' source='com.masshabit.squibble.free.activity.e.d: a([D)boolean' target='android.location.Location: getLongitude()D'/>
			<edge id='968' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='969' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='java.util.Date: getTime()J'/>
			<edge id='970' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='971' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='972' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipEntry: isDirectory()boolean'/>
			<edge id='973' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='974' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='java.lang.Math: min(FF)F'/>
			<edge id='975' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout: setOrientation(java.lang.Integer)void'/>
			<edge id='976' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='com.masshabit.squibble.free.activity.e.p: b([B)[B'/>
			<edge id='977' source='com.masshabit.common.physics.Particle: clearForce()void' target='com.masshabit.common.physics.Vector2: zero()void'/>
			<edge id='978' source='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='979' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='980' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: angle()F'/>
			<edge id='981' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.LevelLoader: load(java.lang.String)void'/>
			<edge id='982' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.physics.CircleParticle: setCollisionListener(com.masshabit.common.physics.ICollisionListener)void'/>
			<edge id='983' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='984' source='com.masshabit.squibble.WorldMapHud: setActive(boolean)void' target='java.lang.Math: abs(F)F'/>
			<edge id='985' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void'/>
			<edge id='986' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='java.lang.String: init(java.lang.String)void'/>
			<edge id='987' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='988' source='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String' target='android.content.pm.PackageManager: getPackageInfo(java.lang.String,java.lang.Integer)android.content.pm.PackageInfo'/>
			<edge id='989' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.util.HashMap: init()void'/>
			<edge id='990' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='991' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='992' source='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='993' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='994' source='com.masshabit.squibble.Game$3: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='995' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='996' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='997' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='998' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='999' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.g: init(java.lang.String)void'/>
			<edge id='1000' source='com.masshabit.squibble.free.activity.a.m: d()void' target='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='1001' source='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void' target='java.lang.Object: init()void'/>
			<edge id='1002' source='com.masshabit.squibble.MainActivity: onDestroy()void' target='com.masshabit.common.License: destroy()void'/>
			<edge id='1003' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean'/>
			<edge id='1004' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONObject: getDouble(java.lang.String)D'/>
			<edge id='1005' source='com.android.vending.licensing.StrictPolicy: init()void' target='java.lang.Object: init()void'/>
			<edge id='1006' source='com.masshabit.common.entity.StaticEntity: init()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='1007' source='com.flurry.android.a: init(com.flurry.android.FlurryAgent,android.content.Context)void' target='java.lang.Object: init()void'/>
			<edge id='1008' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.common.Environment: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='1009' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.h: b()boolean'/>
			<edge id='1010' source='com.masshabit.squibble.free.activity.j: run()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='1011' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='1012' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='javax.xml.parsers.DocumentBuilder: parse(java.io.InputStream)org.w3c.dom.Document'/>
			<edge id='1013' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1014' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.common.Environment: showDialog(java.lang.Integer)void'/>
			<edge id='1015' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='1016' source='com.masshabit.common.entity.Entity: init()void' target='com.masshabit.common.entity.Entity: initChildren()void'/>
			<edge id='1017' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='1018' source='com.masshabit.squibble.free.activity.j: run()void' target='java.net.ServerSocket: accept()java.net.Socket'/>
			<edge id='1019' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void'/>
			<edge id='1020' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='com.masshabit.common.resource.AnimationState: setPlayhead(java.lang.Integer)void'/>
			<edge id='1021' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1022' source='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.a.Abstract: i()[Ljava.lang.String'/>
			<edge id='1023' source='com.masshabit.squibble.free.activity.e.k: j()void' target='java.util.Vector: add(java.lang.Object)boolean'/>
			<edge id='1024' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.squibble.WorldMapHud: setActive(boolean)void'/>
			<edge id='1025' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='java.util.Vector: add(java.lang.Object)boolean'/>
			<edge id='1026' source='com.masshabit.squibble.WorldMapNode: addConnection(ILcom.masshabit.squibble.WorldMapNode$Connection)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='1027' source='com.masshabit.common.curve.PolyCubicBezier: toString()java.lang.String' target='java.util.ArrayList: toString()java.lang.String'/>
			<edge id='1028' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.LevelLoader: load(java.lang.String)void'/>
			<edge id='1029' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout: init(android.content.Context)void'/>
			<edge id='1030' source='com.masshabit.squibble.free.activity.e.k: e()java.lang.String' target='com.masshabit.squibble.free.activity.e: e()java.lang.String'/>
			<edge id='1031' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Paint: getTextSize()F'/>
			<edge id='1032' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONObject: init()void'/>
			<edge id='1033' source='com.flurry.android.a: run()void' target='com.flurry.android.FlurryAgent: a(android.content.Context)void'/>
			<edge id='1034' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.w: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.c)void'/>
			<edge id='1035' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='1036' source='com.masshabit.squibble.MuteEntity: toggle()void' target='com.masshabit.common.Environment: setMuted(boolean)void'/>
			<edge id='1037' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='1038' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.Thread: setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)void'/>
			<edge id='1039' source='com.masshabit.squibble.free.activity.e: c()java.lang.String' target='android.os.Bundle: getString(java.lang.String)java.lang.String'/>
			<edge id='1040' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: getLong(java.lang.Integer)J'/>
			<edge id='1041' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1042' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='1043' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.util.regex.Matcher: matches()boolean'/>
			<edge id='1044' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1045' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.InputStream: close()void'/>
			<edge id='1046' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1047' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.LicenseValidator: handleApplicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'/>
			<edge id='1048' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void' target='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'/>
			<edge id='1049' source='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' target='android.media.SoundPool: load(android.content.res.AssetFileDescriptor,java.lang.Integer)java.lang.Integer'/>
			<edge id='1050' source='com.masshabit.common.LevelLoader$MinBounds: init(com.masshabit.common.LevelLoader)void' target='java.lang.Object: init()void'/>
			<edge id='1051' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.Button: setOnClickListener(android.view.View$OnClickListener)void'/>
			<edge id='1052' source='com.masshabit.squibble.CheckingLicenseScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='1053' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.Integer: intValue()java.lang.Integer'/>
			<edge id='1054' source='com.masshabit.squibble.free.activity.a.m: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='1055' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='1056' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.io.DataOutputStream: flush()void'/>
			<edge id='1057' source='com.masshabit.squibble.free.activity.b.i: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1058' source='com.masshabit.squibble.ItemEntity: update(F)void' target='com.masshabit.common.resource.AnimationState: update(F)void'/>
			<edge id='1059' source='com.flurry.android.b: init(com.flurry.android.FlurryAgent)void' target='java.lang.Object: init()void'/>
			<edge id='1060' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1061' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: enforceInterface(java.lang.String)void'/>
			<edge id='1062' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1063' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Parcel: obtain()android.os.Parcel'/>
			<edge id='1064' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.Globals: init()void'/>
			<edge id='1065' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: exists()boolean'/>
			<edge id='1066' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: getParentFile()java.io.File'/>
			<edge id='1067' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='1068' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='java.lang.Math: exp(D)D'/>
			<edge id='1069' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.o: init(java.lang.String)void'/>
			<edge id='1070' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setNegativeButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='1071' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void'/>
			<edge id='1072' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.Physics$RayCastResult: init()void'/>
			<edge id='1073' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String'/>
			<edge id='1074' source='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='1075' source='com.flurry.android.FlurryAgent: init()void' target='java.util.WeakHashMap: init()void'/>
			<edge id='1076' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.MuteEntity: init()void'/>
			<edge id='1077' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1078' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1079' source='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F' target='com.masshabit.squibble.WorldMapPath: getLength()F'/>
			<edge id='1080' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='1081' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='1082' source='com.masshabit.squibble.free.R$string: init()void' target='java.lang.Object: init()void'/>
			<edge id='1083' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1084' source='com.masshabit.squibble.Game: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='1085' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: getInt(java.lang.String)java.lang.Integer'/>
			<edge id='1086' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1087' source='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1088' source='com.masshabit.squibble.GameScreen: update(F)void' target='com.masshabit.common.Layer: update(F)void'/>
			<edge id='1089' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='1090' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' target='android.view.MotionEvent: getX()F'/>
			<edge id='1091' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.c.Show: show()void'/>
			<edge id='1092' source='com.masshabit.squibble.MainView: surfaceCreated(android.view.SurfaceHolder)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1093' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1094' source='com.masshabit.common.physics.Particle: addImpulse(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1095' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: setShadowLayer(FFFI)void'/>
			<edge id='1096' source='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='1097' source='com.masshabit.squibble.free.activity.a.Abstract: clinit()void' target='com.masshabit.squibble.free.activity.a.a: init()void'/>
			<edge id='1098' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='1099' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1100' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1101' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Matrix: reset()void'/>
			<edge id='1102' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='1103' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: l()void'/>
			<edge id='1104' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='1105' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='1106' source='com.masshabit.squibble.free.activity.b.s: a()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1107' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1108' source='com.masshabit.squibble.Game: mutedChanged(boolean)void' target='android.content.SharedPreferences$Editor: putBoolean(java.lang.String,boolean)android.content.SharedPreferences$Editor'/>
			<edge id='1109' source='com.masshabit.squibble.MenuScreen: destroy()void' target='com.masshabit.common.Level: destroy()void'/>
			<edge id='1110' source='com.masshabit.squibble.WorldMapHud: setActive(boolean)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='1111' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='1112' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='1113' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.SegmentParticle: getPoint1(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1114' source='com.masshabit.squibble.free.activity.e.k: c()java.lang.String' target='com.masshabit.squibble.free.activity.e: c()java.lang.String'/>
			<edge id='1115' source='com.android.vending.licensing.R$layout: init()void' target='java.lang.Object: init()void'/>
			<edge id='1116' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='1117' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1118' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='1119' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='android.text.TextUtils$StringSplitter: iterator()java.util.Iterator'/>
			<edge id='1120' source='com.android.vending.licensing.util.Base64: decode([BII)[B' target='com.android.vending.licensing.util.Base64: decode([BII[B)[B'/>
			<edge id='1121' source='com.masshabit.squibble.free.activity.j: run()void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='1122' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.Element: getNodeName()java.lang.String'/>
			<edge id='1123' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='1124' source='com.masshabit.common.physics.Vector2: toString()java.lang.String' target='java.lang.Float: valueOf(F)java.lang.Float'/>
			<edge id='1125' source='com.masshabit.squibble.free.activity.b.w: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1126' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1127' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='1128' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: divide(F)void'/>
			<edge id='1129' source='com.masshabit.common.Environment: onPrepareDialog(ILandroid.app.Dialog)void' target='com.masshabit.squibble.Game: onPrepareDialog(ILandroid.app.Dialog)void'/>
			<edge id='1130' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='com.android.vending.licensing.util.Base64DecoderException: getMessage()java.lang.String'/>
			<edge id='1131' source='com.masshabit.squibble.free.activity.e: onDestroy()void' target='java.lang.Class: forName(java.lang.String)java.lang.Class'/>
			<edge id='1132' source='com.masshabit.squibble.free.activity.e.o: clinit()void' target='java.util.Vector: init()void'/>
			<edge id='1133' source='com.masshabit.common.Layer: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='1134' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='1135' source='com.masshabit.common.Camera: calculateMatrices()void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1136' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void' target='android.content.SharedPreferences$Editor: commit()boolean'/>
			<edge id='1137' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='android.graphics.Matrix: init()void'/>
			<edge id='1138' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='1139' source='com.masshabit.squibble.SplashScreen: init()void' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='1140' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='1141' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.io.InputStreamReader: init(java.io.InputStream)void'/>
			<edge id='1142' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='java.lang.StringBuilder: append(D)java.lang.StringBuilder'/>
			<edge id='1143' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1144' source='com.masshabit.squibble.free.activity.j: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Thread: init()void'/>
			<edge id='1145' source='com.masshabit.squibble.Player$Hand: update(F)void' target='com.masshabit.common.physics.SpringConstraint: getLengthSq()F'/>
			<edge id='1146' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='1147' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.InputStream: close()void'/>
			<edge id='1148' source='com.masshabit.squibble.free.activity.d.b: a()void' target='com.masshabit.squibble.free.activity.d.d: a()void'/>
			<edge id='1149' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1150' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.resource.AnimationState: update(F)void'/>
			<edge id='1151' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.DataInputStream: init(java.io.InputStream)void'/>
			<edge id='1152' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='1153' source='com.android.vending.licensing.Policy$LicenseResponse: values()[Lcom.android.vending.licensing.Policy$LicenseResponse' target='[Lcom.android.vending.licensing.Policy$LicenseResponse: clone()java.lang.Object'/>
			<edge id='1154' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean' target='java.util.Vector: iterator()java.util.Iterator'/>
			<edge id='1155' source='com.masshabit.squibble.MainActivity: onConfigurationChanged(android.content.res.Configuration)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1156' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='1157' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='1158' source='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void' target='java.lang.Object: init()void'/>
			<edge id='1159' source='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='1160' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1161' source='com.masshabit.common.Environment: dispatchEvents()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1162' source='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='1163' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.lang.String: getBytes()[B'/>
			<edge id='1164' source='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1165' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='com.masshabit.squibble.MainActivity$1: init(com.masshabit.squibble.MainActivity,[Ljava.lang.String)void'/>
			<edge id='1166' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='1167' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void'/>
			<edge id='1168' source='com.masshabit.squibble.NPC: saveState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='1169' source='com.masshabit.squibble.HowToScreen: fakeTap()void' target='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean'/>
			<edge id='1170' source='com.android.vending.licensing.Policy$LicenseResponse: clinit()void' target='com.android.vending.licensing.Policy$LicenseResponse: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='1171' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.io.FileInputStream: close()void'/>
			<edge id='1172' source='com.masshabit.squibble.free.activity.b: init(java.util.HashMap)void' target='java.lang.Object: init()void'/>
			<edge id='1173' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='org.apache.http.NameValuePair: getValue()java.lang.String'/>
			<edge id='1174' source='com.masshabit.squibble.WorldMapPlayer: update(F)void' target='com.masshabit.squibble.WorldMapPlayer: findLocation()void'/>
			<edge id='1175' source='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void' target='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean'/>
			<edge id='1176' source='com.masshabit.squibble.free.activity.a.t: run()void' target='android.widget.Toast: show()void'/>
			<edge id='1177' source='com.masshabit.common.Camera: calculateMatrices()void' target='android.graphics.Matrix: setTranslate(FF)void'/>
			<edge id='1178' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1179' source='com.masshabit.common.Camera: init()void' target='android.graphics.Matrix: init()void'/>
			<edge id='1180' source='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void' target='com.masshabit.squibble.WorldMapNode: lockChildren()void'/>
			<edge id='1181' source='com.masshabit.common.tween.Ease$1: init()void' target='com.masshabit.common.tween.Ease$EaseBase: init()void'/>
			<edge id='1182' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.WorldMapScreen: init()void'/>
			<edge id='1183' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='1184' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void' target='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.a)boolean'/>
			<edge id='1185' source='com.masshabit.common.Deque: push_front(java.lang.Object)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1186' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.ButtonEntity: init()void'/>
			<edge id='1187' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.g: c()boolean'/>
			<edge id='1188' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: setDoOutput(boolean)void'/>
			<edge id='1189' source='com.masshabit.common.ObjectPool: init(java.lang.Integer)void' target='com.masshabit.common.ObjectPool: setSize(java.lang.Integer)void'/>
			<edge id='1190' source='com.masshabit.squibble.StoryScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='1191' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='1192' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1193' source='com.masshabit.squibble.free.activity.b.q: a()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1194' source='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' target='android.content.res.AssetManager: openFd(java.lang.String)android.content.res.AssetFileDescriptor'/>
			<edge id='1195' source='com.masshabit.squibble.StoryScreen: init()void' target='java.io.InputStream: close()void'/>
			<edge id='1196' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: getIntent()android.content.Intent'/>
			<edge id='1197' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1198' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.curve.CubicBezier: init()void'/>
			<edge id='1199' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.h: a()boolean'/>
			<edge id='1200' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='1201' source='com.masshabit.squibble.free.activity.s: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='1202' source='com.masshabit.squibble.free.activity.b.m: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1203' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.io.DataOutputStream: close()void'/>
			<edge id='1204' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.ProgressBar: setIndeterminate(boolean)void'/>
			<edge id='1205' source='com.masshabit.common.physics.Physics: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1206' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='android.os.Looper: getMainLooper()android.os.Looper'/>
			<edge id='1207' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='1208' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.String: lastIndexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='1209' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1210' source='com.masshabit.squibble.free.activity.e.d: a([D)boolean' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='1211' source='com.masshabit.squibble.free.activity.b.l: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='1212' source='com.android.vending.licensing.util.Base64: encode([B)java.lang.String' target='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String'/>
			<edge id='1213' source='com.masshabit.common.Environment: saveState(android.os.Bundle)void' target='com.masshabit.common.ProfileManagerBase: getCurrentProfile()java.lang.Integer'/>
			<edge id='1214' source='com.masshabit.squibble.free.activity.e.q: init()void' target='java.lang.Object: init()void'/>
			<edge id='1215' source='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1216' source='com.masshabit.common.tween.VectorTween: update(F)void' target='com.masshabit.common.tween.ITweenCompleteListener: tweenComplete(java.lang.Object)void'/>
			<edge id='1217' source='com.masshabit.squibble.free.activity.j: run()void' target='java.net.Socket: getInputStream()java.io.InputStream'/>
			<edge id='1218' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: containsKey(java.lang.Object)boolean'/>
			<edge id='1219' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: init(java.io.OutputStream)void'/>
			<edge id='1220' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: init(java.io.OutputStream)void'/>
			<edge id='1221' source='com.masshabit.common.physics.Particle: clearImpulse()void' target='com.masshabit.common.physics.Vector2: zero()void'/>
			<edge id='1222' source='com.masshabit.squibble.WorldMapHud: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='1223' source='com.flurry.android.FlurryAgent: clinit()void' target='com.flurry.android.FlurryAgent: init()void'/>
			<edge id='1224' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1225' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1226' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='com.masshabit.squibble.free.activity.u: init()void'/>
			<edge id='1227' source='com.masshabit.common.Environment: saveState(android.os.Bundle)void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='1228' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.License: instance()com.masshabit.common.License'/>
			<edge id='1229' source='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1230' source='com.masshabit.common.tween.Ease$3: ease(F)F' target='com.masshabit.common.tween.Ease: easeInOut(F)F'/>
			<edge id='1231' source='com.flurry.android.FlurryAgent: a(android.content.Context)void' target='com.flurry.android.FlurryAgent: f()void'/>
			<edge id='1232' source='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.LicenseCheckerCallback: dontAllow()void'/>
			<edge id='1233' source='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' target='android.content.pm.PackageManager: getPackageInfo(java.lang.String,java.lang.Integer)android.content.pm.PackageInfo'/>
			<edge id='1234' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.Pushable: a()[Ljava.lang.String'/>
			<edge id='1235' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: init(android.content.Context)void'/>
			<edge id='1236' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.WorldMapPath: init(com.masshabit.common.curve.PolyCubicBezier)void'/>
			<edge id='1237' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='android.os.Handler: init(android.os.Looper)void'/>
			<edge id='1238' source='com.masshabit.squibble.Player$Hand: update(F)void' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='1239' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='1240' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setMessage(java.lang.Integer)android.app.AlertDialog$Builder'/>
			<edge id='1241' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='android.app.Activity: onCreate(android.os.Bundle)void'/>
			<edge id='1242' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1243' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.util.HashMap: init()void'/>
			<edge id='1244' source='com.masshabit.squibble.free.activity.b.l: b()void' target='com.masshabit.squibble.free.activity.b.l: c()boolean'/>
			<edge id='1245' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='1246' source='com.masshabit.squibble.free.activity.f: init()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1247' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='java.util.Map: get(java.lang.Object)java.lang.Object'/>
			<edge id='1248' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.n: init(java.lang.String)void'/>
			<edge id='1249' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='1250' source='com.masshabit.squibble.free.activity.e.l: run()void' target='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean'/>
			<edge id='1251' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='javax.crypto.Cipher: doFinal([B)[B'/>
			<edge id='1252' source='com.masshabit.squibble.free.activity.e.k: h()void' target='com.masshabit.squibble.free.activity.e.k: n()void'/>
			<edge id='1253' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.FileInputStream: close()void'/>
			<edge id='1254' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1255' source='com.masshabit.squibble.free.activity.a.d: b()boolean' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String'/>
			<edge id='1256' source='com.masshabit.common.Camera: move(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.Camera: move(FF)void'/>
			<edge id='1257' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1258' source='com.masshabit.squibble.Game: mutedChanged(boolean)void' target='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'/>
			<edge id='1259' source='com.masshabit.squibble.free.activity.a: clinit()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1260' source='com.masshabit.squibble.NPC: init()void' target='java.lang.Boolean: booleanValue()boolean'/>
			<edge id='1261' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='1262' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.util.Map: remove(java.lang.Object)java.lang.Object'/>
			<edge id='1263' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: draw(android.graphics.Canvas)void'/>
			<edge id='1264' source='com.masshabit.squibble.GameScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1265' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.g: init(java.lang.String)void'/>
			<edge id='1266' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='1267' source='com.masshabit.squibble.free.activity.e: b()java.lang.String' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='1268' source='com.masshabit.common.physics.SegmentParticle: set(FFFF)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1269' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='1270' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1271' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='android.content.Intent: init()void'/>
			<edge id='1272' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='com.masshabit.common.physics.CircleParticle: velX()F'/>
			<edge id='1273' source='com.masshabit.squibble.Profile: isLevelComplete(java.lang.String)boolean' target='java.util.HashMap: containsKey(java.lang.Object)boolean'/>
			<edge id='1274' source='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' target='android.app.Activity: getString(java.lang.Integer)java.lang.String'/>
			<edge id='1275' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='java.io.File: exists()boolean'/>
			<edge id='1276' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='1277' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1278' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='1279' source='com.masshabit.common.entity.Entity: calcMatrix()void' target='android.graphics.Matrix: reset()void'/>
			<edge id='1280' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e: g()java.lang.String'/>
			<edge id='1281' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.spec.DESKeySpec: init([B)void'/>
			<edge id='1282' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: init(FF)void'/>
			<edge id='1283' source='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.Deque: empty()void'/>
			<edge id='1284' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.String: getBytes()[B'/>
			<edge id='1285' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: readString()java.lang.String'/>
			<edge id='1286' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='1287' source='com.masshabit.squibble.HowToScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1288' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1289' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='javax.crypto.Cipher: doFinal([B)[B'/>
			<edge id='1290' source='com.masshabit.squibble.free.activity.a.n: d()void' target='com.masshabit.squibble.free.activity.a.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='1291' source='com.masshabit.squibble.MenuScreen$DialogResponse: init(ILjava.lang.Object)void' target='java.lang.Object: init()void'/>
			<edge id='1292' source='com.masshabit.common.physics.SegmentParticle: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='1293' source='com.masshabit.common.physics.Vector2: distanceSq(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: distanceSq(FFFF)F'/>
			<edge id='1294' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1295' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Level: registerGeometry()void'/>
			<edge id='1296' source='com.masshabit.common.Environment: purgeEvents()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='1297' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: init(java.lang.String)void'/>
			<edge id='1298' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1299' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1300' source='com.flurry.android.b: run()void' target='com.flurry.android.FlurryAgent: a()void'/>
			<edge id='1301' source='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent' target='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent'/>
			<edge id='1302' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='1303' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='java.lang.Object: getClass()java.lang.Class'/>
			<edge id='1304' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.WorldMapHud: drawChildren(android.graphics.Canvas)void'/>
			<edge id='1305' source='com.masshabit.squibble.free.activity.a.f: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='1306' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: scale(FF)void'/>
			<edge id='1307' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='1308' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.CircleParticle: clearAcceleration()void'/>
			<edge id='1309' source='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: init(java.lang.String,java.lang.Integer)void' target='java.lang.Enum: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='1310' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: putBoolean(java.lang.String,boolean)void'/>
			<edge id='1311' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1312' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1313' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.n: init(java.lang.String)void'/>
			<edge id='1314' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.util.List: add(java.lang.Object)boolean'/>
			<edge id='1315' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.squibble.EntityFactory: init()void'/>
			<edge id='1316' source='com.masshabit.squibble.Screen: init()void' target='android.media.SoundPool: init(III)void'/>
			<edge id='1317' source='com.masshabit.squibble.free.activity.b.r: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='1318' source='com.masshabit.squibble.free.activity.b.n: b()void' target='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean'/>
			<edge id='1319' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.q: init(java.lang.String)void'/>
			<edge id='1320' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.squibble.NPC: initChildren()void'/>
			<edge id='1321' source='com.masshabit.common.physics.HalfEdge: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawLine(FFFFLandroid.graphics.Paint)void'/>
			<edge id='1322' source='com.masshabit.squibble.free.activity.b.l: a()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1323' source='com.flurry.android.FlurryAgent: c()void' target='android.location.Location: getLongitude()D'/>
			<edge id='1324' source='com.masshabit.squibble.free.activity.a.l: d()void' target='com.masshabit.squibble.free.activity.a.l: a(java.lang.String,java.lang.String)void'/>
			<edge id='1325' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.DataInputStream: readBoolean()boolean'/>
			<edge id='1326' source='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void' target='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean'/>
			<edge id='1327' source='com.masshabit.common.License: instance()com.masshabit.common.License' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1328' source='com.masshabit.squibble.free.activity.a.o: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='1329' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1330' source='com.masshabit.squibble.free.activity.b.e: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1331' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='android.graphics.BitmapFactory: decodeStream(java.io.InputStream)android.graphics.Bitmap'/>
			<edge id='1332' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1333' source='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='1334' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1335' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='1336' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1337' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.FileOutputStream: init(java.io.File)void'/>
			<edge id='1338' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.FileOutputStream: close()void'/>
			<edge id='1339' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='1340' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1341' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1342' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void'/>
			<edge id='1343' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1344' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.ByteArrayOutputStream: toByteArray()[B'/>
			<edge id='1345' source='com.masshabit.squibble.free.activity.b.n: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1346' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1347' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1348' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='1349' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1350' source='com.flurry.android.FlurryAgent: a(android.content.Context)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='1351' source='com.masshabit.squibble.free.activity.b.n: b()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='1352' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1353' source='com.masshabit.squibble.Game: saveState(android.os.Bundle)void' target='android.os.Bundle: putBoolean(java.lang.String,boolean)void'/>
			<edge id='1354' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Node: getFirstChild()org.w3c.dom.Node'/>
			<edge id='1355' source='com.masshabit.squibble.SplashScreen: init()void' target='java.io.InputStream: close()void'/>
			<edge id='1356' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.regex.Pattern: matcher(java.lang.CharSequence)java.util.regex.Matcher'/>
			<edge id='1357' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseCheckerCallback: allow()void'/>
			<edge id='1358' source='com.masshabit.common.physics.Vector2: clinit()void' target='com.masshabit.common.physics.Vector2: init(FF)void'/>
			<edge id='1359' source='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void' target='com.masshabit.common.InputEventPool: allocate()java.lang.Object'/>
			<edge id='1360' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.URL: init(java.lang.String)void'/>
			<edge id='1361' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='1362' source='com.masshabit.common.Clock: dt()F' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='1363' source='com.masshabit.common.entity.PathEntity: init(com.masshabit.common.curve.PolyCubicBezier)void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='1364' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='com.masshabit.squibble.WorldMapNode: findConnection(java.lang.Integer)java.lang.Integer'/>
			<edge id='1365' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='1366' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1367' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='1368' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.regex.Matcher: find()boolean'/>
			<edge id='1369' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1370' source='com.masshabit.squibble.free.activity.a.g: c()boolean' target='com.masshabit.squibble.free.activity.a.g: a(java.lang.String)java.lang.String'/>
			<edge id='1371' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='1372' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setNegativeButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='1373' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.String: lastIndexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1374' source='com.masshabit.common.physics.Vector2: normalize()F' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='1375' source='com.masshabit.squibble.Game: threadedInit()void' target='java.lang.Thread: start()void'/>
			<edge id='1376' source='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='1377' source='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void' target='com.masshabit.squibble.WorldMapNode: unlockChildren()void'/>
			<edge id='1378' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.view.ViewGroup$LayoutParams: init(II)void'/>
			<edge id='1379' source='com.masshabit.common.curve.PolyCubicBezier: draw(android.graphics.Canvas)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1380' source='com.masshabit.common.physics.Vector2: init()void' target='java.lang.Object: init()void'/>
			<edge id='1381' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='com.android.vending.licensing.LicenseValidator: getPackageName()java.lang.String'/>
			<edge id='1382' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuffer: length()java.lang.Integer'/>
			<edge id='1383' source='com.masshabit.squibble.free.activity.z: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='1384' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='1385' source='com.masshabit.squibble.free.activity.b.m: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1386' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.OutputStream: flush()void'/>
			<edge id='1387' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.o: a(java.lang.String)java.lang.String'/>
			<edge id='1388' source='com.masshabit.squibble.free.activity.e.c: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1389' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='1390' source='com.android.vending.licensing.LicenseChecker: onDestroy()void' target='android.os.Looper: quit()void'/>
			<edge id='1391' source='com.masshabit.squibble.free.activity.b.l: b()void' target='com.masshabit.squibble.free.activity.g: a(java.lang.String,ILjava.util.Date,java.util.Date)void'/>
			<edge id='1392' source='com.masshabit.squibble.free.activity.b.e: clinit()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1393' source='com.masshabit.squibble.Game: delayComplete(com.masshabit.common.Delay)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1394' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1395' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: setAlpha(java.lang.Integer)void'/>
			<edge id='1396' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='java.lang.System: gc()void'/>
			<edge id='1397' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1398' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='1399' source='com.masshabit.squibble.free.activity.a: clinit()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1400' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='1401' source='com.masshabit.common.Deque: push_back(java.lang.Object)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1402' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void'/>
			<edge id='1403' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.io.DataOutputStream: write([B)void'/>
			<edge id='1404' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.d.e: a()java.lang.Object'/>
			<edge id='1405' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1406' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='1407' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.free.activity.t: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='1408' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.Element: getNodeName()java.lang.String'/>
			<edge id='1409' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void' target='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'/>
			<edge id='1410' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.File: mkdirs()boolean'/>
			<edge id='1411' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.C: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.a.Abstract)void'/>
			<edge id='1412' source='com.masshabit.squibble.free.activity.c: a(com.masshabit.squibble.free.activity.e.m)void' target='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.e.m)void'/>
			<edge id='1413' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='1414' source='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='1415' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1416' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='1417' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void'/>
			<edge id='1418' source='com.masshabit.squibble.free.activity.b.h: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1419' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='com.android.vending.licensing.ILicenseResultListener$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicenseResultListener'/>
			<edge id='1420' source='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseValidator: getCallback()com.android.vending.licensing.LicenseCheckerCallback'/>
			<edge id='1421' source='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='1422' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void'/>
			<edge id='1423' source='com.masshabit.common.entity.Entity: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1424' source='com.masshabit.squibble.free.R$drawable: init()void' target='java.lang.Object: init()void'/>
			<edge id='1425' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.File: getParentFile()java.io.File'/>
			<edge id='1426' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1427' source='com.masshabit.common.physics.Physics$RayCastResult: init()void' target='java.lang.Object: init()void'/>
			<edge id='1428' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence'/>
			<edge id='1429' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1430' source='com.android.vending.licensing.ILicensingService$Stub: init()void' target='android.os.Binder: init()void'/>
			<edge id='1431' source='com.masshabit.common.Environment: destroy()void' target='com.masshabit.squibble.ProfileManager: destroy()void'/>
			<edge id='1432' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.Cipher: doFinal([B)[B'/>
			<edge id='1433' source='com.masshabit.squibble.HowToScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='1434' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.Integer: toString(II)java.lang.String'/>
			<edge id='1435' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='1436' source='com.masshabit.squibble.free.activity.v: onProgressChanged(android.webkit.WebView,java.lang.Integer)void' target='android.widget.ProgressBar: setProgress(java.lang.Integer)void'/>
			<edge id='1437' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='1438' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MuteEntity: toggle()void'/>
			<edge id='1439' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='1440' source='com.masshabit.common.tween.Ease: easeOutIn(F)F' target='com.masshabit.common.tween.Ease: easeIn(F)F'/>
			<edge id='1441' source='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='1442' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.lang.String: replaceAll(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='1443' source='com.masshabit.common.entity.Entity: update(F)void' target='com.masshabit.common.entity.Entity: updateChildren(F)void'/>
			<edge id='1444' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1445' source='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent' target='android.content.Intent: init()void'/>
			<edge id='1446' source='com.masshabit.squibble.Game: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.Screen: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='1447' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Camera: move(FF)void'/>
			<edge id='1448' source='com.masshabit.squibble.free.activity.e.k: l()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1449' source='com.masshabit.squibble.free.activity.k: init(com.masshabit.squibble.free.activity.j)void' target='java.util.TimerTask: init()void'/>
			<edge id='1450' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='1451' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1452' source='com.flurry.android.FlurryAgent: g()void' target='java.io.File: getParentFile()java.io.File'/>
			<edge id='1453' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.d.e: init(java.lang.Object,com.masshabit.squibble.free.activity.d.d,com.masshabit.squibble.free.activity.d.d,[Lcom.masshabit.squibble.free.activity.d.b)void'/>
			<edge id='1454' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.Exception: printStackTrace()void'/>
			<edge id='1455' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MuteEntity: toggle()void'/>
			<edge id='1456' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList'/>
			<edge id='1457' source='com.masshabit.common.physics.Particle: addVelocity(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1458' source='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void' target='com.flurry.android.FlurryAgent: b()com.flurry.android.FlurryAgent'/>
			<edge id='1459' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.Game: init()void'/>
			<edge id='1460' source='com.masshabit.squibble.Player$Hand: init()void' target='com.masshabit.common.physics.Physics: registerConstraint(com.masshabit.common.physics.Constraint)void'/>
			<edge id='1461' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='1462' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: readStrongBinder()android.os.IBinder'/>
			<edge id='1463' source='com.android.vending.licensing.LicenseChecker: onDestroy()void' target='com.android.vending.licensing.LicenseChecker: cleanupService()void'/>
			<edge id='1464' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1465' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog: setButton(ILjava.lang.CharSequence,android.content.DialogInterface$OnClickListener)void'/>
			<edge id='1466' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1467' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.lang.RuntimeException: init(java.lang.Throwable)void'/>
			<edge id='1468' source='com.android.vending.licensing.LicenseChecker: onServiceConnected(android.content.ComponentName,android.os.IBinder)void' target='com.android.vending.licensing.ILicensingService$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicensingService'/>
			<edge id='1469' source='com.masshabit.squibble.free.activity.o: clinit()void' target='com.masshabit.squibble.free.activity.o: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='1470' source='com.masshabit.squibble.free.activity.a.n: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1471' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B'/>
			<edge id='1472' source='com.masshabit.common.physics.Physics: registerParticle(com.masshabit.common.physics.Particle)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='1473' source='com.flurry.android.FlurryAgent: init()void' target='android.os.Handler: init(android.os.Looper)void'/>
			<edge id='1474' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Node: getNodeName()java.lang.String'/>
			<edge id='1475' source='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1476' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: init()void'/>
			<edge id='1477' source='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void' target='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location'/>
			<edge id='1478' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.SecretKeyFactory: generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey'/>
			<edge id='1479' source='com.masshabit.squibble.free.activity.b.c: b()void' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='1480' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='1481' source='com.masshabit.common.resource.AnimationState: rewindAndStop()void' target='com.masshabit.common.resource.AnimationState: setPlayhead(java.lang.Integer)void'/>
			<edge id='1482' source='com.masshabit.squibble.free.activity.e: onDestroy()void' target='android.content.Intent: init(android.content.Context,java.lang.Class)void'/>
			<edge id='1483' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='1484' source='com.masshabit.squibble.R$layout: init()void' target='java.lang.Object: init()void'/>
			<edge id='1485' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='1486' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.RuntimeException: init(java.lang.String,java.lang.Throwable)void'/>
			<edge id='1487' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.SecretKey: getEncoded()[B'/>
			<edge id='1488' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.OutputStream: write([BII)void'/>
			<edge id='1489' source='com.masshabit.squibble.free.activity.b.o: b()void' target='android.content.Intent: init(java.lang.String,android.net.Uri)void'/>
			<edge id='1490' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: enforceInterface(java.lang.String)void'/>
			<edge id='1491' source='com.masshabit.squibble.free.activity.a.k: d()void' target='com.masshabit.squibble.free.activity.a.k: a(java.lang.String,java.lang.String)void'/>
			<edge id='1492' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.StringBuilder: init()void'/>
			<edge id='1493' source='com.masshabit.common.Environment: updateThreadCondition()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1494' source='com.masshabit.common.License: init(android.content.Context)void' target='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void'/>
			<edge id='1495' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.xml.sax.SAXException: printStackTrace()void'/>
			<edge id='1496' source='com.masshabit.squibble.Player: castGrapple(FF)boolean' target='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'/>
			<edge id='1497' source='com.masshabit.common.Environment: setFocused(boolean)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1498' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.j: init(java.lang.String)void'/>
			<edge id='1499' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipEntry: getName()java.lang.String'/>
			<edge id='1500' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.util.Date: before(java.util.Date)boolean'/>
			<edge id='1501' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='java.io.File: getName()java.lang.String'/>
			<edge id='1502' source='com.masshabit.common.physics.Particle: getPosition(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1503' source='com.masshabit.squibble.free.activity.h: init()void' target='android.app.Activity: init()void'/>
			<edge id='1504' source='com.masshabit.common.physics.SegmentParticle: getLength()F' target='com.masshabit.common.physics.SegmentParticle: getLengthSquared()F'/>
			<edge id='1505' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void'/>
			<edge id='1506' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.Pushable: b(android.os.Parcel)void'/>
			<edge id='1507' source='com.masshabit.squibble.Game: nextScreen()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='1508' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1509' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='1510' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='1511' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.app.Notification: setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)void'/>
			<edge id='1512' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String'/>
			<edge id='1513' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'/>
			<edge id='1514' source='com.android.vending.licensing.util.Base64DecoderException: init()void' target='java.lang.Exception: init()void'/>
			<edge id='1515' source='com.masshabit.squibble.MainActivity: onPrepareOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game: onPrepareOptionsMenu(android.view.Menu)boolean'/>
			<edge id='1516' source='com.masshabit.squibble.Player$Hand: setActive(boolean)void' target='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'/>
			<edge id='1517' source='com.masshabit.common.physics.CollisionComponents: init()void' target='java.lang.Object: init()void'/>
			<edge id='1518' source='com.flurry.android.d: uncaughtException(java.lang.Thread,java.lang.Throwable)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='1519' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: requestWindowFeature(java.lang.Integer)boolean'/>
			<edge id='1520' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.File: init(java.lang.String)void'/>
			<edge id='1521' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='1522' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.u: init(java.lang.String)void'/>
			<edge id='1523' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1524' source='com.masshabit.squibble.free.activity.e: onStart(android.content.Intent,java.lang.Integer)void' target='android.app.Service: onStart(android.content.Intent,java.lang.Integer)void'/>
			<edge id='1525' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.net.Socket: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='1526' source='com.masshabit.squibble.ItemEntity: update(F)void' target='com.masshabit.common.physics.CollisionGroup: remove(com.masshabit.common.physics.Particle)void'/>
			<edge id='1527' source='com.android.vending.licensing.util.Base64: decodeWebSafe([BII)[B' target='com.android.vending.licensing.util.Base64: decode([BII[B)[B'/>
			<edge id='1528' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setView(android.view.View)android.app.AlertDialog$Builder'/>
			<edge id='1529' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.util.Vector: size()java.lang.Integer'/>
			<edge id='1530' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.lang.IllegalArgumentException: init(java.lang.String)void'/>
			<edge id='1531' source='com.android.vending.licensing.util.Base64: encode([BII[BZ)java.lang.String' target='com.android.vending.licensing.util.Base64: encode([BII[BI)[B'/>
			<edge id='1532' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' target='com.masshabit.common.physics.Vector2: perp()void'/>
			<edge id='1533' source='com.masshabit.squibble.MainActivity: onPause()void' target='android.app.Activity: onPause()void'/>
			<edge id='1534' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.NPC: init()void'/>
			<edge id='1535' source='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void' target='com.masshabit.common.ObjectPool: init(java.lang.Integer)void'/>
			<edge id='1536' source='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void' target='com.flurry.android.FlurryAgent: f()void'/>
			<edge id='1537' source='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void' target='java.lang.Object: init()void'/>
			<edge id='1538' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: close()void'/>
			<edge id='1539' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.e: a(java.lang.String)java.lang.String'/>
			<edge id='1540' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='1541' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' target='java.lang.Object: init()void'/>
			<edge id='1542' source='com.masshabit.squibble.free.activity.i: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Thread: init()void'/>
			<edge id='1543' source='com.masshabit.squibble.free.activity.e: b()java.lang.String' target='android.os.Bundle: getString(java.lang.String)java.lang.String'/>
			<edge id='1544' source='com.android.vending.licensing.LicenseChecker: generateNonce()java.lang.Integer' target='java.security.SecureRandom: nextInt()java.lang.Integer'/>
			<edge id='1545' source='com.masshabit.squibble.CheckingLicenseScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.common.Environment: quit()void'/>
			<edge id='1546' source='com.masshabit.squibble.free.activity.a.Abstract: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.a.Abstract: i()[Ljava.lang.String'/>
			<edge id='1547' source='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void' target='java.util.concurrent.Semaphore: release()void'/>
			<edge id='1548' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='java.lang.Class: toString()java.lang.String'/>
			<edge id='1549' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1550' source='com.masshabit.squibble.free.activity.b.s: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='1551' source='com.masshabit.squibble.WorldMapNode: finalizeConnections()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='1552' source='com.masshabit.squibble.SplashScreen: proceed()void' target='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void'/>
			<edge id='1553' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='1554' source='com.masshabit.squibble.free.activity.e.k: m()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1555' source='com.flurry.android.FlurryAgent: c()void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='1556' source='com.masshabit.common.physics.HalfEdge: set(FFFF)void' target='com.masshabit.common.physics.Vector2: perp()void'/>
			<edge id='1557' source='com.masshabit.squibble.WorldMapNode: finalizeConnections()void' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='1558' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: create()android.app.AlertDialog'/>
			<edge id='1559' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.h: setContentView(android.view.View,android.view.ViewGroup$LayoutParams)void'/>
			<edge id='1560' source='com.masshabit.squibble.free.activity.y: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='1561' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONArray: put(java.lang.Object)org.json.JSONArray'/>
			<edge id='1562' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void'/>
			<edge id='1563' source='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean' target='android.content.Intent: addFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='1564' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1565' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.q: init(java.lang.String)void'/>
			<edge id='1566' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.util.List: remove(java.lang.Integer)java.lang.Object'/>
			<edge id='1567' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='1568' source='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean' target='com.masshabit.squibble.free.activity.d.a: equals(java.lang.Object)boolean'/>
			<edge id='1569' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.File: init(java.lang.String)void'/>
			<edge id='1570' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.CheckingLicenseScreen: init()void'/>
			<edge id='1571' source='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1572' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1573' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: init(com.android.vending.licensing.LicenseChecker$ResultListener,ILjava.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='1574' source='com.masshabit.squibble.free.activity.r: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='1575' source='com.masshabit.squibble.Player: castGrapple(FF)boolean' target='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void'/>
			<edge id='1576' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: writeUTF(java.lang.String)void'/>
			<edge id='1577' source='com.masshabit.squibble.PlayerSelectPanel: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='1578' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' target='android.view.MotionEvent: getY()F'/>
			<edge id='1579' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='1580' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.Environment: isMuted()boolean'/>
			<edge id='1581' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1582' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='java.lang.Object: getClass()java.lang.Class'/>
			<edge id='1583' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1584' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1585' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='1586' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='1587' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='1588' source='com.android.vending.licensing.util.Base64: decode([B)[B' target='com.android.vending.licensing.util.Base64: decode([BII)[B'/>
			<edge id='1589' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1590' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='org.apache.http.client.utils.URLEncodedUtils: parse(java.net.URI,java.lang.String)java.util.List'/>
			<edge id='1591' source='com.masshabit.squibble.free.activity.g: run()void' target='org.apache.http.util.ByteArrayBuffer: toByteArray()[B'/>
			<edge id='1592' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='com.android.vending.licensing.util.Base64: decode4to3([BI[BI[B)java.lang.Integer'/>
			<edge id='1593' source='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseCheckerCallback: allow()void'/>
			<edge id='1594' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1595' source='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game,java.lang.Integer)void' target='com.masshabit.common.ObjectPool: init(java.lang.Integer)void'/>
			<edge id='1596' source='com.masshabit.squibble.free.activity.j: run()void' target='java.util.Timer: init()void'/>
			<edge id='1597' source='com.flurry.android.c: run()void' target='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void'/>
			<edge id='1598' source='com.masshabit.common.Clock: start()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1599' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.content.Intent: getExtras()android.os.Bundle'/>
			<edge id='1600' source='com.masshabit.squibble.MainActivity: onPause()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1601' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='1602' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='java.lang.Class: forName(java.lang.String)java.lang.Class'/>
			<edge id='1603' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1604' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='android.app.AlertDialog: getButton(java.lang.Integer)android.widget.Button'/>
			<edge id='1605' source='com.masshabit.squibble.free.activity.e.k: m()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='1606' source='com.masshabit.squibble.ItemEntity: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'/>
			<edge id='1607' source='com.masshabit.squibble.free.activity.a.h: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.g: a(java.lang.String,java.lang.String)void'/>
			<edge id='1608' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.spec.IvParameterSpec: init([B)void'/>
			<edge id='1609' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='1610' source='com.masshabit.common.Environment: destroy()void' target='com.masshabit.common.Environment: stopThread()void'/>
			<edge id='1611' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1612' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONObject: getJSONArray(java.lang.String)org.json.JSONArray'/>
			<edge id='1613' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='1614' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer'/>
			<edge id='1615' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='android.app.Dialog: show()void'/>
			<edge id='1616' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1617' source='com.masshabit.squibble.free.activity.e.o: b()void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='1618' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.squibble.WorldMapPlayer: isStationary()boolean'/>
			<edge id='1619' source='com.masshabit.squibble.UpsellScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='1620' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.Environment: startThread()void'/>
			<edge id='1621' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.UpsellScreen: init()void'/>
			<edge id='1622' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.lang.String: valueOf(java.lang.Integer)java.lang.String'/>
			<edge id='1623' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1624' source='com.masshabit.squibble.Game: nextScreen()void' target='com.masshabit.squibble.Game$ShowCommandEventPool: release(java.lang.Object)void'/>
			<edge id='1625' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='java.lang.StringBuilder: init()void'/>
			<edge id='1626' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeFloat(F)void'/>
			<edge id='1627' source='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String' target='com.masshabit.squibble.free.activity.Pushable: a(java.lang.String)java.lang.String'/>
			<edge id='1628' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1629' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.text.InputFilter$LengthFilter: init(java.lang.Integer)void'/>
			<edge id='1630' source='com.masshabit.squibble.GameScreen$1: init(com.masshabit.squibble.GameScreen,com.masshabit.common.Environment)void' target='java.lang.Object: init()void'/>
			<edge id='1631' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='1632' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='1633' source='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean' target='com.masshabit.squibble.free.activity.d.b: a()void'/>
			<edge id='1634' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: writeBoolean(boolean)void'/>
			<edge id='1635' source='com.masshabit.common.curve.CubicBezier: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='1636' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.Character: charValue()C'/>
			<edge id='1637' source='com.masshabit.squibble.free.activity.b.n: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1638' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseChecker$ResultListener: access$000(com.android.vending.licensing.LicenseChecker$ResultListener)com.android.vending.licensing.LicenseValidator'/>
			<edge id='1639' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='1640' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.io.IOException: printStackTrace()void'/>
			<edge id='1641' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='1642' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void'/>
			<edge id='1643' source='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseChecker: cleanupService()void'/>
			<edge id='1644' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Node: getNodeValue()java.lang.String'/>
			<edge id='1645' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1646' source='com.masshabit.squibble.CreditsScreen: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='1647' source='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='1648' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.URL: openConnection()java.net.URLConnection'/>
			<edge id='1649' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void'/>
			<edge id='1650' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1651' source='com.masshabit.common.tween.Ease$2: init()void' target='com.masshabit.common.tween.Ease$EaseBase: init()void'/>
			<edge id='1652' source='com.masshabit.common.License: destroy()void' target='com.android.vending.licensing.LicenseChecker: onDestroy()void'/>
			<edge id='1653' source='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' target='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'/>
			<edge id='1654' source='com.masshabit.squibble.free.activity.a.a: init()void' target='java.lang.Object: init()void'/>
			<edge id='1655' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e: c()java.lang.String'/>
			<edge id='1656' source='com.masshabit.squibble.free.activity.g: run()void' target='java.io.ByteArrayInputStream: init([B)void'/>
			<edge id='1657' source='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(java.lang.Object,java.lang.Object)java.lang.Integer' target='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: compare(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)java.lang.Integer'/>
			<edge id='1658' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='android.graphics.Matrix: mapPoints([F)void'/>
			<edge id='1659' source='com.masshabit.squibble.free.activity.e.d: a([D)boolean' target='android.location.Location: getLatitude()D'/>
			<edge id='1660' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.telephony.SmsMessage: createFromPdu([B)android.telephony.SmsMessage'/>
			<edge id='1661' source='com.masshabit.squibble.free.activity.e.i: init()void' target='java.lang.Object: init()void'/>
			<edge id='1662' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void'/>
			<edge id='1663' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.StringBuilder: init()void'/>
			<edge id='1664' source='com.masshabit.squibble.MainActivity: onStop()void' target='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void'/>
			<edge id='1665' source='com.masshabit.squibble.free.activity.b.r: a()void' target='java.lang.String: lastIndexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1666' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.ListView: setAdapter(android.widget.ListAdapter)void'/>
			<edge id='1667' source='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1668' source='com.masshabit.common.physics.Physics: update(F)void' target='com.masshabit.common.physics.Particle: update(F)void'/>
			<edge id='1669' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='1670' source='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.Pushable: a(java.lang.String)java.lang.String'/>
			<edge id='1671' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1672' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1673' source='com.masshabit.common.ObjectPool: setSize(java.lang.Integer)void' target='com.masshabit.common.ObjectPool: fill()void'/>
			<edge id='1674' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.StoryScreen: init()void'/>
			<edge id='1675' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1676' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1677' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getNetworkCountryIso()java.lang.String'/>
			<edge id='1678' source='com.masshabit.squibble.free.activity.g: a(J)void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'/>
			<edge id='1679' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='1680' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='1681' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: getOutputStream()java.io.OutputStream'/>
			<edge id='1682' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.CheckingLicenseScreen$1: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void'/>
			<edge id='1683' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.tween.VectorTween: update(F)void'/>
			<edge id='1684' source='com.masshabit.squibble.Game: nextScreen()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1685' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1686' source='com.masshabit.common.physics.Physics: update(F)void' target='com.masshabit.common.physics.Particle: addAcceleration(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1687' source='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1688' source='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.k: a(java.lang.String)java.lang.String'/>
			<edge id='1689' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='java.lang.String: valueOf(java.lang.Integer)java.lang.String'/>
			<edge id='1690' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.common.Util: clamp(FFF)F'/>
			<edge id='1691' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='org.apache.http.util.ByteArrayBuffer: init(java.lang.Integer)void'/>
			<edge id='1692' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1693' source='com.masshabit.squibble.free.activity.a.g: c()boolean' target='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void'/>
			<edge id='1694' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1695' source='com.masshabit.common.curve.CubicBezier: toString()java.lang.String' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='1696' source='com.masshabit.squibble.free.activity.e.k: l()void' target='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'/>
			<edge id='1697' source='com.android.vending.licensing.util.Base64: decodeWebSafe([B)[B' target='com.android.vending.licensing.util.Base64: decodeWebSafe([BII)[B'/>
			<edge id='1698' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.squibble.NPC: updateChildren(F)void'/>
			<edge id='1699' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.Delay: update(F)void'/>
			<edge id='1700' source='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='1701' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='android.location.LocationManager: removeUpdates(android.location.LocationListener)void'/>
			<edge id='1702' source='com.masshabit.squibble.free.activity.e.h: run()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1703' source='com.masshabit.squibble.free.activity.a.g: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1704' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: indexOf(java.lang.String,java.lang.Integer)java.lang.Integer'/>
			<edge id='1705' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.OutputStream: flush()void'/>
			<edge id='1706' source='com.masshabit.squibble.ButtonEntity: clinit()void' target='android.graphics.Paint: setAlpha(java.lang.Integer)void'/>
			<edge id='1707' source='com.masshabit.common.ObjectPool: init()void' target='com.masshabit.common.ObjectPool: setSize(java.lang.Integer)void'/>
			<edge id='1708' source='com.masshabit.common.physics.Physics: clinit()void' target='com.masshabit.common.physics.Physics$RayCastResult: init()void'/>
			<edge id='1709' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Binder: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'/>
			<edge id='1710' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='1711' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='java.util.HashMap: clear()void'/>
			<edge id='1712' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='1713' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1714' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.License: notReadyOrBad()boolean'/>
			<edge id='1715' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='1716' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.e.l: start()void'/>
			<edge id='1717' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1718' source='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='1719' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.InputStream: read([B)java.lang.Integer'/>
			<edge id='1720' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: init(android.content.Context)void'/>
			<edge id='1721' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.g: a(java.lang.String)java.lang.String'/>
			<edge id='1722' source='com.masshabit.common.Level: destroy()void' target='java.util.HashMap: clear()void'/>
			<edge id='1723' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: init()void'/>
			<edge id='1724' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void' target='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener)void'/>
			<edge id='1725' source='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='1726' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: setRetryCount(J)void'/>
			<edge id='1727' source='com.masshabit.squibble.free.activity.l: run()void' target='com.masshabit.squibble.free.activity.e: c(com.masshabit.squibble.free.activity.e)com.masshabit.squibble.free.activity.g'/>
			<edge id='1728' source='com.masshabit.squibble.HowToScreen: delayComplete(com.masshabit.common.Delay)void' target='com.masshabit.squibble.HowToScreen: nextStep()void'/>
			<edge id='1729' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: getBoolean(java.lang.String)boolean'/>
			<edge id='1730' source='com.masshabit.squibble.free.activity.e: init()void' target='android.app.Service: init()void'/>
			<edge id='1731' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='1732' source='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void' target='com.masshabit.common.Globals: freeMode()boolean'/>
			<edge id='1733' source='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void' target='android.content.SharedPreferences: edit()android.content.SharedPreferences$Editor'/>
			<edge id='1734' source='com.masshabit.squibble.StoryScreen: init()void' target='java.io.BufferedReader: init(java.io.Reader,java.lang.Integer)void'/>
			<edge id='1735' source='com.masshabit.squibble.Game: mutedChanged(boolean)void' target='com.masshabit.squibble.Screen: onMutedChanged(boolean)void'/>
			<edge id='1736' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='android.content.Intent: init()void'/>
			<edge id='1737' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.c: init(java.lang.String)void'/>
			<edge id='1738' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.h)[Z'/>
			<edge id='1739' source='com.masshabit.common.physics.SegmentParticle: getPoint1(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1740' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='android.app.AlertDialog: setButton(ILjava.lang.CharSequence,android.content.DialogInterface$OnClickListener)void'/>
			<edge id='1741' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='android.os.Bundle: putFloat(java.lang.String,F)void'/>
			<edge id='1742' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1743' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey'/>
			<edge id='1744' source='com.android.vending.licensing.R: init()void' target='java.lang.Object: init()void'/>
			<edge id='1745' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1746' source='com.masshabit.common.Camera: update(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1747' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.g: init()void'/>
			<edge id='1748' source='com.masshabit.squibble.free.activity.a.k: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='1749' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseChecker$ResultListener: access$400(com.android.vending.licensing.LicenseChecker$ResultListener)void'/>
			<edge id='1750' source='com.masshabit.common.License$MyCallback: allow()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1751' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1752' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: moveToNext()boolean'/>
			<edge id='1753' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: clearCache(boolean)void'/>
			<edge id='1754' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='android.app.Service: onCreate()void'/>
			<edge id='1755' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeShort(java.lang.Integer)void'/>
			<edge id='1756' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1757' source='com.masshabit.squibble.free.activity.a.o: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1758' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.CircleParticle: setCollisionListener(com.masshabit.common.physics.ICollisionListener)void'/>
			<edge id='1759' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='1760' source='com.masshabit.squibble.NPC: saveState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='1761' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='1762' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.net.URI: init(java.lang.String)void'/>
			<edge id='1763' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1764' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='1765' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='android.os.Handler: init(android.os.Looper)void'/>
			<edge id='1766' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='1767' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='1768' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.LinearLayout: init(android.content.Context)void'/>
			<edge id='1769' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='1770' source='com.masshabit.squibble.ButtonEntity: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='1771' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='1772' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='org.json.JSONException: printStackTrace()void'/>
			<edge id='1773' source='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='1774' source='com.masshabit.squibble.free.activity.e.g: init()void' target='java.util.TimerTask: init()void'/>
			<edge id='1775' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: moveToNext()boolean'/>
			<edge id='1776' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.squibble.PlayerSelectPanel: initChildren()void'/>
			<edge id='1777' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1778' source='com.masshabit.common.Level: debugDumpResourceMaps()void' target='com.masshabit.common.resource.AnimationResourceMap: debugDump()void'/>
			<edge id='1779' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: init(android.content.Context)void'/>
			<edge id='1780' source='com.masshabit.squibble.free.activity.a.c: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1781' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.squibble.Player: initChildren()void'/>
			<edge id='1782' source='com.masshabit.squibble.free.activity.c: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1783' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.squibble.NPC: calcMatrix()void'/>
			<edge id='1784' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.io.InputStream: close()void'/>
			<edge id='1785' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener'/>
			<edge id='1786' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='1787' source='com.masshabit.common.entity.EntityProperties: init(java.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='1788' source='com.masshabit.common.Camera: init()void' target='java.lang.Object: init()void'/>
			<edge id='1789' source='com.masshabit.squibble.MenuScreen$3: onTextChanged(java.lang.CharSequence,III)void' target='android.widget.Button: setEnabled(boolean)void'/>
			<edge id='1790' source='com.masshabit.common.resource.AnimationState: rewindAndPlay()void' target='com.masshabit.common.resource.AnimationState: setPlayhead(java.lang.Integer)void'/>
			<edge id='1791' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1792' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void'/>
			<edge id='1793' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1794' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='1795' source='com.masshabit.squibble.free.activity.b.g: b()void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='1796' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: getFloat(java.lang.String)F'/>
			<edge id='1797' source='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseCheckerCallback: dontAllow()void'/>
			<edge id='1798' source='com.masshabit.squibble.free.activity.a: b()boolean' target='java.util.List: size()java.lang.Integer'/>
			<edge id='1799' source='com.masshabit.common.Environment: init()void' target='com.masshabit.squibble.ProfileManager: create(android.content.Context)com.masshabit.squibble.ProfileManager'/>
			<edge id='1800' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='1801' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.ContentValues: init()void'/>
			<edge id='1802' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='java.lang.Class: getSimpleName()java.lang.String'/>
			<edge id='1803' source='com.masshabit.common.Level: debugDumpResourceMaps()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1804' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.InputEventPool: init(java.lang.Integer)void'/>
			<edge id='1805' source='com.masshabit.squibble.WorldMapGraph: reportNode(com.masshabit.squibble.WorldMapNode)java.lang.Integer' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='1806' source='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.ButtonEntity: drawChildren(android.graphics.Canvas)void'/>
			<edge id='1807' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.B: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='1808' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.location.LocationManager: getBestProvider(android.location.Criteria,boolean)java.lang.String'/>
			<edge id='1809' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='android.content.pm.PackageManager: getInstalledPackages(java.lang.Integer)java.util.List'/>
			<edge id='1810' source='com.masshabit.squibble.free.activity.f: init()void' target='android.content.BroadcastReceiver: init()void'/>
			<edge id='1811' source='com.masshabit.squibble.free.activity.b.d: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='1812' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='com.masshabit.squibble.MainActivity: getAssets()android.content.res.AssetManager'/>
			<edge id='1813' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='1814' source='com.masshabit.squibble.Game$4: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='1815' source='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='1816' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1817' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.app.AlertDialog$Builder: init(android.content.Context)void'/>
			<edge id='1818' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1819' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean'/>
			<edge id='1820' source='com.masshabit.common.Environment: run()void' target='android.view.SurfaceHolder: lockCanvas(android.graphics.Rect)android.graphics.Canvas'/>
			<edge id='1821' source='com.masshabit.squibble.free.activity.b.h: b()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1822' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1823' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Document: getDocumentElement()org.w3c.dom.Element'/>
			<edge id='1824' source='com.masshabit.squibble.MainView: onKeyDown(ILandroid.view.KeyEvent)boolean' target='java.lang.Thread: sleep(J)void'/>
			<edge id='1825' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.PreferenceObfuscator: commit()void'/>
			<edge id='1826' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1827' source='com.masshabit.squibble.free.activity.a.Abstract: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='1828' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setPositiveButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='1829' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1830' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.FlurryAgent: c()void'/>
			<edge id='1831' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.c: init(java.lang.String)void'/>
			<edge id='1832' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.Button: init(android.content.Context)void'/>
			<edge id='1833' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='1834' source='com.masshabit.squibble.Game: update(F)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='1835' source='com.masshabit.common.entity.StaticEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='1836' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.ProfileManager: saveProfile()void'/>
			<edge id='1837' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='android.os.Bundle: getFloat(java.lang.String)F'/>
			<edge id='1838' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1839' source='com.masshabit.squibble.free.activity.e: e()java.lang.String' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='1840' source='com.masshabit.squibble.PlayerSelectPanel: enterNameNo()void' target='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void'/>
			<edge id='1841' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.squibble.ButtonEntity: calcMatrix()void'/>
			<edge id='1842' source='com.masshabit.squibble.free.activity.e.k: j()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1843' source='com.masshabit.common.tween.VectorTween: init(FFFFF)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='1844' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='java.util.Date: init()void'/>
			<edge id='1845' source='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1846' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='1847' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='1848' source='com.masshabit.common.physics.Vector2: zero()void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1849' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.util.HashMap: containsKey(java.lang.Object)boolean'/>
			<edge id='1850' source='com.masshabit.squibble.free.activity.a.p: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='1851' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='1852' source='com.masshabit.squibble.HowToScreen: setFinger(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='1853' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier'/>
			<edge id='1854' source='com.masshabit.squibble.PlayerSelectPanel: clinit()void' target='android.graphics.RectF: init(FFFF)void'/>
			<edge id='1855' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1856' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1857' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.io.File: delete()boolean'/>
			<edge id='1858' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='1859' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='1860' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='1861' source='com.masshabit.squibble.GameScreen: init()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1862' source='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener' target='com.masshabit.squibble.MenuScreen$2: init(com.masshabit.squibble.MenuScreen)void'/>
			<edge id='1863' source='com.masshabit.squibble.free.activity.a.n: d()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='1864' source='com.masshabit.squibble.Game$1: run()void' target='java.lang.Exception: printStackTrace()void'/>
			<edge id='1865' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='javax.xml.parsers.DocumentBuilderFactory: newInstance()javax.xml.parsers.DocumentBuilderFactory'/>
			<edge id='1866' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean'/>
			<edge id='1867' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.EntityFactory: init()void'/>
			<edge id='1868' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track'/>
			<edge id='1869' source='com.masshabit.squibble.free.activity.a.e: g()android.content.Intent' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='1870' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Level: init(java.lang.String)void'/>
			<edge id='1871' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.o: c()void'/>
			<edge id='1872' source='com.android.vending.licensing.ILicensingService$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicensingService' target='com.android.vending.licensing.ILicensingService$Stub$Proxy: init(android.os.IBinder)void'/>
			<edge id='1873' source='com.masshabit.common.ProfileManagerBase: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1874' source='com.flurry.android.FlurryAgent: setUserId(java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String'/>
			<edge id='1875' source='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' target='java.lang.NullPointerException: init(java.lang.String)void'/>
			<edge id='1876' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1877' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.net.URL: init(java.lang.String)void'/>
			<edge id='1878' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1879' source='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String' target='java.lang.StringBuffer: append(C)java.lang.StringBuffer'/>
			<edge id='1880' source='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='android.os.Parcel: writeInt(java.lang.Integer)void'/>
			<edge id='1881' source='com.masshabit.common.entity.Entity: initChildren()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='1882' source='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='1883' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.net.HttpURLConnection: getInputStream()java.io.InputStream'/>
			<edge id='1884' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1885' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1886' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Level: registerGeometry()void'/>
			<edge id='1887' source='com.masshabit.squibble.free.activity.g: processDOWNLOAD_OK_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='1888' source='com.masshabit.common.tween.Tween: init(FFF)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='1889' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='1890' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean'/>
			<edge id='1891' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void'/>
			<edge id='1892' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.io.FileNotFoundException: printStackTrace()void'/>
			<edge id='1893' source='com.android.vending.licensing.LicenseChecker: onServiceDisconnected(android.content.ComponentName)void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1894' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='1895' source='com.masshabit.squibble.WorldMapPlayer$Location: init(com.masshabit.squibble.WorldMapPlayer)void' target='java.lang.Object: init()void'/>
			<edge id='1896' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1897' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setPositiveButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='1898' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1899' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1900' source='com.masshabit.squibble.free.activity.b.r: a()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1901' source='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void' target='java.lang.Object: init()void'/>
			<edge id='1902' source='com.masshabit.common.physics.SegmentParticle: getLength()F' target='java.lang.Math: sqrt(D)D'/>
			<edge id='1903' source='com.masshabit.squibble.PlayerSelectPanel: update(F)void' target='com.masshabit.squibble.PlayerSelectPanel: updateChildren(F)void'/>
			<edge id='1904' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='java.lang.Math: exp(D)D'/>
			<edge id='1905' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='1906' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.Screen: showLoading()boolean'/>
			<edge id='1907' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game$5: init(com.masshabit.squibble.Game)void'/>
			<edge id='1908' source='com.masshabit.common.Deque: init(java.lang.Integer)void' target='java.lang.Object: init()void'/>
			<edge id='1909' source='com.masshabit.squibble.Game: init()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1910' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Binder: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'/>
			<edge id='1911' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='com.masshabit.squibble.MainView: getHolder()android.view.SurfaceHolder'/>
			<edge id='1912' source='com.flurry.android.FlurryAgent: a(java.io.Closeable)void' target='java.io.Closeable: close()void'/>
			<edge id='1913' source='com.masshabit.squibble.free.activity.e: a(java.lang.Runnable)void' target='android.os.Handler: post(java.lang.Runnable)boolean'/>
			<edge id='1914' source='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZ)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='1915' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='android.graphics.Bitmap: getConfig()android.graphics.Bitmap$Config'/>
			<edge id='1916' source='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void' target='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void'/>
			<edge id='1917' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.squibble.HowToScreen: nextStep()void'/>
			<edge id='1918' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1919' source='com.masshabit.squibble.free.activity.p: init(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.Pushable)void' target='java.lang.Object: init()void'/>
			<edge id='1920' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1921' source='com.masshabit.squibble.free.activity.b.c: b()void' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='1922' source='com.masshabit.squibble.Game: init()void' target='java.lang.Object: init()void'/>
			<edge id='1923' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer'/>
			<edge id='1924' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.LevelLoader$MinBounds: addChild(FF)void'/>
			<edge id='1925' source='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void' target='java.lang.Object: init()void'/>
			<edge id='1926' source='com.masshabit.squibble.free.activity.a.n: c()boolean' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='1927' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.IBinder: transact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean'/>
			<edge id='1928' source='com.flurry.android.FlurryAgent: init()void' target='java.util.ArrayList: init()void'/>
			<edge id='1929' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1930' source='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='1931' source='com.masshabit.squibble.free.activity.e: onDestroy()void' target='android.app.Service: onDestroy()void'/>
			<edge id='1932' source='com.masshabit.squibble.free.activity.a.f: c()boolean' target='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean'/>
			<edge id='1933' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='1934' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='1935' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Parcel: writeInt(java.lang.Integer)void'/>
			<edge id='1936' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1937' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteNo()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1938' source='com.masshabit.squibble.free.activity.a.b: init(com.masshabit.squibble.free.activity.a.d,java.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='1939' source='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='1940' source='com.masshabit.squibble.free.activity.a.l: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='1941' source='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='1942' source='com.masshabit.squibble.MainActivity: onConfigurationChanged(android.content.res.Configuration)void' target='android.app.Activity: onConfigurationChanged(android.content.res.Configuration)void'/>
			<edge id='1943' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='1944' source='com.masshabit.squibble.free.activity.b.k: b()void' target='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean'/>
			<edge id='1945' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.content.ContentResolver: delete(android.net.Uri,java.lang.String,[Ljava.lang.String)java.lang.Integer'/>
			<edge id='1946' source='com.android.vending.licensing.ResponseData: toString()java.lang.String' target='android.text.TextUtils: join(java.lang.CharSequence,[Ljava.lang.Object)java.lang.String'/>
			<edge id='1947' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='com.masshabit.squibble.WorldMapNode$Connection: init(java.lang.String,boolean)void'/>
			<edge id='1948' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean'/>
			<edge id='1949' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.app.PendingIntent: getActivity(android.content.Context,ILandroid.content.Intent,java.lang.Integer)android.app.PendingIntent'/>
			<edge id='1950' source='com.flurry.android.FlurryAgent: c()void' target='java.util.List: iterator()java.util.Iterator'/>
			<edge id='1951' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.net.URL: init(java.lang.String)void'/>
			<edge id='1952' source='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' target='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F'/>
			<edge id='1953' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.masshabit.common.ProfileManagerBase: saveProfile()void'/>
			<edge id='1954' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='android.os.Parcel: readString()java.lang.String'/>
			<edge id='1955' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.e: init(java.lang.String)void'/>
			<edge id='1956' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='1957' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='1958' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='1959' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='1960' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void'/>
			<edge id='1961' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void'/>
			<edge id='1962' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.DataInputStream: read([BII)java.lang.Integer'/>
			<edge id='1963' source='com.masshabit.squibble.free.activity.g: a(J)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1964' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='1965' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void'/>
			<edge id='1966' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='1967' source='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='1968' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1969' source='com.masshabit.squibble.free.activity.b.q: a()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='1970' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='1971' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.Camera: init()void'/>
			<edge id='1972' source='com.masshabit.common.resource.BitmapResourceMap: init(java.lang.Integer)void' target='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void'/>
			<edge id='1973' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void'/>
			<edge id='1974' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void'/>
			<edge id='1975' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='1976' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.CircleParticle: setPosition(FF)void'/>
			<edge id='1977' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseChecker: generateNonce()java.lang.Integer'/>
			<edge id='1978' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='1979' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void' target='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'/>
			<edge id='1980' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='1981' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.o: b()void'/>
			<edge id='1982' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='android.content.Context: bindService(android.content.Intent,android.content.ServiceConnection,java.lang.Integer)boolean'/>
			<edge id='1983' source='com.masshabit.common.physics.Physics: checkGroupCollisions()void' target='java.util.HashSet: contains(java.lang.Object)boolean'/>
			<edge id='1984' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='1985' source='com.android.vending.licensing.LicenseValidator: init(com.android.vending.licensing.Policy,com.android.vending.licensing.DeviceLimiter,com.android.vending.licensing.LicenseCheckerCallback,ILjava.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='1986' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='1987' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='android.webkit.WebView: getContext()android.content.Context'/>
			<edge id='1988' source='com.masshabit.squibble.free.activity.b.t: b()void' target='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void'/>
			<edge id='1989' source='com.masshabit.squibble.free.activity.e: a()void' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='1990' source='com.masshabit.squibble.free.activity.b.k: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='1991' source='com.masshabit.squibble.MainView: surfaceDestroyed(android.view.SurfaceHolder)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='1992' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.io.File: exists()boolean'/>
			<edge id='1993' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'/>
			<edge id='1994' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='1995' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='android.content.Intent: setDataAndType(android.net.Uri,java.lang.String)android.content.Intent'/>
			<edge id='1996' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='java.util.Vector: init()void'/>
			<edge id='1997' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='1998' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='java.util.List: iterator()java.util.Iterator'/>
			<edge id='1999' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Map$Entry: getKey()java.lang.Object'/>
			<edge id='2000' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONException: printStackTrace()void'/>
			<edge id='2001' source='com.masshabit.common.License: getDeviceId(android.content.Context)java.lang.String' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='2002' source='com.masshabit.squibble.free.activity.a.s: clinit()void' target='com.masshabit.squibble.free.activity.a.t: init()void'/>
			<edge id='2003' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2004' source='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void' target='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void'/>
			<edge id='2005' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.ProfileManager: saveProfile()void'/>
			<edge id='2006' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='java.util.List: removeAll(java.util.Collection)boolean'/>
			<edge id='2007' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void' target='com.masshabit.squibble.free.activity.d.a: init(java.lang.Object)void'/>
			<edge id='2008' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='2009' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'/>
			<edge id='2010' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.WorldMapNode: init()void'/>
			<edge id='2011' source='com.masshabit.common.resource.AnimationLoader: init()void' target='java.lang.Object: init()void'/>
			<edge id='2012' source='com.masshabit.squibble.free.activity.e.k: clinit()void' target='java.io.File: getAbsolutePath()java.lang.String'/>
			<edge id='2013' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2014' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='2015' source='com.masshabit.common.License: init(android.content.Context)void' target='java.lang.Object: init()void'/>
			<edge id='2016' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'/>
			<edge id='2017' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='2018' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: exists()boolean'/>
			<edge id='2019' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.FlurryAgent: g()void'/>
			<edge id='2020' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='2021' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='android.app.ActivityManager: restartPackage(java.lang.String)void'/>
			<edge id='2022' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='2023' source='com.masshabit.squibble.Profile: init()void' target='com.masshabit.common.ProfileManagerBase$PlayerProfile: init()void'/>
			<edge id='2024' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'/>
			<edge id='2025' source='com.masshabit.squibble.free.activity.t: init(com.masshabit.squibble.free.activity.h)void' target='java.lang.Object: init()void'/>
			<edge id='2026' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map'/>
			<edge id='2027' source='com.masshabit.squibble.free.activity.c.rlbdafsj: init()void' target='com.masshabit.squibble.free.activity.h: init()void'/>
			<edge id='2028' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='android.view.SurfaceView: init(android.content.Context,android.util.AttributeSet)void'/>
			<edge id='2029' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2030' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.telephony.SmsMessage: getDisplayMessageBody()java.lang.String'/>
			<edge id='2031' source='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='2032' source='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String' target='android.content.SharedPreferences: getString(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='2033' source='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.o: a()void'/>
			<edge id='2034' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseChecker: access$200(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='2035' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='2036' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.DataOutputStream: writeShort(java.lang.Integer)void'/>
			<edge id='2037' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2038' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='2039' source='com.masshabit.squibble.free.activity.e.k: m()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2040' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: init()void'/>
			<edge id='2041' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.i: init(com.masshabit.squibble.free.activity.a.g)void'/>
			<edge id='2042' source='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void' target='com.android.vending.licensing.Obfuscator: obfuscate(java.lang.String)java.lang.String'/>
			<edge id='2043' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean'/>
			<edge id='2044' source='com.masshabit.common.Environment: startThread()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2045' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.ClassNotFoundException: printStackTrace()void'/>
			<edge id='2046' source='com.masshabit.squibble.MenuScreen: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='2047' source='com.masshabit.squibble.SplashScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='2048' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Particle: setPosition(FF)void'/>
			<edge id='2049' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.util.ArrayList: init()void'/>
			<edge id='2050' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='2051' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.Class: forName(java.lang.String)java.lang.Class'/>
			<edge id='2052' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.Pushable: a(android.content.Context)boolean'/>
			<edge id='2053' source='com.masshabit.squibble.SplashScreen: init()void' target='android.graphics.BitmapFactory: decodeStream(java.io.InputStream)android.graphics.Bitmap'/>
			<edge id='2054' source='com.masshabit.common.resource.Animation: init()void' target='java.lang.Object: init()void'/>
			<edge id='2055' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.util.Timer: init()void'/>
			<edge id='2056' source='com.masshabit.squibble.free.activity.u: init()void' target='java.util.TimerTask: init()void'/>
			<edge id='2057' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.DeviceLimiter: isDeviceAllowed(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse'/>
			<edge id='2058' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.content.Intent: init(android.content.Context,java.lang.Class)void'/>
			<edge id='2059' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setShadowLayer(FFFI)void'/>
			<edge id='2060' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='2061' source='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2062' source='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void' target='java.lang.Boolean: valueOf(boolean)java.lang.Boolean'/>
			<edge id='2063' source='com.masshabit.squibble.WorldMapHud: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='2064' source='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='2065' source='com.masshabit.squibble.free.activity.a.i: init(com.masshabit.squibble.free.activity.a.g)void' target='java.lang.Object: init()void'/>
			<edge id='2066' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: getPath()java.lang.String'/>
			<edge id='2067' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.v: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='2068' source='com.masshabit.squibble.MainActivity: onPrepareOptionsMenu(android.view.Menu)boolean' target='android.app.Activity: onPrepareOptionsMenu(android.view.Menu)boolean'/>
			<edge id='2069' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Map$Entry: getValue()java.lang.Object'/>
			<edge id='2070' source='com.masshabit.squibble.free.activity.s: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='2071' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='android.content.Intent: getExtras()android.os.Bundle'/>
			<edge id='2072' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='2073' source='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.Deque: push_back(java.lang.Object)void'/>
			<edge id='2074' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.common.Environment: showDialog(java.lang.Integer)void'/>
			<edge id='2075' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setMessage(java.lang.Integer)android.app.AlertDialog$Builder'/>
			<edge id='2076' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: addJavascriptInterface(java.lang.Object,java.lang.String)void'/>
			<edge id='2077' source='com.masshabit.squibble.free.activity.a.p: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2078' source='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void' target='java.lang.Object: getClass()java.lang.Class'/>
			<edge id='2079' source='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='2080' source='com.masshabit.squibble.free.activity.a.p: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='2081' source='com.masshabit.squibble.free.activity.j: run()void' target='java.net.Socket: close()void'/>
			<edge id='2082' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2083' source='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void' target='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent'/>
			<edge id='2084' source='com.masshabit.squibble.free.activity.a.e: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='2085' source='com.masshabit.squibble.free.activity.c: b(android.os.Parcel)void' target='android.os.Parcel: readParcelable(java.lang.ClassLoader)android.os.Parcelable'/>
			<edge id='2086' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2087' source='com.masshabit.common.physics.CollisionDetector: clinit()void' target='com.masshabit.common.physics.Interval: init()void'/>
			<edge id='2088' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='2089' source='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2090' source='com.masshabit.squibble.free.activity.a.q: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.q: a(java.lang.String,java.lang.String)void'/>
			<edge id='2091' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: toString()java.lang.String'/>
			<edge id='2092' source='com.masshabit.common.entity.Entity: draw(android.graphics.Canvas)void' target='com.masshabit.common.entity.Entity: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2093' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='2094' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='2095' source='com.masshabit.common.entity.StaticEntity: init()void' target='com.masshabit.common.entity.StaticEntity: initChildren()void'/>
			<edge id='2096' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2097' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='com.flurry.android.b: init(com.flurry.android.FlurryAgent)void'/>
			<edge id='2098' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='java.lang.Math: min(FF)F'/>
			<edge id='2099' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.h: a(boolean)boolean'/>
			<edge id='2100' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='2101' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2102' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='java.lang.Long: toString(J)java.lang.String'/>
			<edge id='2103' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void'/>
			<edge id='2104' source='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='2105' source='com.masshabit.squibble.MainView: surfaceChanged(android.view.SurfaceHolder,III)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2106' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='com.masshabit.common.Environment: updateThreadCondition()void'/>
			<edge id='2107' source='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2108' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String'/>
			<edge id='2109' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2110' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2111' source='com.flurry.android.FlurryAgent: g()void' target='java.util.List: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2112' source='com.masshabit.squibble.free.activity.a.c: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2113' source='com.masshabit.common.InputEventPool: init()void' target='com.masshabit.common.ObjectPool: init()void'/>
			<edge id='2114' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen'/>
			<edge id='2115' source='com.flurry.android.FlurryAgent: g()void' target='java.io.FileOutputStream: init(java.io.File)void'/>
			<edge id='2116' source='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='2117' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void'/>
			<edge id='2118' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2119' source='com.masshabit.squibble.MenuScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteNo()void'/>
			<edge id='2120' source='com.masshabit.common.physics.CircleParticle: setRadius(F)void' target='java.lang.Math: max(FF)F'/>
			<edge id='2121' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void'/>
			<edge id='2122' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='com.masshabit.common.License: access$000(com.masshabit.common.License)J'/>
			<edge id='2123' source='com.masshabit.squibble.free.activity.e.k: b()java.lang.String' target='com.masshabit.squibble.free.activity.e: b()java.lang.String'/>
			<edge id='2124' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2125' source='com.masshabit.squibble.MainButtonPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='2126' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2127' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Player: bothArmsEngaged()boolean'/>
			<edge id='2128' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2129' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2130' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='2131' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2132' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2133' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.Vector2: init(FF)void'/>
			<edge id='2134' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='2135' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='2136' source='com.masshabit.squibble.free.activity.c: b(android.os.Parcel)void' target='java.lang.Class: getClassLoader()java.lang.ClassLoader'/>
			<edge id='2137' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: delete()boolean'/>
			<edge id='2138' source='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='2139' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='2140' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2141' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawColor(java.lang.Integer)void'/>
			<edge id='2142' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2143' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2144' source='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' target='android.content.Intent: putExtra(java.lang.String,[Ljava.lang.String)android.content.Intent'/>
			<edge id='2145' source='com.flurry.android.d: init()void' target='java.lang.Object: init()void'/>
			<edge id='2146' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='2147' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.s: init(java.lang.String)void'/>
			<edge id='2148' source='com.masshabit.squibble.Game: changeScreen(IF)void' target='com.masshabit.squibble.Game: pushScreen(IF)void'/>
			<edge id='2149' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.util.Vector: remove(java.lang.Object)boolean'/>
			<edge id='2150' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='2151' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='com.android.vending.licensing.Obfuscator: unobfuscate(java.lang.String)java.lang.String'/>
			<edge id='2152' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2153' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2154' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.Integer: toHexString(java.lang.Integer)java.lang.String'/>
			<edge id='2155' source='com.masshabit.squibble.free.activity.e.k: j()void' target='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector'/>
			<edge id='2156' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2157' source='com.masshabit.common.physics.CollisionGroup: init(II)void' target='java.util.HashSet: init(java.lang.Integer)void'/>
			<edge id='2158' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData'/>
			<edge id='2159' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='android.widget.Toast: show()void'/>
			<edge id='2160' source='com.masshabit.squibble.free.activity.a.s: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='2161' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='2162' source='com.masshabit.squibble.free.activity.b.c: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2163' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2164' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void' target='android.content.SharedPreferences$Editor: putString(java.lang.String,java.lang.String)android.content.SharedPreferences$Editor'/>
			<edge id='2165' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'/>
			<edge id='2166' source='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void' target='com.masshabit.squibble.free.activity.d.e: b()void'/>
			<edge id='2167' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='2168' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.c: a(java.lang.String)java.lang.String'/>
			<edge id='2169' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.regex.Matcher: group()java.lang.String'/>
			<edge id='2170' source='com.masshabit.squibble.WorldMapPath: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='2171' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer'/>
			<edge id='2172' source='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='2173' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='2174' source='com.masshabit.squibble.free.activity.e.o: a()void' target='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='2175' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.AnimatedEntity: init()void'/>
			<edge id='2176' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'/>
			<edge id='2177' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer'/>
			<edge id='2178' source='com.masshabit.squibble.free.activity.a.s: d()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2179' source='com.android.vending.licensing.PreferenceObfuscator: commit()void' target='android.content.SharedPreferences$Editor: commit()boolean'/>
			<edge id='2180' source='com.masshabit.common.physics.Particle: setPosition(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Particle: setPosition(FF)void'/>
			<edge id='2181' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.HashMap: init(java.lang.Integer)void'/>
			<edge id='2182' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2183' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.squibble.EntityFactory: init()void'/>
			<edge id='2184' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.CollisionUtils: signedTriArea(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='2185' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2186' source='com.masshabit.common.Environment: run()void' target='com.masshabit.squibble.Game: update(F)void'/>
			<edge id='2187' source='com.flurry.android.FlurryAgent: a()void' target='android.location.LocationManager: removeUpdates(android.location.LocationListener)void'/>
			<edge id='2188' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: b()boolean'/>
			<edge id='2189' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='java.util.HashMap: values()java.util.Collection'/>
			<edge id='2190' source='com.masshabit.squibble.free.activity.b.n: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2191' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.MenuScreen: init()void'/>
			<edge id='2192' source='com.masshabit.squibble.StoryScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2193' source='com.masshabit.squibble.free.activity.c.AndroidIME: init()void' target='com.masshabit.squibble.free.activity.e: init()void'/>
			<edge id='2194' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.content.res.AssetManager: list(java.lang.String)[Ljava.lang.String'/>
			<edge id='2195' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'/>
			<edge id='2196' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: create()android.app.AlertDialog'/>
			<edge id='2197' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap'/>
			<edge id='2198' source='com.masshabit.common.physics.Vector2: init(FF)void' target='java.lang.Object: init()void'/>
			<edge id='2199' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.io.BufferedReader: init(java.io.Reader,java.lang.Integer)void'/>
			<edge id='2200' source='com.masshabit.common.tween.VectorTween: init(FFFFF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2201' source='com.masshabit.squibble.MenuScreen: onMutedChanged(boolean)void' target='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void'/>
			<edge id='2202' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2203' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2204' source='com.masshabit.squibble.GameScreen: init()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2205' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2206' source='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' target='android.content.Intent: setType(java.lang.String)android.content.Intent'/>
			<edge id='2207' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='java.lang.StringBuilder: init()void'/>
			<edge id='2208' source='com.masshabit.squibble.free.activity.a.n: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='2209' source='com.masshabit.squibble.EntityFactory: init()void' target='java.lang.Object: init()void'/>
			<edge id='2210' source='com.masshabit.common.Camera: calculateMatrices()void' target='android.graphics.Matrix: invert(android.graphics.Matrix)boolean'/>
			<edge id='2211' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='2212' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.LevelLoader: load(java.lang.String)void'/>
			<edge id='2213' source='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' target='java.lang.Integer: parseInt(java.lang.String,java.lang.Integer)java.lang.Integer'/>
			<edge id='2214' source='com.masshabit.squibble.MainActivity: onRestoreInstanceState(android.os.Bundle)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2215' source='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFI)void' target='com.masshabit.common.physics.Constraint: init()void'/>
			<edge id='2216' source='com.masshabit.common.entity.AnimatedEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2217' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: lastIndexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2218' source='com.masshabit.common.entity.AnimatedEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='2219' source='com.android.vending.licensing.ValidationException: init(java.lang.String)void' target='java.lang.Exception: init(java.lang.String)void'/>
			<edge id='2220' source='com.flurry.android.FlurryAgent: a([B)boolean' target='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean'/>
			<edge id='2221' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='android.os.HandlerThread: init(java.lang.String)void'/>
			<edge id='2222' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.common.License: create(android.content.Context)com.masshabit.common.License'/>
			<edge id='2223' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='2224' source='com.masshabit.squibble.free.activity.u: run()void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='2225' source='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void' target='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void'/>
			<edge id='2226' source='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' target='android.content.Context: getPackageManager()android.content.pm.PackageManager'/>
			<edge id='2227' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: setTitle(java.lang.CharSequence)void'/>
			<edge id='2228' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: create()android.app.AlertDialog'/>
			<edge id='2229' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='java.util.Set: contains(java.lang.Object)boolean'/>
			<edge id='2230' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2231' source='com.flurry.android.FlurryAgent: g()void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2232' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Node: getNodeName()java.lang.String'/>
			<edge id='2233' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2234' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game$3: init(com.masshabit.squibble.Game)void'/>
			<edge id='2235' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='2236' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.Player: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2237' source='com.masshabit.common.Clock: init()void' target='java.lang.Object: init()void'/>
			<edge id='2238' source='com.masshabit.common.Environment: stopThread()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2239' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='java.util.Collection: iterator()java.util.Iterator'/>
			<edge id='2240' source='com.masshabit.squibble.free.activity.a.g: c()boolean' target='com.masshabit.squibble.free.activity.a.h: init(com.masshabit.squibble.free.activity.a.g)void'/>
			<edge id='2241' source='com.masshabit.squibble.free.activity.b.e: clinit()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2242' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='2243' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='2244' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.HidableEntity: setVisible(boolean)void'/>
			<edge id='2245' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void'/>
			<edge id='2246' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.Map$Entry: getKey()java.lang.Object'/>
			<edge id='2247' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.o: ordinal()java.lang.Integer'/>
			<edge id='2248' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='2249' source='com.masshabit.squibble.free.activity.e.k: j()void' target='com.masshabit.squibble.free.activity.e.b: init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='2250' source='com.masshabit.common.entity.Entity: updateChildren(F)void' target='com.masshabit.common.entity.Entity: update(F)void'/>
			<edge id='2251' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.String: hashCode()java.lang.Integer'/>
			<edge id='2252' source='com.masshabit.squibble.Game$3: onMenuItemClick(android.view.MenuItem)boolean' target='com.masshabit.common.Level: debugDumpResourceMaps()void'/>
			<edge id='2253' source='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' target='com.masshabit.common.Layer: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2254' source='com.masshabit.common.physics.Particle: move(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2255' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='2256' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2257' source='com.masshabit.common.physics.Particle: resolveCollision(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2258' source='com.masshabit.squibble.MainButtonPanel: update(F)void' target='com.masshabit.squibble.MainButtonPanel: updateChildren(F)void'/>
			<edge id='2259' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void'/>
			<edge id='2260' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.ProgressBar: setProgress(java.lang.Integer)void'/>
			<edge id='2261' source='com.masshabit.common.EnvironmentArgs: init()void' target='java.lang.Object: init()void'/>
			<edge id='2262' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Layer: restoreState(android.os.Bundle)void'/>
			<edge id='2263' source='com.masshabit.squibble.free.activity.k: run()void' target='java.net.Socket: close()void'/>
			<edge id='2264' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: lastIndexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2265' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void'/>
			<edge id='2266' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2267' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='2268' source='com.masshabit.squibble.free.activity.w: init(com.masshabit.squibble.free.activity.h,com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebViewClient: init()void'/>
			<edge id='2269' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.AnimatedEntity: init()void'/>
			<edge id='2270' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='2271' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.WorldMapHud: init()void'/>
			<edge id='2272' source='com.masshabit.squibble.free.activity.j: run()void' target='com.masshabit.squibble.free.activity.k: init(com.masshabit.squibble.free.activity.j)void'/>
			<edge id='2273' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2274' source='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='2275' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2276' source='com.masshabit.common.Layer: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2277' source='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void' target='java.util.Set: remove(java.lang.Object)boolean'/>
			<edge id='2278' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.StringBuilder: append(J)java.lang.StringBuilder'/>
			<edge id='2279' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2280' source='com.masshabit.squibble.HowToScreen: destroy()void' target='android.graphics.Bitmap: recycle()void'/>
			<edge id='2281' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2282' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.RandomAccessFile: write([BII)void'/>
			<edge id='2283' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.free.activity.s: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='2284' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='android.os.Environment: getExternalStorageState()java.lang.String'/>
			<edge id='2285' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='java.io.File: init(java.lang.String)void'/>
			<edge id='2286' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='2287' source='com.masshabit.common.resource.AnimationState: rewindAndStop()void' target='com.masshabit.common.resource.AnimationState: stop()void'/>
			<edge id='2288' source='com.masshabit.squibble.free.activity.a.m: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='2289' source='com.masshabit.common.physics.CollisionGroup: draw(android.graphics.Canvas,android.graphics.Paint)void' target='com.masshabit.common.physics.Particle: draw(android.graphics.Canvas,android.graphics.Paint)void'/>
			<edge id='2290' source='com.masshabit.squibble.free.activity.d.e: b()void' target='com.masshabit.squibble.free.activity.d.d: a()void'/>
			<edge id='2291' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='2292' source='com.masshabit.squibble.ButtonEntity: clinit()void' target='android.graphics.Paint: init()void'/>
			<edge id='2293' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.spec.SecretKeySpec: init([BLjava.lang.String)void'/>
			<edge id='2294' source='com.masshabit.common.physics.Particle: getCollisionComponents(com.masshabit.common.physics.Vector2)com.masshabit.common.physics.CollisionComponents' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2295' source='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2296' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.ContentValues: put(java.lang.String,java.lang.Long)void'/>
			<edge id='2297' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.io.BufferedReader: readLine()java.lang.String'/>
			<edge id='2298' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.String: init([BLjava.lang.String)void'/>
			<edge id='2299' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='java.security.spec.X509EncodedKeySpec: init([B)void'/>
			<edge id='2300' source='com.masshabit.common.physics.Particle: getVelocity(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2301' source='com.masshabit.squibble.ItemEntity: update(F)void' target='com.masshabit.common.resource.AnimationState: isTrackDone()boolean'/>
			<edge id='2302' source='com.masshabit.squibble.free.activity.j: run()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='2303' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void'/>
			<edge id='2304' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean' target='android.content.ContentResolver: delete(android.net.Uri,java.lang.String,[Ljava.lang.String)java.lang.Integer'/>
			<edge id='2305' source='com.masshabit.squibble.HowToScreen: setFinger(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='2306' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.OutputStream: write([B)void'/>
			<edge id='2307' source='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2308' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipInputStream: getNextEntry()java.util.zip.ZipEntry'/>
			<edge id='2309' source='com.masshabit.squibble.free.activity.d.d: a()void' target='java.lang.reflect.Method: invoke(java.lang.Object,[Ljava.lang.Object)java.lang.Object'/>
			<edge id='2310' source='com.masshabit.squibble.NPC: init()void' target='java.lang.Float: floatValue()F'/>
			<edge id='2311' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence'/>
			<edge id='2312' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.security.Signature: getInstance(java.lang.String)java.security.Signature'/>
			<edge id='2313' source='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.ILicenseResultListener$Stub: init()void'/>
			<edge id='2314' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.String: toLowerCase()java.lang.String'/>
			<edge id='2315' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='2316' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeInt(java.lang.Integer)void'/>
			<edge id='2317' source='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' target='android.os.Bundle: putBoolean(java.lang.String,boolean)void'/>
			<edge id='2318' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2319' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void'/>
			<edge id='2320' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Particle: resolveCollision(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)void'/>
			<edge id='2321' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='java.util.Map: clear()void'/>
			<edge id='2322' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2323' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.squibble.EntityFactory: init()void'/>
			<edge id='2324' source='com.masshabit.squibble.free.activity.b.o: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='2325' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2326' source='com.masshabit.squibble.free.R: init()void' target='java.lang.Object: init()void'/>
			<edge id='2327' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='2328' source='com.masshabit.common.physics.Physics: checkGroupCollisions()void' target='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void'/>
			<edge id='2329' source='com.masshabit.squibble.ButtonEntity: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2330' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String'/>
			<edge id='2331' source='com.masshabit.squibble.Player$Hand: update(F)void' target='com.masshabit.common.physics.Particle: setPosition(FF)void'/>
			<edge id='2332' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2333' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String)boolean' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='2334' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.Node: getNodeName()java.lang.String'/>
			<edge id='2335' source='com.masshabit.squibble.MainView: surfaceChanged(android.view.SurfaceHolder,III)void' target='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void'/>
			<edge id='2336' source='com.android.vending.licensing.ILicenseResultListener$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicenseResultListener' target='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: init(android.os.IBinder)void'/>
			<edge id='2337' source='com.masshabit.squibble.StoryScreen: update(F)void' target='com.masshabit.common.Delay: update(F)void'/>
			<edge id='2338' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor'/>
			<edge id='2339' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'/>
			<edge id='2340' source='com.masshabit.squibble.WorldMapPlayer: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='2341' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2342' source='com.masshabit.squibble.StoryScreen: getBitmap(java.lang.Integer)android.graphics.Bitmap' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2343' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.p: a([B)[B'/>
			<edge id='2344' source='com.masshabit.common.physics.Particle: move(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2345' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='com.masshabit.common.Clock: fps()F'/>
			<edge id='2346' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='2347' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.h: setContentView(android.view.View)void'/>
			<edge id='2348' source='com.masshabit.common.physics.VectorPool: fill()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='2349' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='2350' source='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='2351' source='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2352' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.Map: size()java.lang.Integer'/>
			<edge id='2353' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2354' source='com.masshabit.common.Level: debugDumpResourceMaps()void' target='com.masshabit.common.resource.BitmapResourceMap: debugDump()void'/>
			<edge id='2355' source='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void' target='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void'/>
			<edge id='2356' source='com.masshabit.squibble.MainView: onKeyUp(ILandroid.view.KeyEvent)boolean' target='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void'/>
			<edge id='2357' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.net.Socket: getInputStream()java.io.InputStream'/>
			<edge id='2358' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2359' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2360' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='2361' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2362' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.graphics.Matrix: mapPoints([F)void'/>
			<edge id='2363' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.content.Context: getApplicationContext()android.content.Context'/>
			<edge id='2364' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='2365' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='2366' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.a.b: init(com.masshabit.squibble.free.activity.a.d,java.lang.String,java.lang.String)void'/>
			<edge id='2367' source='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2368' source='com.masshabit.squibble.free.activity.a.s: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='2369' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: getParentFile()java.io.File'/>
			<edge id='2370' source='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='2371' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='2372' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2373' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='2374' source='com.masshabit.common.Camera: move(FF)void' target='com.masshabit.common.Util: clamp(FFF)F'/>
			<edge id='2375' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Level: registerGeometry()void'/>
			<edge id='2376' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.OutputStream: write([B)void'/>
			<edge id='2377' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.lang.StringBuilder: init()void'/>
			<edge id='2378' source='com.masshabit.squibble.R$string: init()void' target='java.lang.Object: init()void'/>
			<edge id='2379' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='2380' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.squibble.Player$Hand: init()void'/>
			<edge id='2381' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='2382' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.CreditsScreen: init()void'/>
			<edge id='2383' source='com.masshabit.squibble.HowToScreen: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.HowToScreen: nextStep()void'/>
			<edge id='2384' source='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a([B)[B'/>
			<edge id='2385' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='com.masshabit.common.ProfileManagerBase: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='2386' source='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void' target='com.masshabit.common.InputEventPool: getAvailable()java.lang.Integer'/>
			<edge id='2387' source='com.masshabit.common.entity.AnimatedEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2388' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.util.concurrent.Semaphore: release()void'/>
			<edge id='2389' source='com.masshabit.squibble.free.activity.a.q: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='2390' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer'/>
			<edge id='2391' source='com.masshabit.squibble.free.activity.a.d: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='2392' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: writeInterfaceToken(java.lang.String)void'/>
			<edge id='2393' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='java.util.Queue: poll()java.lang.Object'/>
			<edge id='2394' source='com.masshabit.squibble.Game: update(F)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2395' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.OutputStream: close()void'/>
			<edge id='2396' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='2397' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='2398' source='com.android.vending.licensing.ServerManagedPolicy: setRetryCount(J)void' target='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'/>
			<edge id='2399' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuffer: init(java.lang.Integer)void'/>
			<edge id='2400' source='com.masshabit.squibble.SplashScreen: proceed()void' target='com.masshabit.common.Globals: init()void'/>
			<edge id='2401' source='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='2402' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='2403' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2404' source='com.masshabit.squibble.SplashScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='2405' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2406' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2407' source='com.masshabit.squibble.free.activity.e.o: c()void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'/>
			<edge id='2408' source='com.masshabit.common.Environment: surfaceDestroyed()void' target='com.masshabit.common.Environment: updateThreadCondition()void'/>
			<edge id='2409' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.l: init(java.lang.String)void'/>
			<edge id='2410' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2411' source='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void' target='com.masshabit.common.InputEventPool: allocate()java.lang.Object'/>
			<edge id='2412' source='com.masshabit.squibble.free.activity.u: run()void' target='java.net.Socket: close()void'/>
			<edge id='2413' source='com.masshabit.common.physics.Particle: addForce(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2414' source='com.masshabit.squibble.WorldMapNode: unlockChildren()void' target='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void'/>
			<edge id='2415' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.physics.Physics$RayCastResult: reset()void'/>
			<edge id='2416' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2417' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: setSingleLine()void'/>
			<edge id='2418' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='2419' source='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void' target='android.media.SoundPool: play(IFFIIF)java.lang.Integer'/>
			<edge id='2420' source='com.masshabit.squibble.free.activity.p: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.c)void'/>
			<edge id='2421' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='javax.crypto.BadPaddingException: getMessage()java.lang.String'/>
			<edge id='2422' source='com.masshabit.common.physics.Vector2: matrixTransform(android.graphics.Matrix,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void' target='android.graphics.Matrix: mapPoints([F)void'/>
			<edge id='2423' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='2424' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='2425' source='com.flurry.android.FlurryAgent: f()void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2426' source='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.a)boolean' target='com.masshabit.squibble.free.activity.d.e: a(com.masshabit.squibble.free.activity.d.a)boolean'/>
			<edge id='2427' source='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2428' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='2429' source='com.masshabit.common.Deque: pop_front()java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2430' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='2431' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='2432' source='com.masshabit.squibble.StoryScreen: tweenComplete(java.lang.Object)void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='2433' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Clock: msSinceDt()J'/>
			<edge id='2434' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Thread: init()void'/>
			<edge id='2435' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer'/>
			<edge id='2436' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2437' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.content.res.Resources: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2438' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='2439' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='2440' source='com.masshabit.squibble.free.activity.e.k: m()void' target='android.content.SharedPreferences: getString(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='2441' source='com.masshabit.squibble.Game: pushScreen(IF)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2442' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: angleDegrees()F'/>
			<edge id='2443' source='com.masshabit.squibble.MainActivity: onResume()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2444' source='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.WorldMapNode: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2445' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence'/>
			<edge id='2446' source='com.masshabit.squibble.ItemEntity: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='2447' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='java.lang.System: arraycopy(java.lang.Object,ILjava.lang.Object,II)void'/>
			<edge id='2448' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void'/>
			<edge id='2449' source='com.masshabit.squibble.free.activity.e.h: run()void' target='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener)void'/>
			<edge id='2450' source='com.masshabit.common.tween.Ease$1: ease(F)F' target='com.masshabit.common.tween.Ease: easeIn(F)F'/>
			<edge id='2451' source='com.masshabit.squibble.StoryScreen: init()void' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='2452' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='android.view.Window: setFlags(II)void'/>
			<edge id='2453' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='2454' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2455' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.squibble.Player$Hand: update(F)void'/>
			<edge id='2456' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.p: init(com.masshabit.squibble.free.activity.g,com.masshabit.squibble.free.activity.Pushable)void'/>
			<edge id='2457' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2458' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='2459' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.content.Context: getFileStreamPath(java.lang.String)java.io.File'/>
			<edge id='2460' source='com.masshabit.squibble.MainActivity: onRestart()void' target='android.app.Activity: onRestart()void'/>
			<edge id='2461' source='com.masshabit.squibble.free.activity.v: onReceivedTitle(android.webkit.WebView,java.lang.String)void' target='android.webkit.WebChromeClient: onReceivedTitle(android.webkit.WebView,java.lang.String)void'/>
			<edge id='2462' source='com.masshabit.squibble.free.activity.a.d: d()void' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void'/>
			<edge id='2463' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2464' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.io.DataInputStream: init(java.io.InputStream)void'/>
			<edge id='2465' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='java.io.File: getAbsolutePath()java.lang.String'/>
			<edge id='2466' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.content.Intent: getAction()java.lang.String'/>
			<edge id='2467' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String'/>
			<edge id='2468' source='com.masshabit.common.physics.Interval: init()void' target='java.lang.Object: init()void'/>
			<edge id='2469' source='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F' target='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F'/>
			<edge id='2470' source='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='2471' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='java.lang.Object: init()void'/>
			<edge id='2472' source='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='2473' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='2474' source='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2475' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.PositionEntity: init()void'/>
			<edge id='2476' source='com.masshabit.squibble.StoryScreen: init()void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2477' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='2478' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='2479' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.physics.Physics: init()void'/>
			<edge id='2480' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='2481' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.CircleParticle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void'/>
			<edge id='2482' source='com.masshabit.squibble.free.activity.Pushable: a(java.lang.String)java.lang.String' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='2483' source='com.masshabit.common.Level: destroy()void' target='com.masshabit.common.resource.BitmapResourceMap: destroy()void'/>
			<edge id='2484' source='com.masshabit.common.resource.AnimationState: rewindAndPlay()void' target='com.masshabit.common.resource.AnimationState: play()void'/>
			<edge id='2485' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapNode: finalizeConnections()void'/>
			<edge id='2486' source='com.masshabit.squibble.MainActivity: onCreateOptionsMenu(android.view.Menu)boolean' target='android.app.Activity: onCreateOptionsMenu(android.view.Menu)boolean'/>
			<edge id='2487' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='com.masshabit.common.LevelLoader: relativize(com.masshabit.common.entity.Entity)void'/>
			<edge id='2488' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.LinearLayout$LayoutParams: init(IIF)void'/>
			<edge id='2489' source='com.masshabit.squibble.free.activity.o: a()[Lcom.masshabit.squibble.free.activity.o' target='[Lcom.masshabit.squibble.free.activity.o: clone()java.lang.Object'/>
			<edge id='2490' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='2491' source='com.flurry.android.e: init(B)void' target='java.lang.Object: init()void'/>
			<edge id='2492' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.e.k: k()[Lcom.masshabit.squibble.free.activity.e.b'/>
			<edge id='2493' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='android.app.Activity: startActivity(android.content.Intent)void'/>
			<edge id='2494' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2495' source='com.masshabit.squibble.GameScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='2496' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.ConvexHull: setVelocity(FF)void'/>
			<edge id='2497' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='2498' source='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='2499' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='2500' source='com.masshabit.squibble.free.activity.e.k: l()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2501' source='com.masshabit.squibble.free.activity.g: a(J)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2502' source='com.masshabit.squibble.free.activity.g: a(J)void' target='java.lang.StringBuilder: append(J)java.lang.StringBuilder'/>
			<edge id='2503' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.net.Socket: getOutputStream()java.io.OutputStream'/>
			<edge id='2504' source='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void' target='java.util.Set: isEmpty()boolean'/>
			<edge id='2505' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='2506' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2507' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='2508' source='com.android.vending.licensing.util.Base64: init()void' target='java.lang.Object: init()void'/>
			<edge id='2509' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='2510' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Map: size()java.lang.Integer'/>
			<edge id='2511' source='com.android.vending.licensing.ResponseData: init()void' target='java.lang.Object: init()void'/>
			<edge id='2512' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout$LayoutParams: init(IIF)void'/>
			<edge id='2513' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: close()void'/>
			<edge id='2514' source='com.masshabit.squibble.StoryScreen: init()void' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='2515' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='2516' source='com.masshabit.common.ProfileManagerBase: setCurrentProfile(java.lang.Integer)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='2517' source='com.flurry.android.d: init()void' target='java.lang.Thread: getDefaultUncaughtExceptionHandler()java.lang.Thread$UncaughtExceptionHandler'/>
			<edge id='2518' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void'/>
			<edge id='2519' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void'/>
			<edge id='2520' source='com.masshabit.squibble.MainActivity: onRestart()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2521' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='2522' source='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.tween.VectorTween: init(FFFFF)void'/>
			<edge id='2523' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2524' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='2525' source='com.android.vending.licensing.ResponseData: toString()java.lang.String' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2526' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='2527' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2528' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2529' source='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='2530' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='2531' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: getSaveCount()java.lang.Integer'/>
			<edge id='2532' source='com.masshabit.squibble.free.activity.c: b()boolean' target='com.masshabit.squibble.free.activity.a.Abstract: c()boolean'/>
			<edge id='2533' source='com.flurry.android.FlurryAgent: f()void' target='com.flurry.android.FlurryAgent: a([B)boolean'/>
			<edge id='2534' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='2535' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.util.List: add(ILjava.lang.Object)void'/>
			<edge id='2536' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void'/>
			<edge id='2537' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: subtract(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2538' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList'/>
			<edge id='2539' source='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='2540' source='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='android.widget.EditText: getText()android.text.Editable'/>
			<edge id='2541' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='2542' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.RandomAccessFile: seek(J)void'/>
			<edge id='2543' source='com.masshabit.common.physics.Physics: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='2544' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='2545' source='com.masshabit.squibble.MainActivity: handleMessage(android.os.Message)boolean' target='com.masshabit.squibble.MainActivity: showDialog(java.lang.Integer)void'/>
			<edge id='2546' source='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' target='android.content.Intent: init()void'/>
			<edge id='2547' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2548' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='android.content.Context: getSharedPreferences(java.lang.String,java.lang.Integer)android.content.SharedPreferences'/>
			<edge id='2549' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2550' source='com.masshabit.common.physics.CollisionUtils: testSegmentSegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2551' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2552' source='com.masshabit.squibble.free.activity.b.l: a()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2553' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='2554' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='2555' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='2556' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void'/>
			<edge id='2557' source='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2558' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.physics.Physics: rayCastQuery([Lcom.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void'/>
			<edge id='2559' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.content.res.Resources: getIdentifier(java.lang.String,java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2560' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='android.view.SurfaceHolder: addCallback(android.view.SurfaceHolder$Callback)void'/>
			<edge id='2561' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.LinearLayout: setOrientation(java.lang.Integer)void'/>
			<edge id='2562' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2563' source='com.masshabit.common.tween.Ease: easeInOut(F)F' target='com.masshabit.common.tween.Ease: easeOut(F)F'/>
			<edge id='2564' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.Integer)void' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='2565' source='com.masshabit.common.physics.Physics: init()void' target='java.lang.Object: init()void'/>
			<edge id='2566' source='com.masshabit.squibble.free.activity.l: run()void' target='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e,com.masshabit.squibble.free.activity.g)com.masshabit.squibble.free.activity.g'/>
			<edge id='2567' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2568' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.NodeList: getLength()java.lang.Integer'/>
			<edge id='2569' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2570' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.io.BufferedReader: read([C)java.lang.Integer'/>
			<edge id='2571' source='com.masshabit.squibble.TextEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2572' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='2573' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void'/>
			<edge id='2574' source='com.masshabit.squibble.StoryScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.StoryScreen: next()void'/>
			<edge id='2575' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2576' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='com.masshabit.common.Deque: getSize()java.lang.Integer'/>
			<edge id='2577' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='com.android.vending.licensing.PreferenceObfuscator: init(android.content.SharedPreferences,com.android.vending.licensing.Obfuscator)void'/>
			<edge id='2578' source='com.masshabit.squibble.free.activity.d.b: init()void' target='java.lang.Object: init()void'/>
			<edge id='2579' source='com.masshabit.squibble.free.activity.Pushable: toString()java.lang.String' target='java.util.HashMap: toString()java.lang.String'/>
			<edge id='2580' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.Pushable: g()java.lang.String'/>
			<edge id='2581' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void'/>
			<edge id='2582' source='com.masshabit.squibble.Game: init()void' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='2583' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='2584' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.FileOutputStream: close()void'/>
			<edge id='2585' source='com.masshabit.squibble.free.activity.e.d: init()void' target='java.lang.Object: init()void'/>
			<edge id='2586' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapNode: getState()java.lang.Integer'/>
			<edge id='2587' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2588' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.p: init(java.lang.String)void'/>
			<edge id='2589' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='com.android.vending.licensing.ILicenseResultListener$Stub: verifyLicense(ILjava.lang.String,java.lang.String)void'/>
			<edge id='2590' source='com.masshabit.squibble.free.activity.e.g: run()void' target='com.masshabit.squibble.free.activity.e.d: a([D)boolean'/>
			<edge id='2591' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='com.android.vending.licensing.LicenseValidator: init(com.android.vending.licensing.Policy,com.android.vending.licensing.DeviceLimiter,com.android.vending.licensing.LicenseCheckerCallback,ILjava.lang.String,java.lang.String)void'/>
			<edge id='2592' source='com.masshabit.common.physics.Particle: resolveCollision(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)void' target='com.masshabit.common.physics.Particle: setVelocity(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2593' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='2594' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.HashMap: entrySet()java.util.Set'/>
			<edge id='2595' source='com.masshabit.common.physics.HalfEdge: set(FFFF)void' target='com.masshabit.common.physics.SegmentParticle: set(FFFF)void'/>
			<edge id='2596' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSimOperator()java.lang.String'/>
			<edge id='2597' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='2598' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.HidableEntity: init()void'/>
			<edge id='2599' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2600' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='2601' source='com.masshabit.squibble.WorldMapGraph: init(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapNode: resolveConnections()void'/>
			<edge id='2602' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2603' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='2604' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2605' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.NPC: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2606' source='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' target='android.content.Intent: init(java.lang.String,android.net.Uri)void'/>
			<edge id='2607' source='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void' target='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='2608' source='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='2609' source='com.masshabit.squibble.free.activity.a.m: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2610' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2611' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2612' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2613' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: divide(F)void'/>
			<edge id='2614' source='com.android.vending.licensing.ServerManagedPolicy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void'/>
			<edge id='2615' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MuteEntity: checkTap(FF)boolean'/>
			<edge id='2616' source='com.masshabit.squibble.MainActivity: init()void' target='android.app.Activity: init()void'/>
			<edge id='2617' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: setWebViewClient(android.webkit.WebViewClient)void'/>
			<edge id='2618' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.String: toString()java.lang.String'/>
			<edge id='2619' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: setVolumeControlStream(java.lang.Integer)void'/>
			<edge id='2620' source='com.masshabit.common.Environment: init()void' target='com.masshabit.common.ProfileManagerBase: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='2621' source='com.masshabit.squibble.free.activity.e: e()java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2622' source='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2623' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2624' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: getLong(java.lang.Integer)J'/>
			<edge id='2625' source='com.masshabit.squibble.WorldMapPlayer: setGraph(com.masshabit.squibble.WorldMapGraph)void' target='com.masshabit.common.Deque: init(java.lang.Integer)void'/>
			<edge id='2626' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2627' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a'/>
			<edge id='2628' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean'/>
			<edge id='2629' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONObject: getString(java.lang.String)java.lang.String'/>
			<edge id='2630' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getVoiceMailNumber()java.lang.String'/>
			<edge id='2631' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2632' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='com.masshabit.common.physics.Physics: registerParticle(com.masshabit.common.physics.Particle)void'/>
			<edge id='2633' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: moveToFirst()boolean'/>
			<edge id='2634' source='com.masshabit.common.Environment: saveState(android.os.Bundle)void' target='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'/>
			<edge id='2635' source='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void' target='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean'/>
			<edge id='2636' source='com.masshabit.squibble.free.activity.b.k: b()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2637' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.StatusLine: getStatusCode()java.lang.Integer'/>
			<edge id='2638' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2639' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.net.HttpURLConnection: disconnect()void'/>
			<edge id='2640' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='2641' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='2642' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.Vector2: init(FF)void'/>
			<edge id='2643' source='com.masshabit.squibble.StoryScreen: next()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='2644' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='java.util.ArrayList: init()void'/>
			<edge id='2645' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.HowToScreen: init()void'/>
			<edge id='2646' source='com.masshabit.squibble.free.activity.j: run()void' target='java.util.Timer: cancel()void'/>
			<edge id='2647' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.net.URLDecoder: decode(java.lang.String)java.lang.String'/>
			<edge id='2648' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2649' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: addTextChangedListener(android.text.TextWatcher)void'/>
			<edge id='2650' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='android.graphics.Matrix: mapPoints([F)void'/>
			<edge id='2651' source='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable' target='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void'/>
			<edge id='2652' source='com.masshabit.squibble.WorldMapGraph: checkTap(FF)com.masshabit.squibble.WorldMapNode' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2653' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game,java.lang.Integer)void'/>
			<edge id='2654' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'/>
			<edge id='2655' source='com.masshabit.common.physics.Physics: update(F)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2656' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='2657' source='com.masshabit.squibble.free.activity.Pushable: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2658' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='2659' source='com.masshabit.squibble.HowToScreen: init()void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2660' source='com.android.vending.licensing.Policy$LicenseResponse: valueOf(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse' target='java.lang.Enum: valueOf(java.lang.Class,java.lang.String)java.lang.Enum'/>
			<edge id='2661' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='com.android.vending.licensing.Policy$LicenseResponse: valueOf(java.lang.String)com.android.vending.licensing.Policy$LicenseResponse'/>
			<edge id='2662' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='2663' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='2664' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='2665' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.Document: getDocumentElement()org.w3c.dom.Element'/>
			<edge id='2666' source='com.masshabit.squibble.SplashScreen: proceed()void' target='com.masshabit.common.License: instance()com.masshabit.common.License'/>
			<edge id='2667' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.Player: bothArmsEngaged()boolean'/>
			<edge id='2668' source='com.masshabit.squibble.free.activity.a.q: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.q: a(java.lang.String)java.lang.String'/>
			<edge id='2669' source='com.masshabit.common.License: init(android.content.Context)void' target='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void'/>
			<edge id='2670' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.b: init(java.lang.String)void'/>
			<edge id='2671' source='com.masshabit.squibble.free.activity.b.t: b()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='2672' source='com.masshabit.squibble.NPC: calcMatrix()void' target='android.graphics.Matrix: preRotate(F)boolean'/>
			<edge id='2673' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='android.content.Intent: setDataAndType(android.net.Uri,java.lang.String)android.content.Intent'/>
			<edge id='2674' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2675' source='com.masshabit.squibble.free.activity.a.m: d()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='2676' source='com.masshabit.common.Environment: startThread()void' target='java.lang.Thread: start()void'/>
			<edge id='2677' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Particle: setPosition(FF)void'/>
			<edge id='2678' source='com.masshabit.squibble.free.activity.a.o: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='2679' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='2680' source='com.flurry.android.FlurryAgent: onPageView()void' target='com.flurry.android.FlurryAgent: d()void'/>
			<edge id='2681' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2682' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2683' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.String: toLowerCase()java.lang.String'/>
			<edge id='2684' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='2685' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.graphics.Matrix: reset()void'/>
			<edge id='2686' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='com.masshabit.squibble.free.activity.a.Abstract: e()java.lang.Integer'/>
			<edge id='2687' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void' target='com.masshabit.squibble.free.activity.d.c: a(com.masshabit.squibble.free.activity.d.e)void'/>
			<edge id='2688' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.common.physics.Particle: setPosition(FF)void'/>
			<edge id='2689' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='2690' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.squibble.HowToScreen: loadSound(ILjava.lang.String)void'/>
			<edge id='2691' source='com.masshabit.common.resource.AnimationResourceMap: init(ILcom.masshabit.common.resource.BitmapResourceMap)void' target='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void'/>
			<edge id='2692' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.MainButtonPanel: init()void'/>
			<edge id='2693' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='2694' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.Map$Entry: getValue()java.lang.Object'/>
			<edge id='2695' source='com.masshabit.squibble.free.activity.a.e: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='2696' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void'/>
			<edge id='2697' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='android.content.Intent: init(java.lang.String,android.net.Uri)void'/>
			<edge id='2698' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='com.masshabit.common.Util: clamp(FFF)F'/>
			<edge id='2699' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.Object: toString()java.lang.String'/>
			<edge id='2700' source='com.android.vending.licensing.LicenseChecker: cleanupService()void' target='android.content.Context: unbindService(android.content.ServiceConnection)void'/>
			<edge id='2701' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='2702' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='2703' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='2704' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2705' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.Map$Entry: getKey()java.lang.Object'/>
			<edge id='2706' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.HashMap: entrySet()java.util.Set'/>
			<edge id='2707' source='com.masshabit.squibble.Game: onPrepareDialog(ILandroid.app.Dialog)void' target='com.masshabit.squibble.Screen: onPrepareDialog(ILandroid.app.Dialog)void'/>
			<edge id='2708' source='com.masshabit.common.Environment: init()void' target='com.masshabit.squibble.Game: init()void'/>
			<edge id='2709' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='2710' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation'/>
			<edge id='2711' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='2712' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='android.content.res.Resources: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2713' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void' target='com.masshabit.squibble.free.activity.o: equals(java.lang.Object)boolean'/>
			<edge id='2714' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='2715' source='com.flurry.android.e: init()void' target='com.flurry.android.e: init(B)void'/>
			<edge id='2716' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='2717' source='com.masshabit.squibble.StoryScreen: getDelay(java.lang.Integer)F' target='java.lang.Float: floatValue()F'/>
			<edge id='2718' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='java.lang.String: startsWith(java.lang.String)boolean'/>
			<edge id='2719' source='com.masshabit.squibble.free.activity.g: run()void' target='java.util.Date: after(java.util.Date)boolean'/>
			<edge id='2720' source='com.masshabit.squibble.Game: threadedInit()void' target='com.masshabit.squibble.Game$1: init(com.masshabit.squibble.Game)void'/>
			<edge id='2721' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void'/>
			<edge id='2722' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer'/>
			<edge id='2723' source='com.masshabit.squibble.MenuScreen$1: init(com.masshabit.squibble.MenuScreen)void' target='java.lang.Object: init()void'/>
			<edge id='2724' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='2725' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuffer: append(java.lang.Integer)java.lang.StringBuffer'/>
			<edge id='2726' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.ListView: setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)void'/>
			<edge id='2727' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2728' source='com.masshabit.squibble.free.activity.e.k: clinit()void' target='android.os.Environment: getExternalStorageDirectory()java.io.File'/>
			<edge id='2729' source='com.android.vending.licensing.LicenseValidator: handleInvalidResponse()void' target='com.android.vending.licensing.LicenseCheckerCallback: dontAllow()void'/>
			<edge id='2730' source='com.masshabit.squibble.WorldMapGraph: checkTap(FF)com.masshabit.squibble.WorldMapNode' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2731' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.squibble.StoryScreen: getBitmap(java.lang.Integer)android.graphics.Bitmap'/>
			<edge id='2732' source='com.masshabit.squibble.free.activity.e.k: j()void' target='java.util.Vector: size()java.lang.Integer'/>
			<edge id='2733' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='2734' source='com.masshabit.squibble.Game: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='2735' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: getColumnIndex(java.lang.String)java.lang.Integer'/>
			<edge id='2736' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='java.lang.StringBuffer: init()void'/>
			<edge id='2737' source='com.masshabit.common.Environment: stopThread()void' target='java.lang.Thread: join()void'/>
			<edge id='2738' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Level: registerGeometry()void'/>
			<edge id='2739' source='com.masshabit.squibble.free.activity.e: c()java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='2740' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.DataOutputStream: close()void'/>
			<edge id='2741' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.e: b()java.lang.String'/>
			<edge id='2742' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='2743' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.Profile: reset()void'/>
			<edge id='2744' source='com.masshabit.squibble.WorldMapGraph: reportNode(com.masshabit.squibble.WorldMapNode)java.lang.Integer' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2745' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity'/>
			<edge id='2746' source='com.masshabit.common.ProfileManagerBase: instance()com.masshabit.common.ProfileManagerBase' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='2747' source='com.masshabit.common.Environment: setMuted(boolean)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2748' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void'/>
			<edge id='2749' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='java.io.File: delete()boolean'/>
			<edge id='2750' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void'/>
			<edge id='2751' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.InputStream: read([B)java.lang.Integer'/>
			<edge id='2752' source='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='2753' source='com.flurry.android.FlurryAgent: c()void' target='java.util.List: size()java.lang.Integer'/>
			<edge id='2754' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='android.content.Context: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2755' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.view.ViewGroup$LayoutParams: init(II)void'/>
			<edge id='2756' source='com.masshabit.squibble.Game: update(F)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2757' source='com.masshabit.common.Delay: start(F)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2758' source='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='2759' source='com.masshabit.common.tween.Tween: update(F)void' target='com.masshabit.common.tween.Ease$EaseBase: ease(F)F'/>
			<edge id='2760' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2761' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='2762' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='2763' source='com.masshabit.squibble.MainActivity: onCreateOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean'/>
			<edge id='2764' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='android.util.Log: w(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2765' source='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' target='com.masshabit.common.entity.AnimatedEntity: drawChildren(android.graphics.Canvas)void'/>
			<edge id='2766' source='com.flurry.android.FlurryAgent: b(android.content.Context)java.lang.String' target='java.lang.Integer: toString(java.lang.Integer)java.lang.String'/>
			<edge id='2767' source='com.masshabit.squibble.GameScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean'/>
			<edge id='2768' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.database.Cursor: getString(java.lang.Integer)java.lang.String'/>
			<edge id='2769' source='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent' target='android.content.Intent: setAction(java.lang.String)android.content.Intent'/>
			<edge id='2770' source='com.masshabit.squibble.CreditsScreen: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='2771' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.String: toLowerCase()java.lang.String'/>
			<edge id='2772' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='2773' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.FileOutputStream: write([BII)void'/>
			<edge id='2774' source='com.masshabit.squibble.free.activity.b.v: b()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='2775' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2776' source='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.String: init(java.lang.String)void'/>
			<edge id='2777' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='2778' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2779' source='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='2780' source='com.masshabit.squibble.MainButtonPanel: setVisible(boolean)void' target='java.lang.Math: abs(F)F'/>
			<edge id='2781' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Screen: playSound(java.lang.Integer)void'/>
			<edge id='2782' source='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void' target='android.content.SharedPreferences$Editor: remove(java.lang.String)android.content.SharedPreferences$Editor'/>
			<edge id='2783' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.f: init(java.lang.String)void'/>
			<edge id='2784' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.content.Intent: init()void'/>
			<edge id='2785' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeUTF(java.lang.String)void'/>
			<edge id='2786' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='2787' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.i: init(java.lang.String)void'/>
			<edge id='2788' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='2789' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: write([B)void'/>
			<edge id='2790' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.squibble.HowToScreen: setFinger(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2791' source='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,FFFZF)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='2792' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2793' source='com.masshabit.common.resource.ResourceMap: init(java.lang.Integer)void' target='java.lang.Object: init()void'/>
			<edge id='2794' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent'/>
			<edge id='2795' source='com.masshabit.squibble.free.activity.b.l: a()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='2796' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.WorldMapPlayer: findLocation()void'/>
			<edge id='2797' source='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2798' source='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void' target='com.masshabit.squibble.Game: changeScreen(IF)void'/>
			<edge id='2799' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='2800' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.SegmentParticle: getPoint2(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2801' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2802' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='android.os.SystemClock: elapsedRealtime()J'/>
			<edge id='2803' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.d.b: init(com.masshabit.squibble.free.activity.d.a,com.masshabit.squibble.free.activity.d.d)void'/>
			<edge id='2804' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setAlpha(java.lang.Integer)void'/>
			<edge id='2805' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='2806' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Particle: setVelocity(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2807' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener'/>
			<edge id='2808' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapHud: checkPlayTap(FF)boolean'/>
			<edge id='2809' source='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2810' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.d.a: init(java.lang.Object)void'/>
			<edge id='2811' source='com.masshabit.squibble.free.activity.j: run()void' target='com.masshabit.squibble.free.activity.e: stopSelf()void'/>
			<edge id='2812' source='com.masshabit.squibble.Game$1: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='2813' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.w: init(java.lang.String)void'/>
			<edge id='2814' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='2815' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapGraph: init()void'/>
			<edge id='2816' source='com.masshabit.squibble.ItemEntity: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.Player: getState()java.lang.Integer'/>
			<edge id='2817' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean'/>
			<edge id='2818' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.SecretKeyFactory: getInstance(java.lang.String)javax.crypto.SecretKeyFactory'/>
			<edge id='2819' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.Float: valueOf(F)java.lang.Float'/>
			<edge id='2820' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='java.util.Set: add(java.lang.Object)boolean'/>
			<edge id='2821' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='2822' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.CheckingLicenseScreen$2: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void'/>
			<edge id='2823' source='com.masshabit.common.License: create(android.content.Context)com.masshabit.common.License' target='com.masshabit.common.License: init(android.content.Context)void'/>
			<edge id='2824' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='com.masshabit.common.ProfileManagerBase$PlayerProfile: save(org.json.JSONObject)void'/>
			<edge id='2825' source='com.masshabit.common.entity.Entity: init()void' target='java.lang.Object: init()void'/>
			<edge id='2826' source='com.android.vending.licensing.R$drawable: init()void' target='java.lang.Object: init()void'/>
			<edge id='2827' source='com.masshabit.squibble.free.activity.d.a: init(java.lang.Object)void' target='java.lang.Object: init()void'/>
			<edge id='2828' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2829' source='com.masshabit.squibble.MainView: onKeyDown(ILandroid.view.KeyEvent)boolean' target='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void'/>
			<edge id='2830' source='com.masshabit.common.resource.AnimationState: update(F)void' target='com.masshabit.common.Clock: getTimeRaw()J'/>
			<edge id='2831' source='com.masshabit.common.physics.Particle: setVelocity(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2832' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='2833' source='com.masshabit.squibble.SplashScreen: destroy()void' target='android.graphics.Bitmap: recycle()void'/>
			<edge id='2834' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.util.List: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2835' source='com.masshabit.squibble.free.activity.a.h: init(com.masshabit.squibble.free.activity.a.g)void' target='java.lang.Object: init()void'/>
			<edge id='2836' source='com.masshabit.squibble.WorldMapScreen: init()void' target='android.graphics.RectF: init()void'/>
			<edge id='2837' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean'/>
			<edge id='2838' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: init(android.os.IBinder)void' target='java.lang.Object: init()void'/>
			<edge id='2839' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2840' source='com.masshabit.squibble.free.activity.c.Show: show()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2841' source='com.masshabit.squibble.free.activity.b.u: b()void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='2842' source='com.android.vending.licensing.ILicensingService$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicensingService' target='android.os.IBinder: queryLocalInterface(java.lang.String)android.os.IInterface'/>
			<edge id='2843' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.Player: init()void'/>
			<edge id='2844' source='com.masshabit.common.physics.Physics: update(F)void' target='com.masshabit.common.physics.Physics: checkGroupCollisions()void'/>
			<edge id='2845' source='com.masshabit.squibble.free.activity.b.b: b()void' target='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void'/>
			<edge id='2846' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='2847' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2848' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='2849' source='com.masshabit.squibble.GameScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.GameScreen$1: init(com.masshabit.squibble.GameScreen,com.masshabit.common.Environment)void'/>
			<edge id='2850' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.Activity: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='2851' source='com.flurry.android.FlurryAgent: init()void' target='android.os.HandlerThread: start()void'/>
			<edge id='2852' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='com.masshabit.common.License: access$102(com.masshabit.common.License,java.lang.Integer)java.lang.Integer'/>
			<edge id='2853' source='com.android.vending.licensing.ServerManagedPolicy: setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)void' target='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void'/>
			<edge id='2854' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean'/>
			<edge id='2855' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2856' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='com.masshabit.common.resource.Animation$Track: init()void'/>
			<edge id='2857' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='2858' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.PlayerSelectPanel: init()void'/>
			<edge id='2859' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean'/>
			<edge id='2860' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.NodeList: getLength()java.lang.Integer'/>
			<edge id='2861' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='2862' source='com.masshabit.common.Environment: dispatchEvents()void' target='java.lang.Exception: printStackTrace()void'/>
			<edge id='2863' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='com.masshabit.squibble.free.activity.a.c: a(java.lang.String)java.lang.String'/>
			<edge id='2864' source='com.masshabit.squibble.WorldMapHud: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='2865' source='com.masshabit.common.Level: init()void' target='com.masshabit.common.Layer: init()void'/>
			<edge id='2866' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2867' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2868' source='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void'/>
			<edge id='2869' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2870' source='com.masshabit.squibble.StoryScreen: next()void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='2871' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='2872' source='com.masshabit.common.Level: registerGeometry()void' target='com.masshabit.common.physics.Physics: registerGroup(com.masshabit.common.physics.CollisionGroup)void'/>
			<edge id='2873' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F'/>
			<edge id='2874' source='com.masshabit.squibble.GameScreen: init()void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2875' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.util.Date: after(java.util.Date)boolean'/>
			<edge id='2876' source='com.masshabit.squibble.free.activity.b.l: c()boolean' target='java.text.SimpleDateFormat: init(java.lang.String)void'/>
			<edge id='2877' source='com.masshabit.squibble.free.activity.b.t: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='2878' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2879' source='com.masshabit.squibble.free.activity.b.g: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='2880' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='2881' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='java.util.Arrays: fill([II)void'/>
			<edge id='2882' source='com.android.vending.licensing.ILicenseResultListener$Stub: init()void' target='android.os.Binder: init()void'/>
			<edge id='2883' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='org.json.JSONObject: init(java.lang.String)void'/>
			<edge id='2884' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='2885' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.OutputStream: write(java.lang.Integer)void'/>
			<edge id='2886' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.util.Vector: init()void'/>
			<edge id='2887' source='com.masshabit.common.physics.Physics: checkGroupCollisions()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='2888' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: getInputStream()java.io.InputStream'/>
			<edge id='2889' source='com.masshabit.squibble.NPC: init()void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='2890' source='com.masshabit.squibble.Game: changeScreen(IF)void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='2891' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.lang.String: getBytes()[B'/>
			<edge id='2892' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='2893' source='com.masshabit.squibble.Game: nextScreen()void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='2894' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='2895' source='com.masshabit.squibble.free.activity.l: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Thread: init()void'/>
			<edge id='2896' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.DataOutputStream: writeUTF(java.lang.String)void'/>
			<edge id='2897' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='2898' source='com.masshabit.common.License: notReadyOrBad()boolean' target='com.masshabit.common.License: ready()boolean'/>
			<edge id='2899' source='com.masshabit.common.Camera: init()void' target='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='2900' source='com.masshabit.squibble.free.activity.e.k: l()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2901' source='com.masshabit.squibble.free.activity.t: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='2902' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='2903' source='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' target='java.lang.Object: init()void'/>
			<edge id='2904' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONArray: init()void'/>
			<edge id='2905' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='com.masshabit.common.License: access$102(com.masshabit.common.License,java.lang.Integer)java.lang.Integer'/>
			<edge id='2906' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='2907' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.client.methods.HttpPost: setEntity(org.apache.http.HttpEntity)void'/>
			<edge id='2908' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2909' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setAlpha(java.lang.Integer)void'/>
			<edge id='2910' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: setUseCaches(boolean)void'/>
			<edge id='2911' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='com.masshabit.squibble.free.activity.e.j: a(java.lang.String,android.content.Intent,android.graphics.Bitmap)void'/>
			<edge id='2912' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.FileOutputStream: init(java.io.File)void'/>
			<edge id='2913' source='com.masshabit.squibble.MenuScreen: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='2914' source='com.masshabit.common.tween.Ease: clinit()void' target='com.masshabit.common.tween.Ease$2: init()void'/>
			<edge id='2915' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: createNewFile()boolean'/>
			<edge id='2916' source='com.masshabit.squibble.MenuScreen$3: onTextChanged(java.lang.CharSequence,III)void' target='android.app.AlertDialog: getButton(java.lang.Integer)android.widget.Button'/>
			<edge id='2917' source='com.masshabit.squibble.free.activity.a.t: run()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='2918' source='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: clinit()void' target='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='2919' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getLine1Number()java.lang.String'/>
			<edge id='2920' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2921' source='com.masshabit.squibble.MenuScreen$3: init(com.masshabit.squibble.MenuScreen,android.app.AlertDialog)void' target='java.lang.Object: init()void'/>
			<edge id='2922' source='com.masshabit.squibble.free.activity.b.w: b()void' target='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void'/>
			<edge id='2923' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='android.os.Handler: init(android.os.Looper)void'/>
			<edge id='2924' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='java.util.Arrays: fill([FF)void'/>
			<edge id='2925' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: loadUrl(java.lang.String)void'/>
			<edge id='2926' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='2927' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='2928' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.lang.String: getBytes()[B'/>
			<edge id='2929' source='com.masshabit.squibble.free.R$id: init()void' target='java.lang.Object: init()void'/>
			<edge id='2930' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='android.content.ComponentName: init(java.lang.String,java.lang.String)void'/>
			<edge id='2931' source='com.masshabit.squibble.free.activity.e.k: l()void' target='android.content.SharedPreferences$Editor: putString(java.lang.String,java.lang.String)android.content.SharedPreferences$Editor'/>
			<edge id='2932' source='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='2933' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='2934' source='com.masshabit.common.physics.SegmentParticle: getPoint2(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='2935' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='2936' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawRect(FFFFLandroid.graphics.Paint)void'/>
			<edge id='2937' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.io.FileInputStream: init(java.io.File)void'/>
			<edge id='2938' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='2939' source='com.masshabit.squibble.free.activity.d.a: equals(java.lang.Object)boolean' target='java.lang.Object: equals(java.lang.Object)boolean'/>
			<edge id='2940' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='2941' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='com.masshabit.squibble.MainView: setFocusableInTouchMode(boolean)void'/>
			<edge id='2942' source='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void'/>
			<edge id='2943' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='2944' source='com.masshabit.squibble.MenuScreen$2: init(com.masshabit.squibble.MenuScreen)void' target='java.lang.Object: init()void'/>
			<edge id='2945' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Particle: addForce(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2946' source='com.android.vending.licensing.PreferenceObfuscator: putString(java.lang.String,java.lang.String)void' target='android.content.SharedPreferences$Editor: putString(java.lang.String,java.lang.String)android.content.SharedPreferences$Editor'/>
			<edge id='2947' source='com.masshabit.common.Clock: msSinceDt()J' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='2948' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='2949' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.util.Timer: schedule(java.util.TimerTask,J)void'/>
			<edge id='2950' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.security.Signature: verify([B)boolean'/>
			<edge id='2951' source='com.flurry.android.FlurryAgent: init()void' target='java.lang.Object: init()void'/>
			<edge id='2952' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='2953' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='2954' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='2955' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.ContentValues: clear()void'/>
			<edge id='2956' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='2957' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='2958' source='com.masshabit.squibble.Game: pushScreen(IF)void' target='com.masshabit.squibble.Game$ShowCommandEventPool: allocate()java.lang.Object'/>
			<edge id='2959' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='2960' source='com.flurry.android.FlurryAgent: g()void' target='com.flurry.android.FlurryAgent: a(java.io.Closeable)void'/>
			<edge id='2961' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='2962' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='2963' source='com.android.vending.licensing.util.Base64: encode([BII[BI)[B' target='com.android.vending.licensing.util.Base64: encode3to4([BII[BI[B)[B'/>
			<edge id='2964' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2965' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='2966' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.Player: setState(java.lang.Integer)void'/>
			<edge id='2967' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='com.masshabit.squibble.Profile$CompletedLevel: init(java.lang.String,F)void'/>
			<edge id='2968' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipInputStream: closeEntry()void'/>
			<edge id='2969' source='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='2970' source='com.masshabit.squibble.Player: castGrapple(FF)boolean' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='2971' source='com.masshabit.squibble.Game: init()void' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='2972' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.Activity: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='2973' source='com.masshabit.squibble.free.activity.c: e()java.lang.Integer' target='com.masshabit.squibble.free.activity.a.Abstract: f()java.lang.Integer'/>
			<edge id='2974' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.Map$Entry: getValue()java.lang.Object'/>
			<edge id='2975' source='com.android.vending.licensing.R$attr: init()void' target='java.lang.Object: init()void'/>
			<edge id='2976' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='2977' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.DataInputStream: readFully([B)void'/>
			<edge id='2978' source='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void'/>
			<edge id='2979' source='com.masshabit.squibble.UpsellScreen: destroy()void' target='com.masshabit.common.Level: destroy()void'/>
			<edge id='2980' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.WorldMapHud: getData()com.masshabit.squibble.WorldMapNode'/>
			<edge id='2981' source='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen' target='com.masshabit.squibble.SplashScreen: init()void'/>
			<edge id='2982' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='java.lang.Object: getClass()java.lang.Class'/>
			<edge id='2983' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='2984' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='2985' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='2986' source='com.masshabit.squibble.MainActivity: onStart()void' target='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void'/>
			<edge id='2987' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.ContentValues: put(java.lang.String,java.lang.Integer)void'/>
			<edge id='2988' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='com.masshabit.squibble.Player$Hand: setActive(boolean)void'/>
			<edge id='2989' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='2990' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void'/>
			<edge id='2991' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void'/>
			<edge id='2992' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.squibble.GameScreen: playerDead()void'/>
			<edge id='2993' source='com.masshabit.common.tween.VectorTween: update(F)void' target='com.masshabit.common.tween.Tween: isDone()boolean'/>
			<edge id='2994' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='2995' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.net.Socket: getInputStream()java.io.InputStream'/>
			<edge id='2996' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='2997' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='2998' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.FileInputStream: init(java.io.File)void'/>
			<edge id='2999' source='com.masshabit.common.curve.CurveParser: clinit()void' target='java.util.regex.Pattern: compile(java.lang.String,java.lang.Integer)java.util.regex.Pattern'/>
			<edge id='3000' source='com.masshabit.squibble.free.activity.a.l: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.l: a(java.lang.String)java.lang.String'/>
			<edge id='3001' source='com.masshabit.squibble.free.activity.e.d: a([D)boolean' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3002' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3003' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3004' source='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='3005' source='com.masshabit.squibble.MainActivity: onDestroy()void' target='android.app.Activity: onDestroy()void'/>
			<edge id='3006' source='com.masshabit.squibble.MainView: onKeyDown(ILandroid.view.KeyEvent)boolean' target='android.view.SurfaceView: onKeyDown(ILandroid.view.KeyEvent)boolean'/>
			<edge id='3007' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='3008' source='com.masshabit.squibble.Game: update(F)void' target='com.masshabit.squibble.Screen: update(F)void'/>
			<edge id='3009' source='com.masshabit.squibble.ItemEntity: saveState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3010' source='com.masshabit.common.Delay: init()void' target='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'/>
			<edge id='3011' source='com.masshabit.squibble.free.activity.a.a: createFromParcel(android.os.Parcel)java.lang.Object' target='android.os.Parcel: readString()java.lang.String'/>
			<edge id='3012' source='com.masshabit.squibble.Player: castGrapple(FF)boolean' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3013' source='com.masshabit.common.physics.SegmentParticle: set(FFFF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3014' source='com.flurry.android.FlurryAgent: g()void' target='java.io.File: exists()boolean'/>
			<edge id='3015' source='com.masshabit.squibble.free.activity.e.k: m()void' target='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String'/>
			<edge id='3016' source='com.masshabit.squibble.MainButtonPanel: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='3017' source='com.masshabit.squibble.GameScreen: playerDead()void' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void'/>
			<edge id='3018' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.Button: setText(java.lang.CharSequence)void'/>
			<edge id='3019' source='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='3020' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='android.content.res.AssetManager: open(java.lang.String)java.io.InputStream'/>
			<edge id='3021' source='com.masshabit.squibble.free.activity.b.v: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3022' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='3023' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='3024' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='3025' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.u: init(java.lang.String)void'/>
			<edge id='3026' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.database.Cursor: getString(java.lang.Integer)java.lang.String'/>
			<edge id='3027' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='3028' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='3029' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'/>
			<edge id='3030' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='3031' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: containsKey(java.lang.Object)boolean'/>
			<edge id='3032' source='com.masshabit.squibble.ItemEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3033' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='3034' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='3035' source='com.masshabit.common.tween.Ease: clinit()void' target='com.masshabit.common.tween.Ease$1: init()void'/>
			<edge id='3036' source='com.masshabit.common.entity.AnimatedEntity: init()void' target='com.masshabit.common.entity.AnimatedEntity: initChildren()void'/>
			<edge id='3037' source='com.masshabit.squibble.WorldMapNode: resolveConnections()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3038' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: readLong()J'/>
			<edge id='3039' source='com.masshabit.squibble.free.activity.b.c: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='3040' source='com.masshabit.squibble.WorldMapHud: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3041' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='3042' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.EditText: setId(java.lang.Integer)void'/>
			<edge id='3043' source='com.masshabit.squibble.WorldMapNode: lockChildren()void' target='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void'/>
			<edge id='3044' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeLong(J)void'/>
			<edge id='3045' source='com.masshabit.common.physics.Particle: clearAcceleration()void' target='com.masshabit.common.physics.Vector2: zero()void'/>
			<edge id='3046' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String)java.lang.String'/>
			<edge id='3047' source='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void' target='com.android.vending.licensing.LicenseChecker$ResultListener: access$000(com.android.vending.licensing.LicenseChecker$ResultListener)com.android.vending.licensing.LicenseValidator'/>
			<edge id='3048' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='3049' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='3050' source='com.masshabit.squibble.free.activity.b.q: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='3051' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void'/>
			<edge id='3052' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='android.content.res.Resources: getAssets()android.content.res.AssetManager'/>
			<edge id='3053' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: writeUTF(java.lang.String)void'/>
			<edge id='3054' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.ByteArrayOutputStream: init()void'/>
			<edge id='3055' source='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.m: b(java.lang.String)void'/>
			<edge id='3056' source='com.flurry.android.FlurryAgent: g()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3057' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.net.Socket: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='3058' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: init(android.content.Context)void'/>
			<edge id='3059' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3060' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3061' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.Object: init()void'/>
			<edge id='3062' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.ConvexHull: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void'/>
			<edge id='3063' source='com.masshabit.squibble.free.activity.Pushable: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='com.masshabit.squibble.free.activity.Pushable: a()[Ljava.lang.String'/>
			<edge id='3064' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.h: init(java.lang.String)void'/>
			<edge id='3065' source='com.flurry.android.FlurryAgent: c()void' target='java.io.DataOutputStream: writeByte(java.lang.Integer)void'/>
			<edge id='3066' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.Pushable: b(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer'/>
			<edge id='3067' source='com.masshabit.squibble.CreditsScreen: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='3068' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.common.Environment: setMutedChangedListener(com.masshabit.common.Environment$IMutedChangedListener)void'/>
			<edge id='3069' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3070' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='android.widget.Button: getText()java.lang.CharSequence'/>
			<edge id='3071' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.FileInputStream: init(java.io.File)void'/>
			<edge id='3072' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.c: d()com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='3073' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3074' source='com.masshabit.common.Camera: move(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3075' source='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='3076' source='com.masshabit.common.Util: init()void' target='java.lang.Object: init()void'/>
			<edge id='3077' source='com.masshabit.common.physics.SpringConstraint: getLength()F' target='com.masshabit.common.physics.SpringConstraint: getLengthSq()F'/>
			<edge id='3078' source='com.masshabit.squibble.UpsellScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='3079' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='java.lang.StringBuilder: init()void'/>
			<edge id='3080' source='com.android.vending.licensing.ILicenseResultListener$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='android.os.Parcel: readString()java.lang.String'/>
			<edge id='3081' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog'/>
			<edge id='3082' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='android.content.Context: getPackageName()java.lang.String'/>
			<edge id='3083' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='3084' source='com.masshabit.squibble.free.activity.k: run()void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='3085' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='3086' source='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='3087' source='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void' target='com.android.vending.licensing.LicenseChecker: access$100(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='3088' source='com.masshabit.squibble.free.activity.a.h: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.g: a(com.masshabit.squibble.free.activity.a.g,boolean)boolean'/>
			<edge id='3089' source='com.masshabit.squibble.free.activity.a.o: d()void' target='com.masshabit.squibble.free.activity.a.o: a(java.lang.String,java.lang.String)void'/>
			<edge id='3090' source='com.masshabit.squibble.free.activity.b.j: init(com.masshabit.squibble.free.activity.b.i)void' target='java.lang.Object: init()void'/>
			<edge id='3091' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='3092' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.c: f()boolean'/>
			<edge id='3093' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='3094' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='java.util.Vector: add(java.lang.Object)boolean'/>
			<edge id='3095' source='com.masshabit.common.tween.Ease$EaseBase: init()void' target='java.lang.Object: init()void'/>
			<edge id='3096' source='com.masshabit.common.Clock: start()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='3097' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3098' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: getFirstChild()org.w3c.dom.Node'/>
			<edge id='3099' source='com.masshabit.squibble.free.activity.q: run()void' target='java.lang.Class: forName(java.lang.String)java.lang.Class'/>
			<edge id='3100' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' target='android.view.MotionEvent: getAction()java.lang.Integer'/>
			<edge id='3101' source='com.masshabit.squibble.free.activity.b.v: b()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='3102' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3103' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='org.w3c.dom.NodeList: getLength()java.lang.Integer'/>
			<edge id='3104' source='com.masshabit.squibble.MainActivity: handleMessage(android.os.Message)boolean' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3105' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='3106' source='com.masshabit.common.physics.ConvexHull: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3107' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='3108' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.File: delete()boolean'/>
			<edge id='3109' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='3110' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3111' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.h: requestWindowFeature(java.lang.Integer)boolean'/>
			<edge id='3112' source='com.masshabit.squibble.free.activity.e.o: b()void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'/>
			<edge id='3113' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='java.util.ArrayList: contains(java.lang.Object)boolean'/>
			<edge id='3114' source='com.masshabit.common.physics.Vector2: equals(java.lang.Object)boolean' target='java.lang.Object: equals(java.lang.Object)boolean'/>
			<edge id='3115' source='com.masshabit.squibble.WorldMapGraph: findPath(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode,com.masshabit.common.Deque)boolean' target='com.masshabit.common.Deque: empty()void'/>
			<edge id='3116' source='com.masshabit.common.InputEvent: setEvent(android.view.KeyEvent)void' target='android.view.KeyEvent: getAction()java.lang.Integer'/>
			<edge id='3117' source='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' target='android.content.Intent: putExtra(java.lang.String,java.lang.String)android.content.Intent'/>
			<edge id='3118' source='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3119' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game$4: init(com.masshabit.squibble.Game)void'/>
			<edge id='3120' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getWidth()java.lang.Integer'/>
			<edge id='3121' source='com.masshabit.squibble.free.activity.a.i: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.g: a()android.content.Context'/>
			<edge id='3122' source='com.masshabit.common.License: init(android.content.Context)void' target='com.masshabit.common.License: getDeviceId(android.content.Context)java.lang.String'/>
			<edge id='3123' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Player$Hand: isActive()boolean'/>
			<edge id='3124' source='com.masshabit.squibble.StoryScreen: tweenComplete(java.lang.Object)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3125' source='com.masshabit.common.Deque: pop_back()java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3126' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.Cipher: doFinal([B)[B'/>
			<edge id='3127' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.String: init([BII)void'/>
			<edge id='3128' source='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' target='android.content.res.AssetFileDescriptor: close()void'/>
			<edge id='3129' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: setTextAlign(android.graphics.Paint$Align)void'/>
			<edge id='3130' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void' target='android.view.MotionEvent: getHistoricalY(java.lang.Integer)F'/>
			<edge id='3131' source='com.masshabit.squibble.free.activity.e: onDestroy()void' target='com.masshabit.squibble.free.activity.g: a()void'/>
			<edge id='3132' source='com.masshabit.common.Camera: update(F)void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='3133' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='android.content.Context: openFileOutput(java.lang.String,java.lang.Integer)java.io.FileOutputStream'/>
			<edge id='3134' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3135' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='3136' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3137' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseChecker: access$300(com.android.vending.licensing.LicenseChecker)java.util.Set'/>
			<edge id='3138' source='com.masshabit.common.Environment: run()void' target='android.view.SurfaceHolder: unlockCanvasAndPost(android.graphics.Canvas)void'/>
			<edge id='3139' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.CircleParticle: getPosition(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3140' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.o: init(java.lang.String)void'/>
			<edge id='3141' source='com.masshabit.common.curve.PolyCubicBezier: draw(android.graphics.Canvas)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3142' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.Camera: update(F)void'/>
			<edge id='3143' source='com.masshabit.common.License: init(android.content.Context)void' target='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void'/>
			<edge id='3144' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='3145' source='com.masshabit.squibble.free.activity.a.o: g()android.content.Intent' target='java.lang.StringBuilder: init()void'/>
			<edge id='3146' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.Cipher: init(ILjava.security.Key,java.security.spec.AlgorithmParameterSpec)void'/>
			<edge id='3147' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3148' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void'/>
			<edge id='3149' source='com.masshabit.squibble.free.activity.e.k: l()void' target='android.content.SharedPreferences$Editor: commit()boolean'/>
			<edge id='3150' source='com.masshabit.squibble.free.activity.l: run()void' target='com.masshabit.squibble.free.activity.g: start()void'/>
			<edge id='3151' source='com.masshabit.squibble.R$id: init()void' target='java.lang.Object: init()void'/>
			<edge id='3152' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3153' source='com.masshabit.common.physics.Physics: update(F)void' target='com.masshabit.common.physics.Constraint: update(F)void'/>
			<edge id='3154' source='com.masshabit.squibble.free.activity.n: init(java.lang.String,java.lang.Integer)void' target='java.lang.Enum: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='3155' source='com.masshabit.squibble.Game: init()void' target='android.os.Bundle: getInt(java.lang.String,java.lang.Integer)java.lang.Integer'/>
			<edge id='3156' source='com.masshabit.squibble.free.activity.a.j: d()void' target='com.masshabit.squibble.free.activity.a.j: a(java.lang.String,java.lang.String)void'/>
			<edge id='3157' source='com.flurry.android.FlurryAgent: g()void' target='java.io.File: mkdirs()boolean'/>
			<edge id='3158' source='com.masshabit.common.Globals: freeMode()boolean' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3159' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3160' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3161' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3162' source='com.android.vending.licensing.LicenseValidator: handleApplicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='com.android.vending.licensing.LicenseCheckerCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void'/>
			<edge id='3163' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'/>
			<edge id='3164' source='com.masshabit.squibble.free.activity.a.k: g()android.content.Intent' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='3165' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='android.os.Parcel: readInt()java.lang.Integer'/>
			<edge id='3166' source='com.masshabit.squibble.WorldMapHud: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3167' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='3168' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='java.lang.StringBuilder: init()void'/>
			<edge id='3169' source='com.masshabit.squibble.free.activity.b.c: b()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3170' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='3171' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3172' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3173' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='3174' source='com.masshabit.squibble.HowToScreen: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3175' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: translate(FF)void'/>
			<edge id='3176' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.entity.ByteArrayEntity: setContentType(java.lang.String)void'/>
			<edge id='3177' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONException: printStackTrace()void'/>
			<edge id='3178' source='com.masshabit.squibble.MainActivity: onSaveInstanceState(android.os.Bundle)void' target='com.masshabit.common.Environment: saveState(android.os.Bundle)void'/>
			<edge id='3179' source='com.masshabit.squibble.free.activity.e.k: h()void' target='com.masshabit.squibble.free.activity.e.k: m()void'/>
			<edge id='3180' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='3181' source='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3182' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: a(com.masshabit.squibble.free.activity.e.m)void'/>
			<edge id='3183' source='com.masshabit.squibble.MainActivity: onStart()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3184' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: recycle()void'/>
			<edge id='3185' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='3186' source='com.masshabit.squibble.NPC: calcMatrix()void' target='android.graphics.Matrix: preTranslate(FF)boolean'/>
			<edge id='3187' source='com.masshabit.squibble.free.activity.a.f: d()void' target='com.masshabit.squibble.free.activity.a.f: a(java.lang.String,java.lang.String)void'/>
			<edge id='3188' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.x: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='3189' source='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3190' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3191' source='com.masshabit.squibble.free.activity.b.t: b()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='3192' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='java.lang.Math: min(II)java.lang.Integer'/>
			<edge id='3193' source='com.masshabit.common.Clock: reset()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='3194' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.os.Handler: postDelayed(java.lang.Runnable,J)boolean'/>
			<edge id='3195' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='java.util.List: add(java.lang.Object)boolean'/>
			<edge id='3196' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='3197' source='com.masshabit.squibble.free.activity.b.d: b()void' target='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void'/>
			<edge id='3198' source='com.masshabit.common.curve.PolyCubicBezier: estimateLength()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3199' source='com.masshabit.common.physics.CollisionDetector: rayCastQuery(com.masshabit.common.physics.Particle,FFFF)F' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3200' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='3201' source='com.masshabit.squibble.MainActivity: onPrepareDialog(ILandroid.app.Dialog)void' target='com.masshabit.common.Environment: onPrepareDialog(ILandroid.app.Dialog)void'/>
			<edge id='3202' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3203' source='com.masshabit.common.physics.CollisionDetector: circleVsCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.CircleParticle,boolean)boolean' target='com.masshabit.common.physics.CircleParticle: getRadius()F'/>
			<edge id='3204' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void'/>
			<edge id='3205' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='3206' source='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='3207' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void'/>
			<edge id='3208' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='3209' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='android.app.Notification: init(ILjava.lang.CharSequence,J)void'/>
			<edge id='3210' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getNetworkType()java.lang.Integer'/>
			<edge id='3211' source='com.masshabit.common.Environment: run()void' target='java.util.concurrent.Semaphore: release()void'/>
			<edge id='3212' source='com.android.vending.licensing.LicenseChecker$ResultListener$1: init(com.android.vending.licensing.LicenseChecker$ResultListener,com.android.vending.licensing.LicenseChecker)void' target='java.lang.Object: init()void'/>
			<edge id='3213' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='3214' source='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='3215' source='com.flurry.android.f: init()void' target='com.flurry.android.f: init(B)void'/>
			<edge id='3216' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3217' source='com.masshabit.squibble.ButtonEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='3218' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='3219' source='com.masshabit.common.Deque: peek_back()java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3220' source='com.masshabit.squibble.free.activity.a: b()boolean' target='java.util.List: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3221' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='3222' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='3223' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.squibble.Player: setState(java.lang.Integer)void'/>
			<edge id='3224' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3225' source='com.masshabit.squibble.MainView: onWindowFocusChanged(boolean)void' target='com.masshabit.common.Environment: setFocused(boolean)void'/>
			<edge id='3226' source='com.masshabit.squibble.free.activity.b.m: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='3227' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3228' source='com.masshabit.squibble.free.activity.y: onClick(android.view.View)void' target='android.widget.ArrayAdapter: notifyDataSetChanged()void'/>
			<edge id='3229' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='3230' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='com.android.vending.licensing.util.Base64: encode([B)java.lang.String'/>
			<edge id='3231' source='com.masshabit.squibble.Game$4: onMenuItemClick(android.view.MenuItem)boolean' target='com.masshabit.common.Environment: setArtificiallyPaused(boolean)void'/>
			<edge id='3232' source='com.masshabit.squibble.free.activity.v: init(com.masshabit.squibble.free.activity.h)void' target='android.webkit.WebChromeClient: init()void'/>
			<edge id='3233' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='3234' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Environment: init()void'/>
			<edge id='3235' source='com.masshabit.squibble.free.activity.b.d: a()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='3236' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.NodeList: getLength()java.lang.Integer'/>
			<edge id='3237' source='com.masshabit.squibble.free.activity.Pushable: clinit()void' target='com.masshabit.squibble.free.activity.d: init()void'/>
			<edge id='3238' source='com.masshabit.squibble.free.activity.e.o: init(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='3239' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: disconnect()void'/>
			<edge id='3240' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3241' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='3242' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.Flog: c(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3243' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.y: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='3244' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3245' source='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' target='android.util.Log: e(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3246' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3247' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: i()java.lang.String'/>
			<edge id='3248' source='com.masshabit.squibble.free.activity.e.o: a()void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String)void'/>
			<edge id='3249' source='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.l: init(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='3250' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.Cipher: getInstance(java.lang.String)javax.crypto.Cipher'/>
			<edge id='3251' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.os.SystemClock: elapsedRealtime()J'/>
			<edge id='3252' source='com.masshabit.squibble.Game: update(F)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3253' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Matrix: setTranslate(FF)void'/>
			<edge id='3254' source='com.masshabit.squibble.UpsellScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.ButtonEntity: checkTap(FF)boolean'/>
			<edge id='3255' source='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='3256' source='com.masshabit.common.License: getDeviceId(android.content.Context)java.lang.String' target='android.provider.Settings$Secure: getString(android.content.ContentResolver,java.lang.String)java.lang.String'/>
			<edge id='3257' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3258' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.net.URL: init(java.lang.String)void'/>
			<edge id='3259' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.common.EnvironmentArgs: init()void'/>
			<edge id='3260' source='com.masshabit.squibble.NPC: saveState(android.os.Bundle)void' target='android.os.Bundle: putFloat(java.lang.String,F)void'/>
			<edge id='3261' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuffer: init()void'/>
			<edge id='3262' source='com.flurry.android.FlurryAgent: f()void' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3263' source='com.masshabit.squibble.free.activity.a.u: c()boolean' target='com.masshabit.squibble.free.activity.a.v: init(com.masshabit.squibble.free.activity.a.u)void'/>
			<edge id='3264' source='com.masshabit.squibble.free.activity.a.f: c()boolean' target='com.masshabit.squibble.free.activity.a.f: a(java.lang.String)java.lang.String'/>
			<edge id='3265' source='com.masshabit.squibble.free.activity.b.r: b()void' target='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='3266' source='com.masshabit.common.ObjectPool: allocate()java.lang.Object' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3267' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: setRequestMethod(java.lang.String)void'/>
			<edge id='3268' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.spec.DESKeySpec: init([B)void'/>
			<edge id='3269' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.v: init(java.lang.String)void'/>
			<edge id='3270' source='com.masshabit.squibble.free.activity.d.e: c()void' target='com.masshabit.squibble.free.activity.d.d: a()void'/>
			<edge id='3271' source='com.masshabit.squibble.free.activity.i: run()void' target='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='3272' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.Game: threadedInit()void'/>
			<edge id='3273' source='com.masshabit.squibble.CheckingLicenseScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='3274' source='com.masshabit.squibble.WorldMapNode: init()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3275' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3276' source='com.flurry.android.FlurryAgent: a(android.content.Context,boolean)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3277' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='3278' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: b()boolean'/>
			<edge id='3279' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='3280' source='com.masshabit.common.physics.CircleParticle: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Canvas: drawCircle(FFFLandroid.graphics.Paint)void'/>
			<edge id='3281' source='com.flurry.android.c: init(com.flurry.android.FlurryAgent,android.content.Context,boolean)void' target='java.lang.Object: init()void'/>
			<edge id='3282' source='com.android.vending.licensing.ILicenseResultListener$Stub: init()void' target='com.android.vending.licensing.ILicenseResultListener$Stub: attachInterface(android.os.IInterface,java.lang.String)void'/>
			<edge id='3283' source='com.masshabit.squibble.WorldMapNode: lockChildren()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3284' source='com.android.vending.licensing.PreferenceObfuscator: init(android.content.SharedPreferences,com.android.vending.licensing.Obfuscator)void' target='java.lang.Object: init()void'/>
			<edge id='3285' source='com.masshabit.squibble.free.activity.e.k: k()[Lcom.masshabit.squibble.free.activity.e.b' target='java.util.Vector: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='3286' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.text.format.DateFormat: format(java.lang.CharSequence,J)java.lang.CharSequence'/>
			<edge id='3287' source='com.masshabit.common.tween.Ease: easeOut(F)F' target='com.masshabit.common.tween.Ease: easeIn(F)F'/>
			<edge id='3288' source='com.masshabit.squibble.CheckingLicenseScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: setPositiveButton(ILandroid.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='3289' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='com.android.vending.licensing.ResponseData: init()void'/>
			<edge id='3290' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='com.masshabit.squibble.NPC: calcMatrix()void'/>
			<edge id='3291' source='com.masshabit.squibble.free.activity.e.r: clinit()void' target='java.util.HashMap: init()void'/>
			<edge id='3292' source='com.android.vending.licensing.LicenseChecker: getVersionCode(android.content.Context,java.lang.String)java.lang.String' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3293' source='com.masshabit.common.resource.ResourceMap: get(java.lang.Integer)java.lang.Object' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3294' source='com.masshabit.squibble.free.activity.h: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.free.activity.r: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='3295' source='com.masshabit.squibble.free.activity.y: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.h)[Z'/>
			<edge id='3296' source='com.masshabit.common.physics.Physics: draw(android.graphics.Canvas,android.graphics.Paint)void' target='com.masshabit.common.physics.Constraint: draw(android.graphics.Canvas,android.graphics.Paint)void'/>
			<edge id='3297' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.Map: get(java.lang.Object)java.lang.Object'/>
			<edge id='3298' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.lang.String: init([BII)void'/>
			<edge id='3299' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='3300' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3301' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3302' source='com.masshabit.squibble.Game$ShowCommandEventPool: init(com.masshabit.squibble.Game)void' target='com.masshabit.common.ObjectPool: init()void'/>
			<edge id='3303' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='3304' source='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3305' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='3306' source='com.masshabit.squibble.free.activity.e.p: init()void' target='java.lang.Object: init()void'/>
			<edge id='3307' source='com.masshabit.common.physics.CollisionUtils: closestPointOnLineToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='3308' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3309' source='com.masshabit.squibble.WorldMapNode: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3310' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3311' source='com.masshabit.common.physics.SpringConstraint: satisfy(F)void' target='java.lang.Math: max(FF)F'/>
			<edge id='3312' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.io.OutputStream: write([B)void'/>
			<edge id='3313' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.physics.Physics: update(F)void'/>
			<edge id='3314' source='com.masshabit.common.physics.Vector2: transform(android.graphics.Matrix)void' target='com.masshabit.common.physics.Vector2: matrixTransform(android.graphics.Matrix,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)void'/>
			<edge id='3315' source='com.masshabit.squibble.Screen: destroy()void' target='android.media.SoundPool: release()void'/>
			<edge id='3316' source='com.masshabit.squibble.free.activity.e.k: n()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3317' source='com.masshabit.squibble.free.activity.b.f: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='3318' source='com.masshabit.common.physics.Physics: checkGroupCollisions()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3319' source='com.masshabit.common.physics.HalfEdge: set(FFFF)void' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='3320' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.d: a()android.content.Context'/>
			<edge id='3321' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='3322' source='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' target='com.masshabit.common.entity.StaticEntity: drawChildren(android.graphics.Canvas)void'/>
			<edge id='3323' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='3324' source='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='3325' source='com.masshabit.squibble.NPC: tweenComplete(java.lang.Object)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='3326' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3327' source='com.masshabit.common.tween.Tween: update(F)void' target='com.masshabit.common.tween.ITweenCompleteListener: tweenComplete(java.lang.Object)void'/>
			<edge id='3328' source='com.masshabit.squibble.free.activity.a.n: d()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='3329' source='com.masshabit.squibble.free.activity.b.v: b()void' target='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean'/>
			<edge id='3330' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.provider.Settings$System: getString(android.content.ContentResolver,java.lang.String)java.lang.String'/>
			<edge id='3331' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: setRequestProperty(java.lang.String,java.lang.String)void'/>
			<edge id='3332' source='com.masshabit.squibble.WorldMapScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3333' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.DataOutputStream: init(java.io.OutputStream)void'/>
			<edge id='3334' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='android.os.Bundle: getParcelable(java.lang.String)android.os.Parcelable'/>
			<edge id='3335' source='com.masshabit.squibble.UpsellScreen: update(F)void' target='com.masshabit.common.Layer: update(F)void'/>
			<edge id='3336' source='com.masshabit.squibble.Game: update(F)void' target='com.masshabit.common.Delay: update(F)void'/>
			<edge id='3337' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSimCountryIso()java.lang.String'/>
			<edge id='3338' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.lang.Character: valueOf(C)java.lang.Character'/>
			<edge id='3339' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3340' source='com.masshabit.squibble.free.activity.e.j: clinit()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3341' source='com.flurry.android.FlurryAgent: init()void' target='android.os.HandlerThread: init(java.lang.String)void'/>
			<edge id='3342' source='com.masshabit.common.entity.AnimatedEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3343' source='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='3344' source='com.masshabit.common.physics.CollisionDetector: clinit()void' target='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void'/>
			<edge id='3345' source='com.masshabit.common.entity.AnimatedEntity: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='3346' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.DataInputStream: readUnsignedShort()java.lang.Integer'/>
			<edge id='3347' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.squibble.Player: lookupShootSpeed(F)F'/>
			<edge id='3348' source='com.masshabit.common.physics.SpringConstraint: draw(android.graphics.Canvas,android.graphics.Paint)void' target='android.graphics.Paint: setStyle(android.graphics.Paint$Style)void'/>
			<edge id='3349' source='com.masshabit.common.entity.Entity: init()void' target='android.graphics.Matrix: init()void'/>
			<edge id='3350' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B'/>
			<edge id='3351' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.DataInputStream: readLong()J'/>
			<edge id='3352' source='com.masshabit.squibble.free.activity.b.t: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3353' source='com.masshabit.squibble.free.activity.b.l: c()boolean' target='java.util.Date: after(java.util.Date)boolean'/>
			<edge id='3354' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.net.HttpURLConnection: setReadTimeout(java.lang.Integer)void'/>
			<edge id='3355' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='3356' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='3357' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='android.content.ComponentName: init(java.lang.String,java.lang.String)void'/>
			<edge id='3358' source='com.masshabit.squibble.free.activity.Pushable: a(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.Pushable: a()[Ljava.lang.String'/>
			<edge id='3359' source='com.masshabit.squibble.free.activity.g: a(J)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3360' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.net.HttpURLConnection: getInputStream()java.io.InputStream'/>
			<edge id='3361' source='com.masshabit.squibble.free.activity.b.v: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3362' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: getLong(java.lang.Integer)J'/>
			<edge id='3363' source='com.masshabit.squibble.free.activity.b.s: a()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='3364' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3365' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: setRequestMethod(java.lang.String)void'/>
			<edge id='3366' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.util.regex.Matcher: group(java.lang.Integer)java.lang.String'/>
			<edge id='3367' source='com.masshabit.squibble.CheckingLicenseScreen$2: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void' target='java.lang.Object: init()void'/>
			<edge id='3368' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='com.masshabit.squibble.HidableEntity: setVisible(boolean)void'/>
			<edge id='3369' source='com.masshabit.squibble.free.activity.e: a()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3370' source='com.masshabit.squibble.free.activity.b.m: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3371' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.File: exists()boolean'/>
			<edge id='3372' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.net.HttpURLConnection: setRequestProperty(java.lang.String,java.lang.String)void'/>
			<edge id='3373' source='com.masshabit.common.Environment: run()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='3374' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='3375' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='com.masshabit.common.curve.PolyCubicBezier: init()void'/>
			<edge id='3376' source='com.masshabit.squibble.free.activity.a.q: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='3377' source='com.android.vending.licensing.ServerManagedPolicy: setRetryUntil(java.lang.String)void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='3378' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3379' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.LinearLayout$LayoutParams: init(II)void'/>
			<edge id='3380' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: c(com.masshabit.squibble.free.activity.h)[Lcom.masshabit.squibble.free.activity.e.b'/>
			<edge id='3381' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: init(android.os.IBinder)void' target='java.lang.Object: init()void'/>
			<edge id='3382' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.SecretKeyFactory: getInstance(java.lang.String)javax.crypto.SecretKeyFactory'/>
			<edge id='3383' source='com.masshabit.squibble.free.activity.b.l: c()boolean' target='java.text.SimpleDateFormat: parse(java.lang.String)java.util.Date'/>
			<edge id='3384' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void'/>
			<edge id='3385' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: c()boolean'/>
			<edge id='3386' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Camera: move(FF)void'/>
			<edge id='3387' source='com.masshabit.common.resource.ResourceMap: get(java.lang.Integer)java.lang.Object' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3388' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='android.graphics.Paint: init()void'/>
			<edge id='3389' source='com.masshabit.squibble.MainView: onTouchEvent(android.view.MotionEvent)boolean' target='android.view.SurfaceView: onTouchEvent(android.view.MotionEvent)boolean'/>
			<edge id='3390' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Node: getNextSibling()org.w3c.dom.Node'/>
			<edge id='3391' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='3392' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='java.lang.StringBuilder: init()void'/>
			<edge id='3393' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.FileOutputStream: write([BII)void'/>
			<edge id='3394' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: scale(FF)void'/>
			<edge id='3395' source='com.masshabit.squibble.free.activity.c: a(android.os.Parcel)void' target='android.os.Parcel: writeParcelable(android.os.Parcelable,java.lang.Integer)void'/>
			<edge id='3396' source='com.masshabit.squibble.free.activity.a.v: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3397' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3398' source='com.masshabit.squibble.free.activity.b.e: init()void' target='java.lang.Object: init()void'/>
			<edge id='3399' source='com.masshabit.squibble.free.activity.g: a(J)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3400' source='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void'/>
			<edge id='3401' source='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void' target='java.lang.reflect.Method: setAccessible(boolean)void'/>
			<edge id='3402' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='java.util.concurrent.Semaphore: init(IZ)void'/>
			<edge id='3403' source='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void' target='android.os.Handler: post(java.lang.Runnable)boolean'/>
			<edge id='3404' source='com.android.vending.licensing.LicenseChecker: onServiceConnected(android.content.ComponentName,android.os.IBinder)void' target='com.android.vending.licensing.LicenseChecker: runChecks()void'/>
			<edge id='3405' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.widget.LinearLayout: addView(android.view.View)void'/>
			<edge id='3406' source='com.masshabit.squibble.WorldMapGraph$NodeDistanceComparator: init(com.masshabit.squibble.WorldMapGraph)void' target='java.lang.Object: init()void'/>
			<edge id='3407' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='3408' source='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3409' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.common.License: check()void'/>
			<edge id='3410' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3411' source='com.masshabit.squibble.HowToScreen: init()void' target='android.graphics.Paint: setTypeface(android.graphics.Typeface)android.graphics.Typeface'/>
			<edge id='3412' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='com.android.vending.licensing.util.Base64DecoderException: init(java.lang.String)void'/>
			<edge id='3413' source='com.masshabit.squibble.Game$1: run()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3414' source='com.masshabit.common.Environment: dispatchEvents()void' target='java.util.ArrayList: clear()void'/>
			<edge id='3415' source='com.masshabit.squibble.free.activity.e.h: init()void' target='java.lang.Thread: init()void'/>
			<edge id='3416' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.util.Vector: size()java.lang.Integer'/>
			<edge id='3417' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3418' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='javax.crypto.IllegalBlockSizeException: getMessage()java.lang.String'/>
			<edge id='3419' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3420' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.d: init(java.lang.String)void'/>
			<edge id='3421' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3422' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: startActivity(android.content.Intent)void'/>
			<edge id='3423' source='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void' target='com.android.vending.licensing.LicenseChecker: access$600(com.android.vending.licensing.LicenseChecker)android.os.Handler'/>
			<edge id='3424' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: size()java.lang.Integer'/>
			<edge id='3425' source='com.masshabit.squibble.free.activity.a.o: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3426' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='3427' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='java.lang.Boolean: valueOf(boolean)java.lang.Boolean'/>
			<edge id='3428' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.LinearLayout: init(android.content.Context)void'/>
			<edge id='3429' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.io.Closeable)void'/>
			<edge id='3430' source='com.masshabit.squibble.free.activity.v: onProgressChanged(android.webkit.WebView,java.lang.Integer)void' target='android.webkit.WebChromeClient: onProgressChanged(android.webkit.WebView,java.lang.Integer)void'/>
			<edge id='3431' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='3432' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3433' source='com.masshabit.squibble.free.activity.g: processIDLEAction()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='3434' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.Physics$RayCastResult: init()void'/>
			<edge id='3435' source='com.masshabit.squibble.GameScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText([CIIFFLandroid.graphics.Paint)void'/>
			<edge id='3436' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONObject: optString(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='3437' source='com.android.vending.licensing.LicenseChecker: access$200(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseChecker: finishCheck(com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='3438' source='com.masshabit.squibble.free.activity.e.f: onLocationChanged(android.location.Location)void' target='android.location.Location: getLongitude()D'/>
			<edge id='3439' source='com.masshabit.squibble.free.activity.b.l: c()boolean' target='java.util.Date: before(java.util.Date)boolean'/>
			<edge id='3440' source='com.masshabit.squibble.free.activity.g: run()void' target='org.apache.http.util.ByteArrayBuffer: clear()void'/>
			<edge id='3441' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='3442' source='com.masshabit.common.tween.Ease: easeOutIn(F)F' target='com.masshabit.common.tween.Ease: easeOut(F)F'/>
			<edge id='3443' source='com.masshabit.squibble.free.activity.e.b: init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='3444' source='com.flurry.android.FlurryAgent: a(java.io.DataInputStream)void' target='java.io.DataInputStream: readUTF()java.lang.String'/>
			<edge id='3445' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.PathEntity: init(com.masshabit.common.curve.PolyCubicBezier)void'/>
			<edge id='3446' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='3447' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='java.lang.RuntimeException: init(java.lang.Throwable)void'/>
			<edge id='3448' source='com.android.vending.licensing.LicenseChecker$ResultListener$1: run()void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3449' source='com.masshabit.squibble.free.activity.a.s: d()void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'/>
			<edge id='3450' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.Cipher: getInstance(java.lang.String)javax.crypto.Cipher'/>
			<edge id='3451' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3452' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSimSerialNumber()java.lang.String'/>
			<edge id='3453' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.n)void'/>
			<edge id='3454' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.util.regex.Pattern: quote(java.lang.String)java.lang.String'/>
			<edge id='3455' source='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.c: a(java.lang.String)java.lang.String'/>
			<edge id='3456' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='android.content.Intent: init(android.content.Context,java.lang.Class)void'/>
			<edge id='3457' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void'/>
			<edge id='3458' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.physics.Vector2: distanceSq(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='3459' source='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3460' source='com.masshabit.common.curve.CubicBezier: estimateLength()void' target='java.lang.Math: sqrt(D)D'/>
			<edge id='3461' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.OutputStream: flush()void'/>
			<edge id='3462' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='com.masshabit.common.LevelLoader$MinBounds: init(com.masshabit.common.LevelLoader)void'/>
			<edge id='3463' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3464' source='com.masshabit.squibble.MuteEntity: toggle()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='3465' source='com.android.vending.licensing.LicenseChecker: init(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='3466' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.squibble.Player: updateChildren(F)void'/>
			<edge id='3467' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.LevelLoader: load(java.lang.String)void'/>
			<edge id='3468' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.z: init(com.masshabit.squibble.free.activity.h)void'/>
			<edge id='3469' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='3470' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='3471' source='com.masshabit.squibble.free.activity.o: init(java.lang.String,java.lang.Integer)void' target='java.lang.Enum: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='3472' source='com.masshabit.common.Environment: startThread()void' target='java.lang.Thread: init(java.lang.Runnable,java.lang.String)void'/>
			<edge id='3473' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='3474' source='com.masshabit.squibble.free.activity.e.k: l()void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='3475' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.Util: clamp(FFF)F'/>
			<edge id='3476' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='org.apache.http.util.ByteArrayBuffer: clear()void'/>
			<edge id='3477' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='3478' source='com.flurry.android.FlurryAgent: setLogEnabled(boolean)void' target='com.flurry.android.Flog: enableLog()void'/>
			<edge id='3479' source='com.masshabit.squibble.Game: mutedChanged(boolean)void' target='android.content.Context: getSharedPreferences(java.lang.String,java.lang.Integer)android.content.SharedPreferences'/>
			<edge id='3480' source='com.masshabit.common.curve.PolyCubicBezier: init()void' target='java.lang.Object: init()void'/>
			<edge id='3481' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='com.masshabit.squibble.free.activity.e: getPackageManager()android.content.pm.PackageManager'/>
			<edge id='3482' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.MainButtonPanel: isReady()boolean'/>
			<edge id='3483' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipInputStream: read([B)java.lang.Integer'/>
			<edge id='3484' source='com.masshabit.common.tween.Ease: easeInOut(F)F' target='com.masshabit.common.tween.Ease: easeIn(F)F'/>
			<edge id='3485' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.webkit.WebView: init(android.content.Context)void'/>
			<edge id='3486' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='3487' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='3488' source='com.masshabit.squibble.CreditsScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='3489' source='com.android.vending.licensing.LicenseChecker$ResultListener: clearTimeout()void' target='android.os.Handler: removeCallbacks(java.lang.Runnable)void'/>
			<edge id='3490' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: connect()void'/>
			<edge id='3491' source='com.masshabit.squibble.free.activity.b.m: b()void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='3492' source='com.masshabit.squibble.free.activity.e.c: a()java.util.Vector' target='android.content.ContentResolver: query(android.net.Uri,[Ljava.lang.String,java.lang.String,[Ljava.lang.String,java.lang.String)android.database.Cursor'/>
			<edge id='3493' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='3494' source='com.masshabit.squibble.ProfileManager: allocatePlayerProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' target='com.masshabit.squibble.Profile: init()void'/>
			<edge id='3495' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='3496' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.entity.ByteArrayEntity: init([B)void'/>
			<edge id='3497' source='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3498' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3499' source='com.masshabit.common.Level: init(java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='3500' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='3501' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3502' source='com.masshabit.squibble.free.activity.g: processDOWNLOAD_FAILUE_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='3503' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='3504' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3505' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.CircleParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FFZF)void'/>
			<edge id='3506' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='3507' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3508' source='com.masshabit.squibble.free.activity.a.p: g()android.content.Intent' target='android.content.Intent: setComponent(android.content.ComponentName)android.content.Intent'/>
			<edge id='3509' source='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='3510' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='java.lang.RuntimeException: init(java.lang.String,java.lang.Throwable)void'/>
			<edge id='3511' source='com.masshabit.squibble.free.activity.b.h: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3512' source='com.masshabit.common.Environment: run()void' target='com.masshabit.common.Clock: stop()void'/>
			<edge id='3513' source='com.android.vending.licensing.LicenseChecker$ResultListener: init(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseChecker$ResultListener: startTimeout()void'/>
			<edge id='3514' source='com.android.vending.licensing.LicenseChecker: runChecks()void' target='com.android.vending.licensing.LicenseValidator: getNonce()java.lang.Integer'/>
			<edge id='3515' source='com.masshabit.common.Camera: restoreState(android.os.Bundle)void' target='com.masshabit.common.Camera: calculateMatrices()void'/>
			<edge id='3516' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='org.json.JSONObject: toString()java.lang.String'/>
			<edge id='3517' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.ListView: init(android.content.Context)void'/>
			<edge id='3518' source='com.flurry.android.FlurryAgent: onStartSession(android.content.Context,java.lang.String)void' target='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void'/>
			<edge id='3519' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='3520' source='com.masshabit.common.physics.Vector2: angleDegrees()F' target='com.masshabit.common.physics.Vector2: angle()F'/>
			<edge id='3521' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3522' source='com.flurry.android.FlurryAgent: onError(java.lang.String,java.lang.String,java.lang.String)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3523' source='com.masshabit.common.tween.VectorTween: update(F)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3524' source='com.masshabit.squibble.MenuScreen$3: onTextChanged(java.lang.CharSequence,III)void' target='java.lang.CharSequence: length()java.lang.Integer'/>
			<edge id='3525' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='java.lang.StringBuffer: append(java.lang.String)java.lang.StringBuffer'/>
			<edge id='3526' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.lang.Long: toString(JI)java.lang.String'/>
			<edge id='3527' source='com.masshabit.squibble.MainView: onTouchEvent(android.view.MotionEvent)boolean' target='java.lang.Thread: sleep(J)void'/>
			<edge id='3528' source='com.masshabit.squibble.MenuScreen: createDialogListener(java.lang.Integer)android.content.DialogInterface$OnClickListener' target='com.masshabit.squibble.MenuScreen$1: init(com.masshabit.squibble.MenuScreen)void'/>
			<edge id='3529' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Level: init()void'/>
			<edge id='3530' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Map: entrySet()java.util.Set'/>
			<edge id='3531' source='com.masshabit.squibble.Game: threadedInit()void' target='java.lang.Thread: init(java.lang.Runnable)void'/>
			<edge id='3532' source='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String' target='java.lang.String: init([BLjava.lang.String)void'/>
			<edge id='3533' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='3534' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3535' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.io.InputStream: read([BII)java.lang.Integer'/>
			<edge id='3536' source='com.masshabit.squibble.free.activity.b.h: b()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3537' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.String: toLowerCase()java.lang.String'/>
			<edge id='3538' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='com.android.vending.licensing.ValidationException: init(java.lang.String)void'/>
			<edge id='3539' source='com.masshabit.squibble.free.activity.b.g: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3540' source='com.masshabit.common.Environment: setFocused(boolean)void' target='java.lang.StringBuilder: append(boolean)java.lang.StringBuilder'/>
			<edge id='3541' source='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3542' source='com.masshabit.squibble.free.activity.e: b(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='3543' source='com.masshabit.squibble.free.activity.b.o: b()void' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='3544' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.content.Context: getResources()android.content.res.Resources'/>
			<edge id='3545' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='com.masshabit.squibble.free.activity.e.m: a()void'/>
			<edge id='3546' source='com.masshabit.squibble.free.activity.a.q: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='3547' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='3548' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='android.os.Bundle: getFloat(java.lang.String)F'/>
			<edge id='3549' source='com.masshabit.squibble.free.activity.a: clinit()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3550' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void'/>
			<edge id='3551' source='com.masshabit.common.Environment: setMuted(boolean)void' target='com.masshabit.common.Environment$IMutedChangedListener: mutedChanged(boolean)void'/>
			<edge id='3552' source='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3553' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.PlayerSelectPanel: isReady()boolean'/>
			<edge id='3554' source='com.masshabit.squibble.free.activity.a.j: g()android.content.Intent' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='3555' source='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3556' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'/>
			<edge id='3557' source='com.masshabit.squibble.free.activity.e: c()java.lang.String' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='3558' source='com.masshabit.common.physics.Vector2: distance(FFFF)F' target='com.masshabit.common.physics.Vector2: distanceSq(FFFF)F'/>
			<edge id='3559' source='com.masshabit.squibble.free.activity.d.c: init()void' target='java.lang.Object: init()void'/>
			<edge id='3560' source='com.masshabit.squibble.free.activity.e: a(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.j: start()void'/>
			<edge id='3561' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='com.masshabit.squibble.Game$2: init(com.masshabit.squibble.Game)void'/>
			<edge id='3562' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.RuntimeException: init(java.lang.String,java.lang.Throwable)void'/>
			<edge id='3563' source='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F' target='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3564' source='com.masshabit.common.Environment: dispatchEvents()void' target='com.masshabit.common.InputEvent: release()void'/>
			<edge id='3565' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='3566' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='android.widget.LinearLayout: addView(android.view.View,android.view.ViewGroup$LayoutParams)void'/>
			<edge id='3567' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.FileInputStream: read([BII)java.lang.Integer'/>
			<edge id='3568' source='com.masshabit.squibble.free.activity.e: d()java.lang.String' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='3569' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3570' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Map$Entry: getValue()java.lang.Object'/>
			<edge id='3571' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='3572' source='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void' target='java.lang.Object: init()void'/>
			<edge id='3573' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3574' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawRect(FFFFLandroid.graphics.Paint)void'/>
			<edge id='3575' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3576' source='com.masshabit.squibble.free.activity.a.u: c()boolean' target='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void'/>
			<edge id='3577' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3578' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer'/>
			<edge id='3579' source='com.masshabit.squibble.WorldMapPath: init(com.masshabit.common.curve.PolyCubicBezier)void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='3580' source='com.masshabit.squibble.MenuScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean'/>
			<edge id='3581' source='com.masshabit.squibble.free.activity.g: processPARSE_FAILUE_Action()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='3582' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void'/>
			<edge id='3583' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Map: size()java.lang.Integer'/>
			<edge id='3584' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='android.content.res.Resources: getIdentifier(java.lang.String,java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3585' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='android.content.Intent: init(android.content.Context,java.lang.Class)void'/>
			<edge id='3586' source='com.masshabit.squibble.MenuScreen: onCreateDialog(java.lang.Integer)android.app.Dialog' target='android.app.AlertDialog$Builder: init(android.content.Context)void'/>
			<edge id='3587' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='3588' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='3589' source='com.masshabit.squibble.UpsellScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.flurry.android.FlurryAgent: onEvent(java.lang.String)void'/>
			<edge id='3590' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: mkdirs()boolean'/>
			<edge id='3591' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='com.masshabit.common.License: access$000(com.masshabit.common.License)J'/>
			<edge id='3592' source='com.android.vending.licensing.ILicensingService$Stub: onTransact(ILandroid.os.Parcel,android.os.Parcel,java.lang.Integer)boolean' target='com.android.vending.licensing.ILicensingService$Stub: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void'/>
			<edge id='3593' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='3594' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3595' source='com.masshabit.common.Camera: update(F)void' target='com.masshabit.common.tween.VectorTween: update(F)void'/>
			<edge id='3596' source='com.masshabit.common.Environment: dispatchEvents()void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3597' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='3598' source='com.masshabit.squibble.MainView: surfaceDestroyed(android.view.SurfaceHolder)void' target='com.masshabit.common.Environment: surfaceDestroyed()void'/>
			<edge id='3599' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ButtonEntity: checkTap(FF)boolean'/>
			<edge id='3600' source='com.masshabit.squibble.free.activity.e: onLowMemory()void' target='android.app.Service: onLowMemory()void'/>
			<edge id='3601' source='com.masshabit.common.physics.Vector2: angle()F' target='java.lang.Math: atan2(DD)D'/>
			<edge id='3602' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.net.HttpURLConnection: getHeaderFieldKey(java.lang.Integer)java.lang.String'/>
			<edge id='3603' source='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFI)void' target='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFI)void'/>
			<edge id='3604' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3605' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.client.methods.HttpPost: init(java.lang.String)void'/>
			<edge id='3606' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.SecretKeyFactory: generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey'/>
			<edge id='3607' source='com.masshabit.common.Environment: init()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3608' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.graphics.Color: parseColor(java.lang.String)java.lang.Integer'/>
			<edge id='3609' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3610' source='com.masshabit.squibble.Player: bothArmsEngaged()boolean' target='com.masshabit.squibble.Player$Hand: isActive()boolean'/>
			<edge id='3611' source='com.masshabit.squibble.free.activity.g: run()void' target='java.lang.StringBuilder: append(D)java.lang.StringBuilder'/>
			<edge id='3612' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: moveToFirst()boolean'/>
			<edge id='3613' source='com.masshabit.common.physics.CollisionGroup: init(II)void' target='java.lang.Object: init()void'/>
			<edge id='3614' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='3615' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='3616' source='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' target='java.lang.Object: init()void'/>
			<edge id='3617' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.graphics.Matrix: setTranslate(FF)void'/>
			<edge id='3618' source='com.masshabit.common.Environment: surfaceDestroyed()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3619' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3620' source='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.LicenseCheckerCallback: allow()void'/>
			<edge id='3621' source='com.masshabit.squibble.free.activity.g: run()void' target='org.apache.http.util.ByteArrayBuffer: append([BII)void'/>
			<edge id='3622' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3623' source='com.flurry.android.FlurryAgent: c()void' target='android.location.Location: getAccuracy()F'/>
			<edge id='3624' source='com.masshabit.squibble.MenuScreen: init()void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3625' source='com.masshabit.common.License$MyCallback: allow()void' target='com.masshabit.common.License: access$102(com.masshabit.common.License,java.lang.Integer)java.lang.Integer'/>
			<edge id='3626' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void'/>
			<edge id='3627' source='com.masshabit.squibble.free.activity.e.o: c()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3628' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.lang.String: getBytes()[B'/>
			<edge id='3629' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='android.graphics.Matrix: getValues([F)void'/>
			<edge id='3630' source='com.flurry.android.FlurryAgent: a(android.content.Context)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3631' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.physics.Vector2: multiply(F)void'/>
			<edge id='3632' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.Node: getNodeValue()java.lang.String'/>
			<edge id='3633' source='com.masshabit.squibble.free.activity.b.i: b()void' target='com.masshabit.squibble.free.activity.b.j: init(com.masshabit.squibble.free.activity.b.i)void'/>
			<edge id='3634' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Camera: move(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3635' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='3636' source='com.masshabit.squibble.free.activity.a.j: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='3637' source='com.masshabit.common.Environment: setFocused(boolean)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3638' source='com.masshabit.squibble.Player: setPosition(FF)void' target='com.masshabit.common.physics.CircleParticle: setPosition(FF)void'/>
			<edge id='3639' source='com.masshabit.squibble.MainActivity$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.common.ProfileManagerBase: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='3640' source='com.masshabit.squibble.free.activity.b.n: b()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='3641' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.location.LocationManager: requestLocationUpdates(java.lang.String,JFLandroid.location.LocationListener,android.os.Looper)void'/>
			<edge id='3642' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3643' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3644' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void'/>
			<edge id='3645' source='com.masshabit.squibble.free.activity.a.k: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='3646' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='android.os.Parcel: writeStrongBinder(android.os.IBinder)void'/>
			<edge id='3647' source='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3648' source='com.masshabit.common.ProfileManagerBase: create(android.content.Context)com.masshabit.common.ProfileManagerBase' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3649' source='com.masshabit.common.Environment: run()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3650' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='org.w3c.dom.Element: getAttribute(java.lang.String)java.lang.String'/>
			<edge id='3651' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean'/>
			<edge id='3652' source='com.masshabit.common.Globals: init()void' target='java.lang.Object: init()void'/>
			<edge id='3653' source='com.masshabit.common.curve.CubicBezier: draw(android.graphics.Canvas)void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3654' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList'/>
			<edge id='3655' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3656' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.Pushable: a(com.masshabit.squibble.free.activity.Pushable,java.lang.Integer)java.lang.Integer'/>
			<edge id='3657' source='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='3658' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void'/>
			<edge id='3659' source='com.masshabit.squibble.free.activity.a.t: run()void' target='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String'/>
			<edge id='3660' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='java.util.Timer: schedule(java.util.TimerTask,J)void'/>
			<edge id='3661' source='com.masshabit.squibble.MenuScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='3662' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3663' source='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='3664' source='com.masshabit.squibble.free.activity.e.q: a(com.masshabit.squibble.free.activity.Pushable)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3665' source='com.masshabit.common.Deque: init(java.lang.Integer)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3666' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.text.SimpleDateFormat: init(java.lang.String)void'/>
			<edge id='3667' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3668' source='com.masshabit.common.Environment: onCreateDialog(java.lang.Integer)android.app.Dialog' target='com.masshabit.squibble.Game: onCreateDialog(java.lang.Integer)android.app.Dialog'/>
			<edge id='3669' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.OutputStream: write(java.lang.Integer)void'/>
			<edge id='3670' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.io.FileOutputStream: write([B)void'/>
			<edge id='3671' source='com.masshabit.squibble.free.activity.e.c: init()void' target='java.lang.Object: init()void'/>
			<edge id='3672' source='com.masshabit.squibble.Game: delayComplete(com.masshabit.common.Delay)void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='3673' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Globals: freeMode()boolean'/>
			<edge id='3674' source='com.masshabit.squibble.GameScreen: update(F)void' target='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3675' source='com.masshabit.squibble.ProfileManager: init(android.content.Context)void' target='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void'/>
			<edge id='3676' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3677' source='com.android.vending.licensing.LicenseChecker: onDestroy()void' target='android.os.Handler: getLooper()android.os.Looper'/>
			<edge id='3678' source='com.masshabit.squibble.free.activity.a.f: c()boolean' target='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean'/>
			<edge id='3679' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='android.os.Handler: post(java.lang.Runnable)boolean'/>
			<edge id='3680' source='com.masshabit.squibble.free.activity.b.r: a()void' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='3681' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='java.io.DataInputStream: readUnsignedShort()java.lang.Integer'/>
			<edge id='3682' source='com.masshabit.squibble.NPC: calcMatrix()void' target='android.graphics.Matrix: reset()void'/>
			<edge id='3683' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='android.content.Context: startActivity(android.content.Intent)void'/>
			<edge id='3684' source='com.masshabit.squibble.free.activity.b.v: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3685' source='com.masshabit.squibble.free.activity.a.b: a()void' target='com.masshabit.squibble.free.activity.e.m: a()void'/>
			<edge id='3686' source='com.android.vending.licensing.ILicenseResultListener$Stub$Proxy: verifyLicense(ILjava.lang.String,java.lang.String)void' target='android.os.Parcel: writeInterfaceToken(java.lang.String)void'/>
			<edge id='3687' source='com.masshabit.squibble.CheckingLicenseScreen: update(F)void' target='com.masshabit.common.License: instance()com.masshabit.common.License'/>
			<edge id='3688' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='3689' source='com.masshabit.squibble.free.activity.e.l: run()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3690' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='android.database.Cursor: getCount()java.lang.Integer'/>
			<edge id='3691' source='com.masshabit.squibble.Game: init()void' target='android.os.Bundle: getString(java.lang.String)java.lang.String'/>
			<edge id='3692' source='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void' target='java.lang.Object: init()void'/>
			<edge id='3693' source='com.masshabit.common.curve.CubicBezier: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='3694' source='com.masshabit.squibble.free.activity.a.g: g()android.content.Intent' target='java.lang.StringBuilder: init()void'/>
			<edge id='3695' source='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' target='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='3696' source='com.masshabit.common.Environment: dispatchEvents()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3697' source='com.flurry.android.FlurryAgent: f()void' target='com.flurry.android.FlurryAgent: e()[B'/>
			<edge id='3698' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: cross(com.masshabit.common.physics.Vector2)F'/>
			<edge id='3699' source='com.masshabit.squibble.StoryScreen: update(F)void' target='com.masshabit.common.tween.Tween: update(F)void'/>
			<edge id='3700' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3701' source='com.masshabit.squibble.MuteEntity: init()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='3702' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='com.masshabit.common.tween.VectorTween: init(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,F)void'/>
			<edge id='3703' source='com.masshabit.squibble.Player: castGrapple(FF)boolean' target='com.masshabit.common.physics.Physics$RayCastResult: reset()void'/>
			<edge id='3704' source='com.masshabit.squibble.WorldMapPlayer: setGraph(com.masshabit.squibble.WorldMapGraph)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3705' source='com.masshabit.squibble.free.activity.b.q: b()void' target='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void'/>
			<edge id='3706' source='com.masshabit.squibble.MainActivity: onStop()void' target='android.app.Activity: onStop()void'/>
			<edge id='3707' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.CircleParticle: getRadius()F'/>
			<edge id='3708' source='com.masshabit.squibble.free.activity.e.a: init()void' target='java.lang.Object: init()void'/>
			<edge id='3709' source='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='3710' source='com.flurry.android.Flog: a(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer' target='android.util.Log: d(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='3711' source='com.masshabit.common.physics.Particle: addAcceleration(FF)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='3712' source='com.masshabit.squibble.free.activity.e: e()java.lang.String' target='android.os.Bundle: getString(java.lang.String)java.lang.String'/>
			<edge id='3713' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.StringBuilder: append(J)java.lang.StringBuilder'/>
			<edge id='3714' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='3715' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='3716' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3717' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'/>
			<edge id='3718' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.physics.Particle: setVelocity(FF)void'/>
			<edge id='3719' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='3720' source='com.masshabit.squibble.ButtonEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='3721' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3722' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3723' source='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='3724' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.entity.IEntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity'/>
			<edge id='3725' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3726' source='com.android.vending.licensing.LicenseChecker: access$100(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void'/>
			<edge id='3727' source='com.flurry.android.FlurryAgent: init()void' target='android.os.HandlerThread: getLooper()android.os.Looper'/>
			<edge id='3728' source='com.flurry.android.FlurryAgent: onEndSession(android.content.Context)void' target='java.lang.NullPointerException: init(java.lang.String)void'/>
			<edge id='3729' source='com.masshabit.squibble.GameScreen: playerWon()void' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='3730' source='com.masshabit.common.Globals: init()void' target='com.masshabit.common.License: ready()boolean'/>
			<edge id='3731' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='3732' source='com.masshabit.squibble.Game: onCreateOptionsMenu(android.view.Menu)boolean' target='android.view.Menu: add(IIILjava.lang.CharSequence)android.view.MenuItem'/>
			<edge id='3733' source='com.masshabit.squibble.HowToScreen: delayComplete(com.masshabit.common.Delay)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3734' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.VectorPool: allocate()java.lang.Object'/>
			<edge id='3735' source='com.android.vending.licensing.ILicensingService$Stub: init()void' target='com.android.vending.licensing.ILicensingService$Stub: attachInterface(android.os.IInterface,java.lang.String)void'/>
			<edge id='3736' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='com.masshabit.squibble.WorldMapPlayer: getDistance(II)F'/>
			<edge id='3737' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void' target='com.masshabit.squibble.free.activity.d.e: a()java.lang.Object'/>
			<edge id='3738' source='com.masshabit.squibble.Profile: reset()void' target='java.util.HashMap: clear()void'/>
			<edge id='3739' source='com.masshabit.common.Environment: quit()void' target='android.app.Activity: finish()void'/>
			<edge id='3740' source='com.masshabit.squibble.free.activity.a.s: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3741' source='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void' target='java.util.HashMap: init()void'/>
			<edge id='3742' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3743' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.OutputStream: close()void'/>
			<edge id='3744' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='3745' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='android.telephony.SmsManager: getDefault()android.telephony.SmsManager'/>
			<edge id='3746' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3747' source='com.android.vending.licensing.LicenseChecker$ResultListener$2: run()void' target='android.util.Log: i(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3748' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.util.HashMap: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='3749' source='com.masshabit.squibble.WorldMapScreen: destroy()void' target='com.masshabit.squibble.Screen: destroy()void'/>
			<edge id='3750' source='com.masshabit.squibble.MainActivity: onPrepareDialog(ILandroid.app.Dialog)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3751' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='org.w3c.dom.NodeList: getLength()java.lang.Integer'/>
			<edge id='3752' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.util.ArrayList: clear()void'/>
			<edge id='3753' source='com.flurry.android.FlurryAgent: c()void' target='android.location.Location: getLatitude()D'/>
			<edge id='3754' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='3755' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='3756' source='com.masshabit.squibble.free.activity.a.d: b()boolean' target='java.lang.String: endsWith(java.lang.String)boolean'/>
			<edge id='3757' source='com.masshabit.squibble.free.activity.a.p: d()void' target='com.masshabit.squibble.free.activity.a.p: a(java.lang.String,java.lang.String)void'/>
			<edge id='3758' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.Particle: getCollisionComponents(com.masshabit.common.physics.Vector2)com.masshabit.common.physics.CollisionComponents'/>
			<edge id='3759' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3760' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3761' source='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3762' source='com.masshabit.squibble.Game: nextScreen()void' target='java.util.ArrayList: remove(java.lang.Integer)java.lang.Object'/>
			<edge id='3763' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3764' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='com.masshabit.squibble.free.activity.a.Abstract: g()android.content.Intent'/>
			<edge id='3765' source='com.masshabit.squibble.SplashScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: setMatrix(android.graphics.Matrix)void'/>
			<edge id='3766' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.content.res.Resources: getStringArray(java.lang.Integer)[Ljava.lang.String'/>
			<edge id='3767' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='3768' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: setColor(java.lang.Integer)void'/>
			<edge id='3769' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='android.app.Activity: onCreate(android.os.Bundle)void'/>
			<edge id='3770' source='com.masshabit.squibble.free.activity.b.c: b()void' target='android.net.Uri: parse(java.lang.String)android.net.Uri'/>
			<edge id='3771' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='javax.xml.parsers.DocumentBuilder: parse(java.io.InputStream)org.w3c.dom.Document'/>
			<edge id='3772' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFI)void'/>
			<edge id='3773' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.AnimationState: init(com.masshabit.common.resource.Animation)void'/>
			<edge id='3774' source='com.flurry.android.FlurryAgent: g()void' target='java.io.DataOutputStream: writeLong(J)void'/>
			<edge id='3775' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='3776' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3777' source='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3778' source='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier' target='java.lang.Float: parseFloat(java.lang.String)F'/>
			<edge id='3779' source='com.android.vending.licensing.ServerManagedPolicy: setValidityTimestamp(java.lang.String)void' target='java.lang.Long: longValue()J'/>
			<edge id='3780' source='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void' target='com.masshabit.squibble.free.activity.q: start()void'/>
			<edge id='3781' source='com.masshabit.squibble.HidableEntity: init()void' target='com.masshabit.common.entity.StaticEntity: init()void'/>
			<edge id='3782' source='com.masshabit.squibble.Player: onCollide(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,FF)java.lang.Integer' target='com.masshabit.common.physics.SpringConstraint: setEnabled(boolean)void'/>
			<edge id='3783' source='com.masshabit.common.InputEventPool: fill()void' target='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void'/>
			<edge id='3784' source='com.masshabit.squibble.HowToScreen: fakeTap()void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='3785' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='java.lang.StringBuilder: append(F)java.lang.StringBuilder'/>
			<edge id='3786' source='com.masshabit.squibble.CheckingLicenseScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='3787' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='android.os.Handler: post(java.lang.Runnable)boolean'/>
			<edge id='3788' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3789' source='com.masshabit.squibble.Player$Hand: restoreState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3790' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='3791' source='com.masshabit.squibble.GameScreen: update(F)void' target='com.masshabit.common.Camera: update(F)void'/>
			<edge id='3792' source='com.masshabit.squibble.free.activity.b.o: b()void' target='android.content.Intent: setFlags(java.lang.Integer)android.content.Intent'/>
			<edge id='3793' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='3794' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='3795' source='com.masshabit.common.physics.Particle: update(F)void' target='com.masshabit.common.physics.Vector2: zero()void'/>
			<edge id='3796' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Particle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,FZF)void'/>
			<edge id='3797' source='com.masshabit.common.entity.StaticEntity: init()void' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='3798' source='com.masshabit.squibble.MainActivity: onResume()void' target='android.app.Activity: onResume()void'/>
			<edge id='3799' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.app.AlertDialog$Builder: setItems([Ljava.lang.CharSequence,android.content.DialogInterface$OnClickListener)android.app.AlertDialog$Builder'/>
			<edge id='3800' source='com.masshabit.squibble.free.activity.b.p: b()void' target='com.masshabit.squibble.free.activity.g: a(J)void'/>
			<edge id='3801' source='com.masshabit.squibble.free.activity.e.q: c(java.lang.String)java.lang.String' target='java.lang.StringBuffer: init()void'/>
			<edge id='3802' source='com.masshabit.squibble.free.activity.e.d: a(DD)void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='3803' source='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: perp()void'/>
			<edge id='3804' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'/>
			<edge id='3805' source='com.masshabit.squibble.free.activity.a.m: d()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3806' source='com.masshabit.squibble.Game$ShowCommandEventPool: fill()void' target='com.masshabit.squibble.Game$ShowCommand: init(com.masshabit.squibble.Game)void'/>
			<edge id='3807' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String'/>
			<edge id='3808' source='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3809' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='3810' source='com.masshabit.squibble.free.activity.Pushable: b(java.util.HashMap)com.masshabit.squibble.free.activity.Pushable' target='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void'/>
			<edge id='3811' source='com.masshabit.common.License: init(android.content.Context)void' target='com.masshabit.common.License$MyCallback: init(com.masshabit.common.License)void'/>
			<edge id='3812' source='com.masshabit.squibble.free.activity.y: onClick(android.view.View)void' target='android.widget.Button: setText(java.lang.CharSequence)void'/>
			<edge id='3813' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3814' source='com.masshabit.squibble.free.activity.b.k: a()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3815' source='com.masshabit.squibble.free.activity.q: run()void' target='android.content.Context: startService(android.content.Intent)android.content.ComponentName'/>
			<edge id='3816' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.URL: init(java.lang.String)void'/>
			<edge id='3817' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.common.Globals: freeMode()boolean'/>
			<edge id='3818' source='com.masshabit.common.physics.CollisionUtils: clinit()void' target='com.masshabit.common.physics.VectorPool: init(java.lang.Integer)void'/>
			<edge id='3819' source='com.masshabit.squibble.NPC: restoreState(android.os.Bundle)void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='3820' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.Map: put(java.lang.Object,java.lang.Object)java.lang.Object'/>
			<edge id='3821' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.Camera: setTarget(FF)void'/>
			<edge id='3822' source='com.android.vending.licensing.ILicensingService$Stub$Proxy: checkLicense(JLjava.lang.String,com.android.vending.licensing.ILicenseResultListener)void' target='com.android.vending.licensing.ILicenseResultListener: asBinder()android.os.IBinder'/>
			<edge id='3823' source='com.masshabit.common.ProfileManagerBase: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3824' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='3825' source='com.masshabit.squibble.UpsellScreen: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3826' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent,java.lang.Integer)void' target='android.view.MotionEvent: getHistoricalX(java.lang.Integer)F'/>
			<edge id='3827' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='3828' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.common.Delay: start(F)void'/>
			<edge id='3829' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='java.lang.Object: init()void'/>
			<edge id='3830' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.t: init(java.lang.String)void'/>
			<edge id='3831' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'/>
			<edge id='3832' source='com.masshabit.squibble.MainView: onKeyUp(ILandroid.view.KeyEvent)boolean' target='java.lang.Thread: sleep(J)void'/>
			<edge id='3833' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void'/>
			<edge id='3834' source='com.masshabit.squibble.free.activity.g: a(J)void' target='java.lang.System: currentTimeMillis()J'/>
			<edge id='3835' source='com.masshabit.common.Deque: get(java.lang.Integer)java.lang.Object' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3836' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='3837' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void' target='com.masshabit.squibble.free.activity.d.c: b()[Lcom.masshabit.squibble.free.activity.d.e'/>
			<edge id='3838' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='3839' source='com.masshabit.squibble.MainActivity: onCreateDialog(java.lang.Integer)android.app.Dialog' target='java.lang.StringBuilder: init()void'/>
			<edge id='3840' source='com.masshabit.common.resource.AnimationLoader: load(java.lang.String,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation' target='java.io.InputStream: close()void'/>
			<edge id='3841' source='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='3842' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='android.os.Bundle: get(java.lang.String)java.lang.Object'/>
			<edge id='3843' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3844' source='com.masshabit.common.Environment: purgeEvents()void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='3845' source='com.masshabit.squibble.free.activity.a.j: d()void' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='3846' source='com.masshabit.squibble.free.activity.a.u: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='3847' source='com.masshabit.squibble.free.activity.a.g: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='3848' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.Camera: move(FF)void'/>
			<edge id='3849' source='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.c: e()java.lang.Integer'/>
			<edge id='3850' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: length()F'/>
			<edge id='3851' source='com.masshabit.common.Environment: create(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void'/>
			<edge id='3852' source='com.android.vending.licensing.ValidationException: init()void' target='java.lang.Exception: init()void'/>
			<edge id='3853' source='com.masshabit.squibble.NPC: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='3854' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='3855' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='java.lang.IllegalArgumentException: init(java.lang.Throwable)void'/>
			<edge id='3856' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3857' source='com.masshabit.common.Clock: dt()F' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='3858' source='com.masshabit.squibble.free.activity.g: run()void' target='java.util.Date: init()void'/>
			<edge id='3859' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3860' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.HttpResponse: getStatusLine()org.apache.http.StatusLine'/>
			<edge id='3861' source='com.masshabit.common.physics.Particle: addForce(FF)void' target='com.masshabit.common.physics.Vector2: add(FF)void'/>
			<edge id='3862' source='com.flurry.android.FlurryAgent: c()void' target='java.io.ByteArrayOutputStream: init()void'/>
			<edge id='3863' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='android.os.Environment: getExternalStorageState()java.lang.String'/>
			<edge id='3864' source='com.masshabit.common.entity.EntityProperties: parse(java.lang.String,java.lang.String,java.lang.String)com.masshabit.common.entity.EntityProperties' target='com.masshabit.common.entity.EntityProperties: init(java.lang.String,java.lang.String)void'/>
			<edge id='3865' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='3866' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='3867' source='com.masshabit.squibble.Player: dragEnd(FF)void' target='com.masshabit.common.physics.CircleParticle: clearImpulse()void'/>
			<edge id='3868' source='com.masshabit.squibble.Game: init()void' target='com.masshabit.squibble.Game: pushScreen(java.lang.Integer)void'/>
			<edge id='3869' source='com.masshabit.squibble.free.activity.e.o: b()void' target='com.masshabit.squibble.free.activity.e.o: c()void'/>
			<edge id='3870' source='com.masshabit.common.curve.CubicBezier: init()void' target='java.lang.Object: init()void'/>
			<edge id='3871' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='com.masshabit.squibble.free.activity.e.k: g()java.lang.String'/>
			<edge id='3872' source='com.masshabit.common.LevelLoader: clinit()void' target='java.util.regex.Pattern: compile(java.lang.String,java.lang.Integer)java.util.regex.Pattern'/>
			<edge id='3873' source='com.android.vending.licensing.LicenseValidator: handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void' target='com.android.vending.licensing.Policy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'/>
			<edge id='3874' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='3875' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='android.content.Intent: setComponent(android.content.ComponentName)android.content.Intent'/>
			<edge id='3876' source='com.masshabit.squibble.Game$ShowCommand: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='3877' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='3878' source='com.masshabit.squibble.ItemEntity: restoreState(android.os.Bundle)void' target='com.masshabit.common.physics.CollisionGroup: remove(com.masshabit.common.physics.Particle)void'/>
			<edge id='3879' source='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3880' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.common.tween.Tween: init(FFF)void'/>
			<edge id='3881' source='com.masshabit.common.Globals: init()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3882' source='com.masshabit.squibble.MenuScreen: update(F)void' target='com.masshabit.common.Camera: update(F)void'/>
			<edge id='3883' source='com.masshabit.squibble.CheckingLicenseScreen$1: init(com.masshabit.squibble.CheckingLicenseScreen,com.masshabit.common.Environment)void' target='java.lang.Object: init()void'/>
			<edge id='3884' source='com.masshabit.common.License: check()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='3885' source='com.masshabit.squibble.free.activity.e.h: run()void' target='android.content.Context: getSystemService(java.lang.String)java.lang.Object'/>
			<edge id='3886' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void' target='android.content.Intent: setComponent(android.content.ComponentName)android.content.Intent'/>
			<edge id='3887' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='android.os.Looper: getMainLooper()android.os.Looper'/>
			<edge id='3888' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='java.util.HashMap: size()java.lang.Integer'/>
			<edge id='3889' source='com.masshabit.common.physics.Particle: addAcceleration(com.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3890' source='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void' target='com.masshabit.squibble.ButtonEntity: setEnabled(boolean)void'/>
			<edge id='3891' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='3892' source='com.masshabit.squibble.free.activity.b.o: b()void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='3893' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3894' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='com.masshabit.squibble.free.activity.e.k: a(android.content.Context,java.lang.String,java.lang.String)void'/>
			<edge id='3895' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B'/>
			<edge id='3896' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='android.content.pm.PackageManager: getServiceInfo(android.content.ComponentName,java.lang.Integer)android.content.pm.ServiceInfo'/>
			<edge id='3897' source='com.masshabit.squibble.MenuScreen: onPrepareDialog(ILandroid.app.Dialog)void' target='android.app.AlertDialog: findViewById(java.lang.Integer)android.view.View'/>
			<edge id='3898' source='com.masshabit.squibble.MainButtonPanel: init()void' target='android.graphics.Matrix: set(android.graphics.Matrix)void'/>
			<edge id='3899' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='3900' source='com.masshabit.squibble.Game: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Screen: onInputEvent(com.masshabit.common.InputEvent)void'/>
			<edge id='3901' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3902' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.r: init(java.lang.String)void'/>
			<edge id='3903' source='com.masshabit.squibble.ItemEntity: saveState(android.os.Bundle)void' target='java.lang.String: format(java.lang.String,[Ljava.lang.Object)java.lang.String'/>
			<edge id='3904' source='com.masshabit.squibble.free.activity.b.h: b()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3905' source='com.masshabit.common.Environment: saveState(android.os.Bundle)void' target='com.masshabit.common.Camera: saveState(android.os.Bundle)void'/>
			<edge id='3906' source='com.masshabit.squibble.R: init()void' target='java.lang.Object: init()void'/>
			<edge id='3907' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: disconnect()void'/>
			<edge id='3908' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File'/>
			<edge id='3909' source='com.masshabit.common.physics.CollisionUtils: closestPointOnSegmentToPoint(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='3910' source='com.masshabit.squibble.WorldMapGraph: dijkstra(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)boolean' target='com.masshabit.squibble.WorldMapPath: getLength()F'/>
			<edge id='3911' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='3912' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3913' source='com.masshabit.common.physics.HalfEdge: set(FFFF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3914' source='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.PlayerSelectPanel: drawChildren(android.graphics.Canvas)void'/>
			<edge id='3915' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='3916' source='com.masshabit.common.License$MyCallback: dontAllow()void' target='java.lang.Thread: sleep(J)void'/>
			<edge id='3917' source='com.android.vending.licensing.util.Base64: encode([BII[BI)[B' target='java.lang.AssertionError: init()void'/>
			<edge id='3918' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='3919' source='com.masshabit.squibble.CameraPositionEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='3920' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='3921' source='com.masshabit.squibble.SplashScreen: proceed()void' target='com.masshabit.common.License: notReadyOrBad()boolean'/>
			<edge id='3922' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='3923' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='org.json.JSONObject: put(java.lang.String,java.lang.Object)org.json.JSONObject'/>
			<edge id='3924' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.r: init(java.lang.String)void'/>
			<edge id='3925' source='com.masshabit.squibble.free.activity.h: d(com.masshabit.squibble.free.activity.h)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='3926' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuffer: init()void'/>
			<edge id='3927' source='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3928' source='com.masshabit.squibble.free.activity.a.q: d()void' target='com.masshabit.squibble.free.activity.a.q: a(java.lang.String,java.lang.String)void'/>
			<edge id='3929' source='com.masshabit.common.physics.Physics: checkParticleCollisions(com.masshabit.common.physics.CollisionGroup,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.CollisionDetector: check(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle)void'/>
			<edge id='3930' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='3931' source='com.masshabit.squibble.free.activity.e.p: a([B)[B' target='javax.crypto.SecretKeyFactory: getInstance(java.lang.String)javax.crypto.SecretKeyFactory'/>
			<edge id='3932' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getDeviceSoftwareVersion()java.lang.String'/>
			<edge id='3933' source='com.android.vending.licensing.util.Base64: clinit()void' target='java.lang.Class: desiredAssertionStatus()boolean'/>
			<edge id='3934' source='com.masshabit.squibble.CreditsScreen: init()void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='3935' source='com.android.vending.licensing.ILicenseResultListener$Stub: asInterface(android.os.IBinder)com.android.vending.licensing.ILicenseResultListener' target='android.os.IBinder: queryLocalInterface(java.lang.String)android.os.IInterface'/>
			<edge id='3936' source='com.android.vending.licensing.AESObfuscator: obfuscate(java.lang.String)java.lang.String' target='java.lang.String: getBytes(java.lang.String)[B'/>
			<edge id='3937' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.m: init(java.lang.String)void'/>
			<edge id='3938' source='com.masshabit.squibble.free.activity.b.g: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='3939' source='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void' target='com.masshabit.common.physics.VectorPool: release(java.lang.Object)void'/>
			<edge id='3940' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getNetworkOperatorName()java.lang.String'/>
			<edge id='3941' source='com.masshabit.squibble.free.activity.a.d: g()android.content.Intent' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3942' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONArray: getJSONObject(java.lang.Integer)org.json.JSONObject'/>
			<edge id='3943' source='com.masshabit.common.resource.BitmapResourceMap: destroy()void' target='android.graphics.Bitmap: recycle()void'/>
			<edge id='3944' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.o: c()void'/>
			<edge id='3945' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String,java.lang.String)void' target='com.masshabit.squibble.free.activity.e.o: b()void'/>
			<edge id='3946' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='android.database.Cursor: close()void'/>
			<edge id='3947' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.URLEncoder: encode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='3948' source='com.masshabit.squibble.WorldMapScreen: init()void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='3949' source='com.masshabit.common.Environment: purgeEvents()void' target='java.util.ArrayList: clear()void'/>
			<edge id='3950' source='com.masshabit.squibble.Game$5: onMenuItemClick(android.view.MenuItem)boolean' target='android.app.Activity: showDialog(java.lang.Integer)void'/>
			<edge id='3951' source='com.flurry.android.f: init(B)void' target='java.lang.Object: init()void'/>
			<edge id='3952' source='com.masshabit.common.Camera: update(F)void' target='com.masshabit.common.Util: clamp(FFF)F'/>
			<edge id='3953' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'/>
			<edge id='3954' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='com.masshabit.squibble.free.activity.h: finish()void'/>
			<edge id='3955' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.net.URLDecoder: decode(java.lang.String)java.lang.String'/>
			<edge id='3956' source='com.masshabit.squibble.WorldMapPlayer: update(F)void' target='com.masshabit.common.curve.PolyCubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='3957' source='com.masshabit.squibble.free.activity.e.k: i()java.lang.String' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3958' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='3959' source='com.masshabit.squibble.UpsellScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3960' source='com.masshabit.squibble.PlayerSelectPanel: enterNameYes(java.lang.String)void' target='com.masshabit.squibble.ProfileManager: saveProfile()void'/>
			<edge id='3961' source='com.masshabit.squibble.free.activity.e.k: j()void' target='java.util.Vector: init()void'/>
			<edge id='3962' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void'/>
			<edge id='3963' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='3964' source='com.android.vending.licensing.util.Base64: decodeWebSafe(java.lang.String)[B' target='java.lang.String: getBytes()[B'/>
			<edge id='3965' source='com.masshabit.common.Camera: restoreState(android.os.Bundle)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='3966' source='com.masshabit.squibble.EntityFactory: create(java.lang.String,org.w3c.dom.Element)com.masshabit.common.entity.Entity' target='com.masshabit.squibble.CameraPositionEntity: init()void'/>
			<edge id='3967' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='3968' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='android.graphics.BitmapFactory: decodeFile(java.lang.String)android.graphics.Bitmap'/>
			<edge id='3969' source='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='3970' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.Game: changeScreen(java.lang.Integer)void'/>
			<edge id='3971' source='com.masshabit.squibble.MainActivity: onStart()void' target='android.app.Activity: onStart()void'/>
			<edge id='3972' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='3973' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='3974' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.StringBuilder: append(J)java.lang.StringBuilder'/>
			<edge id='3975' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='3976' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='3977' source='com.masshabit.squibble.GameScreen: playerWon()void' target='java.util.HashMap: init()void'/>
			<edge id='3978' source='com.masshabit.squibble.SplashScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.SplashScreen: proceed()void'/>
			<edge id='3979' source='com.masshabit.squibble.ItemEntity: saveState(android.os.Bundle)void' target='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'/>
			<edge id='3980' source='com.android.vending.licensing.AESObfuscator: unobfuscate(java.lang.String)java.lang.String' target='java.lang.String: indexOf(java.lang.String)java.lang.Integer'/>
			<edge id='3981' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.io.File: init(java.lang.String)void'/>
			<edge id='3982' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='3983' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapPlayer: findLocation()void'/>
			<edge id='3984' source='com.flurry.android.FlurryAgent: a(android.content.Context,java.lang.String)void' target='com.flurry.android.d: init()void'/>
			<edge id='3985' source='com.masshabit.squibble.CreditsScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3986' source='com.android.vending.licensing.util.Base64DecoderException: init(java.lang.String)void' target='java.lang.Exception: init(java.lang.String)void'/>
			<edge id='3987' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='java.lang.Throwable: getMessage()java.lang.String'/>
			<edge id='3988' source='com.masshabit.squibble.MainActivity: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.MainActivity: findViewById(java.lang.Integer)android.view.View'/>
			<edge id='3989' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.common.Camera: setTarget(com.masshabit.common.physics.Vector2)void'/>
			<edge id='3990' source='com.masshabit.squibble.free.activity.e.d: a([D)boolean' target='android.location.LocationManager: getLastKnownLocation(java.lang.String)android.location.Location'/>
			<edge id='3991' source='com.masshabit.squibble.free.activity.g: run()void' target='java.util.HashMap: init()void'/>
			<edge id='3992' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.squibble.ProfileManager: getProfile()com.masshabit.common.ProfileManagerBase$PlayerProfile'/>
			<edge id='3993' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: e()java.lang.String'/>
			<edge id='3994' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.c)void'/>
			<edge id='3995' source='com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode: valueOf(java.lang.String)com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode' target='java.lang.Enum: valueOf(java.lang.Class,java.lang.String)java.lang.Enum'/>
			<edge id='3996' source='com.masshabit.common.Globals: clinit()void' target='java.util.Set: add(java.lang.Object)boolean'/>
			<edge id='3997' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuilder: init()void'/>
			<edge id='3998' source='com.masshabit.squibble.MenuScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='3999' source='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='4000' source='com.masshabit.squibble.free.activity.e.o: a(java.lang.String,java.lang.String)boolean' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='4001' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.lang.StringBuilder: append(java.lang.Object)java.lang.StringBuilder'/>
			<edge id='4002' source='com.masshabit.squibble.free.activity.l: run()void' target='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void'/>
			<edge id='4003' source='com.masshabit.common.Globals: paidMode()boolean' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='4004' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.String: trim()java.lang.String'/>
			<edge id='4005' source='com.flurry.android.FlurryAgent: a([BLjava.lang.String)boolean' target='org.apache.http.impl.client.DefaultHttpClient: init()void'/>
			<edge id='4006' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='4007' source='com.masshabit.squibble.free.activity.g: processSTARTAction()void' target='com.masshabit.squibble.free.activity.g: a(com.masshabit.squibble.free.activity.o)void'/>
			<edge id='4008' source='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B' target='java.lang.String: getBytes()[B'/>
			<edge id='4009' source='com.masshabit.squibble.Profile: init()void' target='java.util.HashMap: init(java.lang.Integer)void'/>
			<edge id='4010' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='android.content.ComponentName: init(android.content.Context,java.lang.Class)void'/>
			<edge id='4011' source='com.masshabit.squibble.WorldMapPlayer: getDistance(com.masshabit.squibble.WorldMapNode,com.masshabit.squibble.WorldMapNode)F' target='com.masshabit.squibble.WorldMapNode: findConnection(java.lang.Integer)java.lang.Integer'/>
			<edge id='4012' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='4013' source='com.masshabit.squibble.WorldMapScreen: onMutedChanged(boolean)void' target='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void'/>
			<edge id='4014' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='android.app.PendingIntent: getActivity(android.content.Context,ILandroid.content.Intent,java.lang.Integer)android.app.PendingIntent'/>
			<edge id='4015' source='com.masshabit.common.Environment: showDialog(java.lang.Integer)void' target='android.os.Handler: sendMessage(android.os.Message)boolean'/>
			<edge id='4016' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.Float: valueOf(F)java.lang.Float'/>
			<edge id='4017' source='com.masshabit.squibble.Game: tweenComplete(java.lang.Object)void' target='com.masshabit.squibble.Game: newScreen(java.lang.Integer)com.masshabit.squibble.Screen'/>
			<edge id='4018' source='com.masshabit.squibble.Profile: load(org.json.JSONObject)void' target='org.json.JSONArray: length()java.lang.Integer'/>
			<edge id='4019' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='java.lang.Math: round(F)java.lang.Integer'/>
			<edge id='4020' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.Abstract: d()void'/>
			<edge id='4021' source='com.masshabit.common.physics.Physics: reset()void' target='java.util.ArrayList: clear()void'/>
			<edge id='4022' source='com.masshabit.squibble.free.activity.g: a(java.lang.Integer)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='4023' source='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFFI)void' target='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFI)void'/>
			<edge id='4024' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.SegmentParticle: getPoint2(com.masshabit.common.physics.Vector2)void'/>
			<edge id='4025' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4026' source='com.masshabit.squibble.free.activity.e: d()java.lang.String' target='android.os.Bundle: getString(java.lang.String)java.lang.String'/>
			<edge id='4027' source='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='4028' source='com.masshabit.common.Environment: init()void' target='android.os.Bundle: getInt(java.lang.String)java.lang.Integer'/>
			<edge id='4029' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='4030' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='android.app.ActivityManager: getRunningAppProcesses()java.util.List'/>
			<edge id='4031' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.text.SimpleDateFormat: parse(java.lang.String)java.util.Date'/>
			<edge id='4032' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Camera: setTarget(FF)void'/>
			<edge id='4033' source='com.masshabit.squibble.GameScreen: init()void' target='com.masshabit.common.Level: init()void'/>
			<edge id='4034' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='com.masshabit.squibble.free.activity.i: start()void'/>
			<edge id='4035' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: setAntiAlias(boolean)void'/>
			<edge id='4036' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='com.masshabit.common.physics.CollisionGroup: add(com.masshabit.common.physics.Particle)void'/>
			<edge id='4037' source='com.masshabit.common.Camera: setTarget(FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='4038' source='com.android.vending.licensing.NullDeviceLimiter: init()void' target='java.lang.Object: init()void'/>
			<edge id='4039' source='com.masshabit.squibble.free.activity.c: c()boolean' target='com.masshabit.squibble.free.activity.a.Abstract: b()boolean'/>
			<edge id='4040' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.common.resource.AnimationResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='4041' source='com.masshabit.squibble.Player: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='4042' source='com.masshabit.squibble.PlayerSelectPanel: init()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='4043' source='com.masshabit.squibble.NPC: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: concat(android.graphics.Matrix)void'/>
			<edge id='4044' source='com.masshabit.squibble.MenuScreen: init()void' target='com.masshabit.common.Level: init()void'/>
			<edge id='4045' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='java.util.HashMap: clear()void'/>
			<edge id='4046' source='com.masshabit.squibble.free.activity.a.t: init()void' target='java.lang.Object: init()void'/>
			<edge id='4047' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='android.content.Intent: init(java.lang.String)void'/>
			<edge id='4048' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.c: d()com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='4049' source='com.masshabit.common.physics.CollisionGroup: remove(com.masshabit.common.physics.Particle)void' target='java.util.ArrayList: remove(java.lang.Object)boolean'/>
			<edge id='4050' source='com.masshabit.squibble.free.activity.e.l: a(java.lang.String)boolean' target='java.net.HttpURLConnection: getResponseCode()java.lang.Integer'/>
			<edge id='4051' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.curve.CurveParser: parse(java.lang.String)com.masshabit.common.curve.PolyCubicBezier'/>
			<edge id='4052' source='com.masshabit.common.tween.Ease: init()void' target='java.lang.Object: init()void'/>
			<edge id='4053' source='com.masshabit.common.Deque: set(ILjava.lang.Object)void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='4054' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.Exception: init(java.lang.String)void'/>
			<edge id='4055' source='com.masshabit.squibble.free.activity.Pushable: i()java.lang.Integer' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='4056' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='org.json.JSONObject: init()void'/>
			<edge id='4057' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.String: replace(java.lang.CharSequence,java.lang.CharSequence)java.lang.String'/>
			<edge id='4058' source='com.masshabit.common.entity.StaticEntity: init()void' target='com.masshabit.common.resource.BitmapResourceMap: get(java.lang.Integer)java.lang.Object'/>
			<edge id='4059' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.CircleParticle: getRadius()F'/>
			<edge id='4060' source='com.masshabit.squibble.free.activity.a.k: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='4061' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.common.LevelLoader: init(com.masshabit.common.Level,com.masshabit.common.entity.IEntityFactory)void'/>
			<edge id='4062' source='com.masshabit.squibble.free.activity.f: onReceive(android.content.Context,android.content.Intent)void' target='com.masshabit.squibble.free.activity.f: abortBroadcast()void'/>
			<edge id='4063' source='com.masshabit.squibble.free.activity.b.h: b()void' target='android.database.Cursor: moveToNext()boolean'/>
			<edge id='4064' source='com.masshabit.squibble.PlayerSelectPanel: setSlotLabels()void' target='com.masshabit.squibble.ProfileManager: setCurrentProfile(java.lang.Integer)void'/>
			<edge id='4065' source='com.masshabit.squibble.Game: saveState(android.os.Bundle)void' target='android.os.Bundle: putInt(java.lang.String,java.lang.Integer)void'/>
			<edge id='4066' source='com.masshabit.squibble.free.activity.e: onDestroy()void' target='com.masshabit.squibble.free.activity.e: startService(android.content.Intent)android.content.ComponentName'/>
			<edge id='4067' source='com.masshabit.common.physics.CircleParticle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='4068' source='com.masshabit.common.Environment: enqueueKeyEvent(android.view.KeyEvent)void' target='com.masshabit.common.InputEventPool: getAvailable()java.lang.Integer'/>
			<edge id='4069' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.util.Timer: cancel()void'/>
			<edge id='4070' source='com.masshabit.common.physics.ConvexHull: init(com.masshabit.common.physics.Physics,Z[Lcom.masshabit.common.physics.Vector2)void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4071' source='com.masshabit.squibble.free.activity.e.q: a(java.io.File,java.lang.String)void' target='java.util.zip.ZipInputStream: init(java.io.InputStream)void'/>
			<edge id='4072' source='com.masshabit.squibble.MainView: onTouchEvent(android.view.MotionEvent)boolean' target='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void'/>
			<edge id='4073' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ButtonEntity: checkTap(FF)boolean'/>
			<edge id='4074' source='com.masshabit.squibble.free.activity.q: init(android.content.Context)void' target='java.lang.Thread: init()void'/>
			<edge id='4075' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.a: a()void'/>
			<edge id='4076' source='com.masshabit.squibble.GameScreen$1: onClick(android.content.DialogInterface,java.lang.Integer)void' target='java.util.HashMap: init()void'/>
			<edge id='4077' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='javax.xml.parsers.DocumentBuilderFactory: newDocumentBuilder()javax.xml.parsers.DocumentBuilder'/>
			<edge id='4078' source='com.masshabit.squibble.HowToScreen: nextStep()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='4079' source='com.masshabit.squibble.WorldMapNode: setState(java.lang.Integer)void' target='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void'/>
			<edge id='4080' source='com.masshabit.squibble.ProfileManager: create(android.content.Context)com.masshabit.squibble.ProfileManager' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='4081' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.graphics.Paint: init()void'/>
			<edge id='4082' source='com.masshabit.squibble.Game: init()void' target='android.os.Bundle: getBoolean(java.lang.String,boolean)boolean'/>
			<edge id='4083' source='com.masshabit.squibble.free.activity.e.b: b(java.lang.String)boolean' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='4084' source='com.masshabit.squibble.free.activity.a.m: c()boolean' target='android.content.Context: getResources()android.content.res.Resources'/>
			<edge id='4085' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: g()android.content.Intent'/>
			<edge id='4086' source='com.android.vending.licensing.ServerManagedPolicy: decodeExtras(java.lang.String)java.util.Map' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4087' source='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void' target='com.masshabit.common.resource.AnimationState: setTrack(java.lang.String)void'/>
			<edge id='4088' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='4089' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.location.Criteria: init()void'/>
			<edge id='4090' source='com.masshabit.squibble.MainActivity$1: init(com.masshabit.squibble.MainActivity,[Ljava.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='4091' source='com.masshabit.squibble.WorldMapScreen: update(F)void' target='com.masshabit.common.Layer: update(F)void'/>
			<edge id='4092' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.h: startActivity(android.content.Intent)void'/>
			<edge id='4093' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4094' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuffer: init()void'/>
			<edge id='4095' source='com.masshabit.common.Delay: saveState(java.lang.String,android.os.Bundle)void' target='android.os.Bundle: putFloat(java.lang.String,F)void'/>
			<edge id='4096' source='com.masshabit.squibble.free.activity.x: onClick(android.view.View)void' target='com.masshabit.squibble.free.activity.h: b(com.masshabit.squibble.free.activity.h)java.lang.String'/>
			<edge id='4097' source='com.masshabit.common.Environment: showDialog(java.lang.Integer)void' target='android.os.Handler: obtainMessage(III)android.os.Message'/>
			<edge id='4098' source='com.masshabit.squibble.free.activity.b.u: a()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='4099' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.security.Signature: initVerify(java.security.PublicKey)void'/>
			<edge id='4100' source='com.android.vending.licensing.LicenseChecker: checkAccess(com.android.vending.licensing.LicenseCheckerCallback)void' target='android.util.Log: e(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4101' source='com.masshabit.common.LevelLoader: readCollisionLayer(org.w3c.dom.Element,com.masshabit.common.physics.CollisionGroup)void' target='org.w3c.dom.Element: getChildNodes()org.w3c.dom.NodeList'/>
			<edge id='4102' source='com.masshabit.common.physics.CollisionUtils: testSegmentCircle(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)boolean' target='com.masshabit.common.physics.CircleParticle: getRadiusSq()F'/>
			<edge id='4103' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='4104' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='android.widget.Toast: makeText(android.content.Context,java.lang.CharSequence,java.lang.Integer)android.widget.Toast'/>
			<edge id='4105' source='com.masshabit.squibble.HowToScreen: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='4106' source='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.Screen: draw(android.graphics.Canvas)void'/>
			<edge id='4107' source='com.masshabit.squibble.free.R$array: init()void' target='java.lang.Object: init()void'/>
			<edge id='4108' source='com.masshabit.squibble.free.activity.b.v: b()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4109' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='4110' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getSimState()java.lang.Integer'/>
			<edge id='4111' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='android.app.AlertDialog$Builder: setTitle(java.lang.CharSequence)android.app.AlertDialog$Builder'/>
			<edge id='4112' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.ContentValues: init()void'/>
			<edge id='4113' source='com.masshabit.squibble.WorldMapHud: setData(com.masshabit.squibble.WorldMapNode)void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='4114' source='com.masshabit.squibble.Game: init()void' target='android.content.SharedPreferences: getBoolean(java.lang.String,boolean)boolean'/>
			<edge id='4115' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.util.HashMap: init()void'/>
			<edge id='4116' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.String: getBytes()[B'/>
			<edge id='4117' source='com.masshabit.squibble.MainActivity: onSaveInstanceState(android.os.Bundle)void' target='android.app.Activity: onSaveInstanceState(android.os.Bundle)void'/>
			<edge id='4118' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.io.OutputStream: close()void'/>
			<edge id='4119' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.String: substring(II)java.lang.String'/>
			<edge id='4120' source='com.masshabit.squibble.MuteEntity: toggle()void' target='com.masshabit.common.Environment: isMuted()boolean'/>
			<edge id='4121' source='com.masshabit.squibble.free.activity.e: onCreate()void' target='java.lang.Class: forName(java.lang.String)java.lang.Class'/>
			<edge id='4122' source='com.masshabit.squibble.free.activity.a.Abstract: writeToParcel(android.os.Parcel,java.lang.Integer)void' target='android.os.Parcel: writeString(java.lang.String)void'/>
			<edge id='4123' source='com.masshabit.squibble.free.activity.d.d: init(java.lang.String,java.lang.Object)void' target='java.lang.Class: getDeclaredMethod(java.lang.String,[Ljava.lang.Class)java.lang.reflect.Method'/>
			<edge id='4124' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='4125' source='com.masshabit.common.Level: registerGeometry()void' target='java.util.HashSet: add(java.lang.Object)boolean'/>
			<edge id='4126' source='com.masshabit.common.License$MyCallback: init(com.masshabit.common.License)void' target='java.lang.Object: init()void'/>
			<edge id='4127' source='com.masshabit.squibble.CreditsScreen: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='4128' source='com.masshabit.squibble.ButtonEntity: init()void' target='com.masshabit.squibble.ButtonEntity: initChildren()void'/>
			<edge id='4129' source='com.masshabit.squibble.free.activity.a.d: c()boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='4130' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String)void' target='android.telephony.SmsManager: sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void'/>
			<edge id='4131' source='com.masshabit.squibble.Profile: setLevelComplete(java.lang.String,F)void' target='com.masshabit.squibble.Profile$CompletedLevel: init(java.lang.String,F)void'/>
			<edge id='4132' source='com.masshabit.squibble.free.activity.b.g: b()void' target='com.masshabit.squibble.free.activity.e.k: c()java.lang.String'/>
			<edge id='4133' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.squibble.Player: setState(java.lang.Integer)void'/>
			<edge id='4134' source='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='4135' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.util.Collections: emptyMap()java.util.Map'/>
			<edge id='4136' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4137' source='com.masshabit.squibble.free.activity.e.o: c()void' target='com.masshabit.squibble.free.activity.e.b: a(java.lang.String,java.lang.String)void'/>
			<edge id='4138' source='com.flurry.android.FlurryAgent: g()void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4139' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='4140' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.io.IOException: printStackTrace()void'/>
			<edge id='4141' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.DataInputStream: init(java.io.InputStream)void'/>
			<edge id='4142' source='com.masshabit.squibble.MuteEntity: onMutedChanged(boolean)void' target='com.masshabit.common.Environment: isMuted()boolean'/>
			<edge id='4143' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='java.security.Signature: update([B)void'/>
			<edge id='4144' source='com.masshabit.squibble.free.activity.e.o: a()void' target='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String'/>
			<edge id='4145' source='com.masshabit.squibble.MainActivity: createWarpDialog()android.app.Dialog' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4146' source='com.masshabit.common.curve.PolyCubicBezier: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4147' source='com.flurry.android.FlurryAgent: g()void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String,java.lang.Throwable)java.lang.Integer'/>
			<edge id='4148' source='com.masshabit.squibble.Player: setVelocity(FF)void' target='com.masshabit.common.physics.CircleParticle: setVelocity(FF)void'/>
			<edge id='4149' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4150' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.Flog: c(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4151' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void'/>
			<edge id='4152' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.e: init()void'/>
			<edge id='4153' source='com.masshabit.squibble.free.activity.e.o: a()void' target='java.lang.Long: parseLong(java.lang.String)J'/>
			<edge id='4154' source='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean' target='java.lang.StringBuilder: init()void'/>
			<edge id='4155' source='com.masshabit.common.Level: destroy()void' target='java.util.ArrayList: clear()void'/>
			<edge id='4156' source='com.masshabit.common.Camera: saveState(android.os.Bundle)void' target='android.os.Bundle: putFloat(java.lang.String,F)void'/>
			<edge id='4157' source='com.masshabit.squibble.SplashScreen: init()void' target='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'/>
			<edge id='4158' source='com.masshabit.common.Environment: setFocused(boolean)void' target='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void'/>
			<edge id='4159' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: b()java.lang.String'/>
			<edge id='4160' source='com.masshabit.common.curve.CurveParser: processCommand(com.masshabit.common.curve.PolyCubicBezier,java.lang.Character,java.lang.Character,java.util.ArrayList)void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='4161' source='com.masshabit.squibble.TextEntity: init(java.lang.String,IF)void' target='android.graphics.Paint: setTextSize(F)void'/>
			<edge id='4162' source='com.masshabit.squibble.HowToScreen: init()void' target='com.masshabit.common.InputEvent: init(com.masshabit.common.InputEventPool)void'/>
			<edge id='4163' source='com.masshabit.common.physics.CollisionDetector: circleVsSegment(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.SegmentParticle,boolean)boolean' target='com.masshabit.common.physics.CollisionResolver: resolve(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,com.masshabit.common.physics.Vector2,F)void'/>
			<edge id='4164' source='com.masshabit.squibble.WorldMapPath: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='4165' source='com.masshabit.common.Environment: setMuted(boolean)void' target='java.lang.StringBuilder: append(boolean)java.lang.StringBuilder'/>
			<edge id='4166' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.e.k: d()java.lang.String'/>
			<edge id='4167' source='com.flurry.android.FlurryAgent: a(java.lang.Throwable)void' target='com.flurry.android.FlurryAgent: onError(java.lang.String,java.lang.String,java.lang.String)void'/>
			<edge id='4168' source='com.masshabit.common.physics.Physics: registerParticle(com.masshabit.common.physics.Particle)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='4169' source='com.masshabit.squibble.Player: update(F)void' target='com.masshabit.common.resource.AnimationState: isTrackDone()boolean'/>
			<edge id='4170' source='com.android.vending.licensing.LicenseChecker: handleServiceConnectionError(com.android.vending.licensing.LicenseValidator)void' target='com.android.vending.licensing.Policy: processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData)void'/>
			<edge id='4171' source='com.masshabit.squibble.free.activity.c: a(android.content.Context)boolean' target='com.masshabit.squibble.free.activity.a.Abstract: a(android.content.Context)void'/>
			<edge id='4172' source='com.masshabit.squibble.free.activity.b.u: b()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='4173' source='com.masshabit.common.Environment: surfaceReady(android.view.SurfaceHolder,FF)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='4174' source='com.masshabit.squibble.free.activity.e.f: onLocationChanged(android.location.Location)void' target='com.masshabit.squibble.free.activity.e.d: a(DD)void'/>
			<edge id='4175' source='com.masshabit.squibble.free.R$attr: init()void' target='java.lang.Object: init()void'/>
			<edge id='4176' source='com.masshabit.squibble.free.activity.e.k: d()java.lang.String' target='com.masshabit.squibble.free.activity.e: d()java.lang.String'/>
			<edge id='4177' source='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' target='java.lang.Long: longValue()J'/>
			<edge id='4178' source='com.masshabit.common.physics.HalfEdge: init(com.masshabit.common.physics.Physics,FFFFZ)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='4179' source='com.masshabit.squibble.free.activity.q: run()void' target='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean'/>
			<edge id='4180' source='com.masshabit.common.Globals: init()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4181' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.Flog: b(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4182' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='4183' source='com.masshabit.common.physics.Vector2: length()F' target='com.masshabit.common.physics.Vector2: lengthSq()F'/>
			<edge id='4184' source='com.masshabit.squibble.free.activity.e.k: m()void' target='com.masshabit.squibble.free.activity.e.k: l()void'/>
			<edge id='4185' source='com.masshabit.common.License$MyCallback: allow()void' target='java.lang.InterruptedException: printStackTrace()void'/>
			<edge id='4186' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.String: toCharArray()[C'/>
			<edge id='4187' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='4188' source='com.masshabit.squibble.free.activity.e.p: b([B)[B' target='javax.crypto.SecretKeyFactory: generateSecret(java.security.spec.KeySpec)javax.crypto.SecretKey'/>
			<edge id='4189' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='4190' source='com.masshabit.common.curve.CubicBezier: estimateLength()void' target='com.masshabit.common.curve.CubicBezier: evaluate(FLcom.masshabit.common.physics.Vector2)void'/>
			<edge id='4191' source='com.masshabit.squibble.WorldMapNode: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4192' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='com.masshabit.squibble.free.activity.a: init(java.util.HashMap)void'/>
			<edge id='4193' source='com.masshabit.squibble.HowToScreen: update(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='4194' source='com.masshabit.squibble.StoryScreen: init()void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4195' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='4196' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4197' source='com.masshabit.common.InputEvent: release()void' target='com.masshabit.common.InputEventPool: release(java.lang.Object)void'/>
			<edge id='4198' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4199' source='com.masshabit.common.physics.CollisionUtils: init()void' target='java.lang.Object: init()void'/>
			<edge id='4200' source='com.masshabit.squibble.free.activity.e.c: a(java.lang.String,java.lang.String)boolean' target='android.content.Context: getContentResolver()android.content.ContentResolver'/>
			<edge id='4201' source='com.masshabit.common.physics.CollisionGroup: init(II)void' target='java.util.ArrayList: init(java.lang.Integer)void'/>
			<edge id='4202' source='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String' target='android.content.SharedPreferences: getString(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='4203' source='com.masshabit.squibble.free.R$layout: init()void' target='java.lang.Object: init()void'/>
			<edge id='4204' source='com.masshabit.squibble.WorldMapPlayer: tweenComplete(java.lang.Object)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4205' source='com.android.vending.licensing.ResponseData: toString()java.lang.String' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='4206' source='com.masshabit.squibble.free.activity.a.o: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='4207' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.io.ByteArrayOutputStream: init()void'/>
			<edge id='4208' source='com.masshabit.squibble.Player$Hand: saveState(android.os.Bundle,java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4209' source='com.masshabit.squibble.free.activity.w: shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)boolean' target='com.masshabit.squibble.free.activity.h: b(boolean)boolean'/>
			<edge id='4210' source='com.masshabit.squibble.Player: setGrapple(com.masshabit.common.physics.Particle,FF)void' target='com.masshabit.common.physics.Vector2: set(FF)void'/>
			<edge id='4211' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.io.IOException: init(java.lang.String)void'/>
			<edge id='4212' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.InputStream: close()void'/>
			<edge id='4213' source='com.masshabit.squibble.free.activity.b.l: c()boolean' target='java.util.Date: init()void'/>
			<edge id='4214' source='com.android.vending.licensing.LicenseChecker$ResultListener: verifyLicense(ILjava.lang.String,java.lang.String)void' target='com.android.vending.licensing.LicenseChecker: access$600(com.android.vending.licensing.LicenseChecker)android.os.Handler'/>
			<edge id='4215' source='com.masshabit.common.physics.CollisionResolver: init()void' target='java.lang.Object: init()void'/>
			<edge id='4216' source='com.masshabit.squibble.free.activity.j: run()void' target='java.io.InputStream: read()java.lang.Integer'/>
			<edge id='4217' source='com.android.vending.licensing.ServerManagedPolicy: init(android.content.Context,com.android.vending.licensing.Obfuscator)void' target='com.android.vending.licensing.PreferenceObfuscator: getString(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='4218' source='com.masshabit.squibble.free.activity.a.c: c()boolean' target='android.content.ContentValues: put(java.lang.String,java.lang.Integer)void'/>
			<edge id='4219' source='com.masshabit.squibble.free.activity.b.e: a(java.lang.String,java.lang.String)com.masshabit.squibble.free.activity.b.a' target='com.masshabit.squibble.free.activity.b.k: init(java.lang.String)void'/>
			<edge id='4220' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='4221' source='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFI)void' target='java.lang.Math: sqrt(D)D'/>
			<edge id='4222' source='com.masshabit.squibble.PositionEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='4223' source='com.masshabit.squibble.free.activity.d.e: init(java.lang.Object,com.masshabit.squibble.free.activity.d.d,com.masshabit.squibble.free.activity.d.d,[Lcom.masshabit.squibble.free.activity.d.b)void' target='java.lang.Object: init()void'/>
			<edge id='4224' source='com.masshabit.squibble.free.activity.d.d: init()void' target='java.lang.Object: init()void'/>
			<edge id='4225' source='com.masshabit.squibble.free.activity.a.o: d()void' target='java.net.URLDecoder: decode(java.lang.String,java.lang.String)java.lang.String'/>
			<edge id='4226' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='com.flurry.android.Flog: a(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4227' source='com.masshabit.squibble.MenuScreen$2: onClick(android.content.DialogInterface,java.lang.Integer)void' target='com.masshabit.squibble.PlayerSelectPanel: enterNameNo()void'/>
			<edge id='4228' source='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String' target='java.lang.StringBuffer: toString()java.lang.String'/>
			<edge id='4229' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.physics.Vector2: set(com.masshabit.common.physics.Vector2)void'/>
			<edge id='4230' source='com.masshabit.squibble.WorldMapPlayer: findLocation()void' target='junit.framework.Assert: assertTrue(java.lang.String,boolean)void'/>
			<edge id='4231' source='com.masshabit.squibble.Player: init()void' target='com.masshabit.common.physics.Physics: registerConstraint(com.masshabit.common.physics.Constraint)void'/>
			<edge id='4232' source='com.masshabit.common.physics.Physics: rayCastQuery(com.masshabit.common.physics.CollisionGroup,FFFFLcom.masshabit.common.physics.Physics$RayCastResult)void' target='java.util.ArrayList: get(java.lang.Integer)java.lang.Object'/>
			<edge id='4233' source='com.masshabit.squibble.free.activity.b.m: b()void' target='com.masshabit.squibble.free.activity.e.q: a(java.lang.String)java.lang.String'/>
			<edge id='4234' source='com.masshabit.squibble.R$attr: init()void' target='java.lang.Object: init()void'/>
			<edge id='4235' source='com.android.vending.licensing.util.Base64: decode([BII[B)[B' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4236' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='java.lang.Object: init()void'/>
			<edge id='4237' source='com.masshabit.squibble.free.activity.e.k: init(com.masshabit.squibble.free.activity.e)void' target='android.telephony.TelephonyManager: getPhoneType()java.lang.Integer'/>
			<edge id='4238' source='com.android.vending.licensing.ResponseData: parse(java.lang.String)com.android.vending.licensing.ResponseData' target='android.text.TextUtils: split(java.lang.String,java.lang.String)[Ljava.lang.String'/>
			<edge id='4239' source='com.masshabit.squibble.MainView: init(android.content.Context,android.util.AttributeSet)void' target='com.masshabit.squibble.MainView: setKeepScreenOn(boolean)void'/>
			<edge id='4240' source='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean' target='java.util.Set: contains(java.lang.Object)boolean'/>
			<edge id='4241' source='com.masshabit.common.Environment: enqueueTouchEvent(android.view.MotionEvent)void' target='java.util.ArrayList: add(java.lang.Object)boolean'/>
			<edge id='4242' source='com.masshabit.squibble.free.activity.e.l: init(java.lang.String,java.lang.String,com.masshabit.squibble.free.activity.e.m,java.lang.Integer)void' target='java.lang.Thread: init()void'/>
			<edge id='4243' source='com.masshabit.squibble.free.activity.g: init(com.masshabit.squibble.free.activity.e)void' target='com.masshabit.squibble.free.activity.d.c: init([Lcom.masshabit.squibble.free.activity.d.e)void'/>
			<edge id='4244' source='com.masshabit.common.License$MyCallback: allow()void' target='android.os.SystemClock: uptimeMillis()J'/>
			<edge id='4245' source='com.masshabit.squibble.free.activity.b.l: b()void' target='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void'/>
			<edge id='4246' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='java.io.FileOutputStream: close()void'/>
			<edge id='4247' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='org.w3c.dom.NodeList: item(java.lang.Integer)org.w3c.dom.Node'/>
			<edge id='4248' source='com.masshabit.squibble.Profile: save(org.json.JSONObject)void' target='java.util.Iterator: hasNext()boolean'/>
			<edge id='4249' source='com.masshabit.common.LevelLoader: readMatrix(java.lang.String,android.graphics.Matrix)boolean' target='android.graphics.Matrix: setValues([F)void'/>
			<edge id='4250' source='com.android.vending.licensing.ServerManagedPolicy: setRetryCount(J)void' target='java.lang.Long: toString(J)java.lang.String'/>
			<edge id='4251' source='com.android.vending.licensing.util.Base64: decode(java.lang.String)[B' target='com.android.vending.licensing.util.Base64: decode([BII)[B'/>
			<edge id='4252' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='4253' source='com.masshabit.squibble.UpsellScreen: update(F)void' target='com.masshabit.common.Camera: update(F)void'/>
			<edge id='4254' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='4255' source='com.android.vending.licensing.AESObfuscator: init([BLjava.lang.String,java.lang.String)void' target='javax.crypto.spec.PBEKeySpec: init([C[BII)void'/>
			<edge id='4256' source='com.masshabit.common.physics.VectorPool: init()void' target='com.masshabit.common.ObjectPool: init()void'/>
			<edge id='4257' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.common.Delay: init(com.masshabit.common.Delay$IDelayCompleteListener)void'/>
			<edge id='4258' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.net.HttpURLConnection: setDoInput(boolean)void'/>
			<edge id='4259' source='com.masshabit.squibble.MainButtonPanel: init()void' target='com.masshabit.common.tween.Tween: init(com.masshabit.common.tween.ITweenCompleteListener,com.masshabit.common.tween.Ease$EaseBase)void'/>
			<edge id='4260' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.k: init(java.lang.String)void'/>
			<edge id='4261' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void'/>
			<edge id='4262' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.squibble.WorldMapPath: getLength()F'/>
			<edge id='4263' source='com.masshabit.squibble.free.activity.b.q: a()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='4264' source='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void'/>
			<edge id='4265' source='com.android.vending.licensing.LicenseChecker: generatePublicKey(java.lang.String)java.security.PublicKey' target='java.security.KeyFactory: generatePublic(java.security.spec.KeySpec)java.security.PublicKey'/>
			<edge id='4266' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='com.masshabit.squibble.free.activity.e.k: f()java.lang.String'/>
			<edge id='4267' source='com.masshabit.squibble.WorldMapNode: setTrack(java.lang.String)void' target='com.masshabit.common.Globals: isLevelIncluded(java.lang.String)boolean'/>
			<edge id='4268' source='com.masshabit.squibble.free.activity.a.g: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='4269' source='com.masshabit.squibble.ItemEntity: init()void' target='com.masshabit.common.entity.Entity: init()void'/>
			<edge id='4270' source='com.masshabit.squibble.free.activity.n: clinit()void' target='com.masshabit.squibble.free.activity.n: init(java.lang.String,java.lang.Integer)void'/>
			<edge id='4271' source='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' target='java.lang.Long: valueOf(J)java.lang.Long'/>
			<edge id='4272' source='com.masshabit.squibble.free.activity.a.n: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.Abstract: init(java.lang.String)void'/>
			<edge id='4273' source='com.masshabit.squibble.Player: draw(android.graphics.Canvas)void' target='com.masshabit.common.physics.Vector2: add(com.masshabit.common.physics.Vector2)void'/>
			<edge id='4274' source='com.masshabit.squibble.StoryScreen: init()void' target='java.io.BufferedReader: readLine()java.lang.String'/>
			<edge id='4275' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='com.masshabit.common.physics.CircleParticle: velY()F'/>
			<edge id='4276' source='com.masshabit.squibble.MenuScreen: init()void' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='4277' source='com.flurry.android.FlurryAgent: b(android.content.Context,boolean)void' target='java.util.Map: isEmpty()boolean'/>
			<edge id='4278' source='com.masshabit.squibble.free.activity.b.h: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='4279' source='com.masshabit.squibble.free.activity.a.b: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.a.d: a(java.lang.String,java.lang.String)void'/>
			<edge id='4280' source='com.flurry.android.FlurryAgent: c()void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='4281' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='java.io.File: length()J'/>
			<edge id='4282' source='com.masshabit.common.Environment: init()void' target='com.masshabit.common.Environment: lockAndUpdateThreadCondition()void'/>
			<edge id='4283' source='com.masshabit.squibble.free.activity.d: createFromParcel(android.os.Parcel)java.lang.Object' target='java.util.HashMap: init()void'/>
			<edge id='4284' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.d.c: a()com.masshabit.squibble.free.activity.d.e'/>
			<edge id='4285' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.util.Vector: indexOf(java.lang.Object)java.lang.Integer'/>
			<edge id='4286' source='com.masshabit.squibble.free.activity.g: run()void' target='com.masshabit.squibble.free.activity.Pushable: h()java.lang.Integer'/>
			<edge id='4287' source='com.masshabit.squibble.StoryScreen: init()void' target='java.util.ArrayList: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='4288' source='com.masshabit.squibble.free.activity.b.v: init(java.lang.String)void' target='com.masshabit.squibble.free.activity.b.a: init(java.lang.String)void'/>
			<edge id='4289' source='com.masshabit.squibble.free.activity.e.k: m()void' target='com.masshabit.squibble.free.activity.e.k: n()void'/>
			<edge id='4290' source='com.masshabit.squibble.HowToScreen: tweenComplete(java.lang.Object)void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4291' source='com.masshabit.squibble.free.activity.b.t: b()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='4292' source='com.masshabit.squibble.CreditsScreen: init()void' target='java.lang.Math: abs(F)F'/>
			<edge id='4293' source='com.android.vending.licensing.R$string: init()void' target='java.lang.Object: init()void'/>
			<edge id='4294' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='4295' source='com.masshabit.squibble.NPC: init()void' target='com.masshabit.squibble.NPC: calcMatrix()void'/>
			<edge id='4296' source='com.masshabit.squibble.free.activity.e: d()java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='4297' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='com.masshabit.squibble.Game: nextScreen()void'/>
			<edge id='4298' source='com.masshabit.common.resource.BitmapResourceMap: debugDump()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4299' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.k: a()android.content.Context'/>
			<edge id='4300' source='com.masshabit.squibble.free.activity.e.o: c()void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4301' source='com.masshabit.squibble.free.activity.e.q: b(java.lang.String)java.lang.String' target='com.masshabit.squibble.free.activity.e.p: a([B)[B'/>
			<edge id='4302' source='com.masshabit.squibble.free.activity.a.t: run()void' target='android.widget.Toast: setGravity(III)void'/>
			<edge id='4303' source='com.masshabit.common.physics.CollisionUtils: testRaySegment(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F' target='com.masshabit.common.physics.CollisionUtils: signedTriArea(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2)F'/>
			<edge id='4304' source='com.masshabit.squibble.GameScreen: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='4305' source='com.masshabit.squibble.WorldMapPlayer: setTarget(com.masshabit.squibble.WorldMapNode)void' target='com.masshabit.common.Deque: getSize()java.lang.Integer'/>
			<edge id='4306' source='com.masshabit.squibble.StoryScreen: draw(android.graphics.Canvas)void' target='android.graphics.Bitmap: getHeight()java.lang.Integer'/>
			<edge id='4307' source='com.masshabit.squibble.free.activity.e.k: b(android.content.Context,java.lang.String)java.lang.String' target='android.preference.PreferenceManager: getDefaultSharedPreferences(android.content.Context)android.content.SharedPreferences'/>
			<edge id='4308' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText([CIIFFLandroid.graphics.Paint)void'/>
			<edge id='4309' source='com.masshabit.common.ProfileManagerBase: init(android.content.Context)void' target='java.lang.StringBuffer: append([CII)java.lang.StringBuffer'/>
			<edge id='4310' source='com.masshabit.squibble.free.activity.b.t: b()void' target='java.lang.String: indexOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='4311' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='java.lang.String: split(java.lang.String)[Ljava.lang.String'/>
			<edge id='4312' source='com.masshabit.common.physics.ConvexHull$HalfEdge: init(com.masshabit.common.physics.ConvexHull,FFFF)void' target='com.masshabit.common.physics.Vector2: normalize()F'/>
			<edge id='4313' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.Integer: parseInt(java.lang.String)java.lang.Integer'/>
			<edge id='4314' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.lang.String,java.lang.String)void' target='java.lang.StringBuilder: init()void'/>
			<edge id='4315' source='com.masshabit.squibble.UpsellScreen: init()void' target='com.masshabit.squibble.Screen: init()void'/>
			<edge id='4316' source='com.masshabit.common.physics.CollisionDetector: circleVsHull(com.masshabit.common.physics.CircleParticle,com.masshabit.common.physics.ConvexHull,boolean)boolean' target='com.masshabit.common.physics.Vector2: lengthSq()F'/>
			<edge id='4317' source='com.masshabit.common.Level: init(java.lang.String)void' target='java.util.HashMap: init(java.lang.Integer)void'/>
			<edge id='4318' source='com.masshabit.squibble.Player: saveState(android.os.Bundle)void' target='java.lang.Integer: valueOf(java.lang.Integer)java.lang.Integer'/>
			<edge id='4319' source='com.masshabit.squibble.free.activity.b.e: clinit()void' target='java.lang.StringBuilder: init()void'/>
			<edge id='4320' source='com.masshabit.common.LevelLoader: createVisualLayer(org.w3c.dom.Element)com.masshabit.common.Layer' target='java.lang.String: equalsIgnoreCase(java.lang.String)boolean'/>
			<edge id='4321' source='com.masshabit.common.physics.CollisionDetector: clinit()void' target='com.masshabit.common.physics.Vector2: init()void'/>
			<edge id='4322' source='com.masshabit.squibble.WorldMapPlayer: init()void' target='com.masshabit.squibble.WorldMapPlayer$Location: init(com.masshabit.squibble.WorldMapPlayer)void'/>
			<edge id='4323' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.lang.String)void' target='java.lang.String: getBytes()[B'/>
			<edge id='4324' source='com.masshabit.squibble.free.activity.j: run()void' target='java.util.Timer: schedule(java.util.TimerTask,J)void'/>
			<edge id='4325' source='com.masshabit.squibble.free.activity.b.f: b()void' target='com.masshabit.squibble.free.activity.e.c: b(java.lang.String)boolean'/>
			<edge id='4326' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.net.URL: openConnection()java.net.URLConnection'/>
			<edge id='4327' source='com.flurry.android.FlurryAgent: e()[B' target='java.io.DataOutputStream: write([B)void'/>
			<edge id='4328' source='com.masshabit.common.Environment: init(com.masshabit.common.EnvironmentArgs)void' target='com.masshabit.common.Clock: init()void'/>
			<edge id='4329' source='com.masshabit.squibble.GameScreen: playerDead()void' target='java.lang.StringBuilder: append(java.lang.Integer)java.lang.StringBuilder'/>
			<edge id='4330' source='com.masshabit.squibble.Player: onInputEvent(FFLcom.masshabit.common.InputEvent)boolean' target='com.masshabit.squibble.Player: dragEnd(FF)void'/>
			<edge id='4331' source='com.masshabit.squibble.MuteEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawBitmap(android.graphics.Bitmap,FFLandroid.graphics.Paint)void'/>
			<edge id='4332' source='com.masshabit.squibble.WorldMapScreen: init()void' target='com.masshabit.squibble.WorldMapPlayer: setPosition(com.masshabit.squibble.WorldMapNode)void'/>
			<edge id='4333' source='com.masshabit.squibble.PlayerSelectPanel: checkTap(FF)boolean' target='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void'/>
			<edge id='4334' source='com.masshabit.squibble.free.activity.e.d: a(java.lang.String)void' target='android.location.LocationManager: removeUpdates(android.location.LocationListener)void'/>
			<edge id='4335' source='com.masshabit.squibble.Game$2: init(com.masshabit.squibble.Game)void' target='java.lang.Object: init()void'/>
			<edge id='4336' source='com.masshabit.squibble.NPC: update(F)void' target='com.masshabit.common.resource.AnimationState: update(F)void'/>
			<edge id='4337' source='com.masshabit.squibble.free.activity.a.f: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='4338' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.net.Socket: getOutputStream()java.io.OutputStream'/>
			<edge id='4339' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4340' source='com.masshabit.squibble.WorldMapScreen: onInputEvent(com.masshabit.common.InputEvent)void' target='java.lang.String: equals(java.lang.Object)boolean'/>
			<edge id='4341' source='com.flurry.android.FlurryAgent: c(android.content.Context)android.location.Location' target='android.content.Context: checkCallingOrSelfPermission(java.lang.String)java.lang.Integer'/>
			<edge id='4342' source='com.masshabit.squibble.free.activity.e.f: onLocationChanged(android.location.Location)void' target='android.location.Location: getLatitude()D'/>
			<edge id='4343' source='com.masshabit.squibble.free.activity.a.m: d()void' target='java.lang.String: substring(java.lang.Integer)java.lang.String'/>
			<edge id='4344' source='com.masshabit.squibble.free.activity.a.q: g()android.content.Intent' target='com.masshabit.squibble.free.activity.a.q: a()android.content.Context'/>
			<edge id='4345' source='com.masshabit.squibble.WorldMapPlayer: update(F)void' target='com.masshabit.common.resource.AnimationState: update(F)void'/>
			<edge id='4346' source='com.masshabit.squibble.WorldMapScreen: destroy()void' target='com.masshabit.common.Level: destroy()void'/>
			<edge id='4347' source='com.masshabit.common.License$MyCallback: applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4348' source='com.masshabit.common.resource.AnimationLoader: loadTrack(java.io.BufferedReader,com.masshabit.common.resource.BitmapResourceMap)com.masshabit.common.resource.Animation$Track' target='com.masshabit.common.resource.BitmapResourceMap: load(java.lang.String)java.lang.Integer'/>
			<edge id='4349' source='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: save()java.lang.Integer'/>
			<edge id='4350' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.net.HttpURLConnection: setReadTimeout(java.lang.Integer)void'/>
			<edge id='4351' source='com.masshabit.squibble.Player: lookupShootSpeed(F)F' target='java.lang.Math: pow(DD)D'/>
			<edge id='4352' source='com.masshabit.common.Environment: draw(android.graphics.Canvas)void' target='com.masshabit.squibble.Game: draw(android.graphics.Canvas)void'/>
			<edge id='4353' source='com.masshabit.common.Clock: getTime()com.masshabit.common.Clock$Time' target='com.masshabit.common.Clock$Time: init(com.masshabit.common.Clock,J)void'/>
			<edge id='4354' source='com.masshabit.squibble.Player: restoreState(android.os.Bundle)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4355' source='com.masshabit.squibble.HidableEntity: draw(android.graphics.Canvas)void' target='com.masshabit.common.entity.StaticEntity: draw(android.graphics.Canvas)void'/>
			<edge id='4356' source='com.masshabit.squibble.free.activity.e.o: b()void' target='java.lang.String: trim()java.lang.String'/>
			<edge id='4357' source='com.masshabit.squibble.free.activity.e.n: a(java.lang.String,java.util.Map,org.apache.http.util.ByteArrayBuffer)void' target='java.util.Set: iterator()java.util.Iterator'/>
			<edge id='4358' source='com.masshabit.squibble.free.activity.e.b: init()void' target='java.lang.Object: init()void'/>
			<edge id='4359' source='com.masshabit.squibble.Player$Hand: init(com.masshabit.squibble.Player)void' target='com.masshabit.common.physics.SpringConstraint: init(com.masshabit.common.physics.Particle,com.masshabit.common.physics.Particle,FFFFI)void'/>
			<edge id='4360' source='com.masshabit.common.ProfileManagerBase: saveProfile()void' target='junit.framework.Assert: assertTrue(boolean)void'/>
			<edge id='4361' source='com.masshabit.common.resource.ResourceMap: debugDump()void' target='java.util.Iterator: next()java.lang.Object'/>
			<edge id='4362' source='com.masshabit.squibble.free.activity.h: isRunningServices(android.content.Context)boolean' target='java.lang.String: init([BII)void'/>
			<edge id='4363' source='com.masshabit.squibble.WorldMapHud: init()void' target='android.graphics.Paint: init()void'/>
			<edge id='4364' source='com.masshabit.squibble.free.activity.a.u: c()boolean' target='com.masshabit.squibble.free.activity.e.l: start()void'/>
			<edge id='4365' source='com.masshabit.squibble.free.activity.Pushable: init(java.util.HashMap)void' target='java.util.HashMap: init()void'/>
			<edge id='4366' source='com.masshabit.squibble.MainActivity: onStop()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4367' source='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void' target='com.flurry.android.FlurryAgent: a(java.lang.String)java.lang.String'/>
			<edge id='4368' source='com.masshabit.squibble.StoryScreen: init()void' target='com.masshabit.common.resource.BitmapResourceMap: init(java.lang.Integer)void'/>
			<edge id='4369' source='com.masshabit.common.physics.Physics: update(F)void' target='java.util.ArrayList: size()java.lang.Integer'/>
			<edge id='4370' source='com.masshabit.common.LevelLoader: createEntity(org.w3c.dom.Element,com.masshabit.common.LevelLoader$MinBounds)com.masshabit.common.entity.Entity' target='com.masshabit.common.physics.Vector2: init(FF)void'/>
			<edge id='4371' source='com.masshabit.common.tween.Ease: clinit()void' target='com.masshabit.common.tween.Ease$3: init()void'/>
			<edge id='4372' source='com.masshabit.squibble.free.activity.a.Abstract: a(java.lang.String)java.lang.String' target='java.util.HashMap: get(java.lang.Object)java.lang.Object'/>
			<edge id='4373' source='com.masshabit.squibble.free.activity.e.r: a(java.io.InputStream)java.util.HashMap' target='javax.xml.parsers.DocumentBuilderFactory: newDocumentBuilder()javax.xml.parsers.DocumentBuilder'/>
			<edge id='4374' source='com.masshabit.squibble.free.activity.e.k: a([Ljava.lang.String)void' target='java.util.Vector: toArray([Ljava.lang.Object)[Ljava.lang.Object'/>
			<edge id='4375' source='com.masshabit.squibble.free.activity.w: onReceivedError(android.webkit.WebView,ILjava.lang.String,java.lang.String)void' target='java.lang.StringBuilder: append(java.lang.String)java.lang.StringBuilder'/>
			<edge id='4376' source='com.masshabit.squibble.free.activity.e.i: a(java.lang.String,java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4377' source='com.masshabit.squibble.free.activity.h: a(com.masshabit.squibble.free.activity.c)void' target='android.widget.ProgressBar: init(android.content.Context,android.util.AttributeSet,java.lang.Integer)void'/>
			<edge id='4378' source='com.flurry.android.FlurryAgent: onEvent(java.lang.String,java.util.Map)void' target='com.flurry.android.FlurryAgent: a(java.lang.String,java.util.Map)void'/>
			<edge id='4379' source='com.masshabit.common.physics.SpringConstraint: getLength()F' target='java.lang.Math: sqrt(D)D'/>
			<edge id='4380' source='com.masshabit.common.InputEvent: setEvent(android.view.MotionEvent)void' target='android.view.MotionEvent: getEventTime()J'/>
			<edge id='4381' source='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract' target='com.masshabit.squibble.free.activity.a.d: init(java.lang.String)void'/>
			<edge id='4382' source='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: drawText(java.lang.String,FFLandroid.graphics.Paint)void'/>
			<edge id='4383' source='com.masshabit.squibble.PlayerSelectPanel: setSelected(java.lang.Integer)void' target='com.masshabit.squibble.ProfileManager: instance()com.masshabit.common.ProfileManagerBase'/>
			<edge id='4384' source='com.masshabit.squibble.PlayerSelectPanel: confirmDeleteYes()void' target='com.masshabit.squibble.Profile: reset()void'/>
			<edge id='4385' source='com.masshabit.squibble.free.activity.e.o: b(java.lang.String,java.lang.String)boolean' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4386' source='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Vector2,boolean)void' target='com.masshabit.common.physics.SegmentParticle: init(com.masshabit.common.physics.Physics,FFFFZ)void'/>
			<edge id='4387' source='com.masshabit.squibble.PlayerSelectPanel: draw(android.graphics.Canvas)void' target='android.graphics.Canvas: restore()void'/>
			<edge id='4388' source='com.masshabit.squibble.WorldMapNode$Connection: init(java.lang.String,boolean)void' target='java.lang.Object: init()void'/>
			<edge id='4389' source='com.masshabit.common.physics.Particle: project(com.masshabit.common.physics.Vector2,com.masshabit.common.physics.Interval)void' target='com.masshabit.common.physics.Vector2: dot(com.masshabit.common.physics.Vector2)F'/>
			<edge id='4390' source='com.masshabit.squibble.free.activity.e.n: b(java.lang.String,java.lang.String)java.io.File' target='java.io.DataInputStream: close()void'/>
			<edge id='4391' source='com.android.vending.licensing.LicenseValidator: verify(java.security.PublicKey,ILjava.lang.String,java.lang.String)void' target='android.text.TextUtils: isEmpty(java.lang.CharSequence)boolean'/>
			<edge id='4392' source='com.masshabit.squibble.free.activity.e.k: j()void' target='com.masshabit.squibble.free.activity.e.k: a(java.lang.String)java.lang.String'/>
			<edge id='4393' source='com.masshabit.squibble.PlayerSelectPanel: enterNameNo()void' target='android.util.Log: d(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4394' source='com.masshabit.squibble.free.activity.c: init(java.util.HashMap)void' target='com.masshabit.squibble.free.activity.a.b: a(java.lang.String)com.masshabit.squibble.free.activity.a.Abstract'/>
			<edge id='4395' source='com.android.vending.licensing.ServerManagedPolicy: setMaxRetries(java.lang.String)void' target='android.util.Log: w(java.lang.String,java.lang.String)java.lang.Integer'/>
			<edge id='4396' source='com.masshabit.squibble.free.activity.a.q: d()void' target='java.lang.String: length()java.lang.Integer'/>
			<edge id='4397' source='com.masshabit.squibble.free.activity.b.j: b(java.lang.String)void' target='com.masshabit.squibble.free.activity.e.p: a(java.lang.Integer)java.lang.String'/>
			<edge id='4398' source='com.flurry.android.Flog: init()void' target='java.lang.Object: init()void'/>
			<edge id='4399' source='com.masshabit.squibble.PlayerSelectPanel: setVisible(boolean)void' target='java.lang.Math: abs(F)F'/>
			<edge id='4400' source='com.masshabit.squibble.free.activity.e.q: d(java.lang.String)boolean' target='java.io.InputStream: read([B)java.lang.Integer'/>
			<edge id='4401' source='com.masshabit.common.Delay: restoreState(java.lang.String,android.os.Bundle)void' target='android.os.Bundle: getFloat(java.lang.String,F)F'/>
			<edge id='4402' source='com.masshabit.squibble.free.activity.e.b: a(java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4403' source='com.masshabit.squibble.MainButtonPanel: checkTap(FF)boolean' target='android.content.Intent: setData(android.net.Uri)android.content.Intent'/>
			<edge id='4404' source='com.masshabit.common.Globals: init()void' target='com.masshabit.common.License: getStatus()java.lang.Integer'/>
			<edge id='4405' source='com.masshabit.squibble.Screen: loadSound(ILjava.lang.String)void' target='android.content.Context: getAssets()android.content.res.AssetManager'/>
			<edge id='4406' source='com.masshabit.squibble.free.activity.d.b: init(com.masshabit.squibble.free.activity.d.a,com.masshabit.squibble.free.activity.d.d)void' target='java.lang.Object: init()void'/>
			<edge id='4407' source='com.masshabit.common.Camera: restoreState(android.os.Bundle)void' target='android.os.Bundle: getFloat(java.lang.String,F)F'/>
			<edge id='4408' source='com.flurry.android.FlurryAgent: b(java.lang.String,java.util.Map)[B' target='java.util.Map: entrySet()java.util.Set'/>
			<edge id='4409' source='com.masshabit.squibble.free.activity.h: onCreate(android.os.Bundle)void' target='com.masshabit.squibble.free.activity.h: startServiceIfMust(android.content.Context)void'/>
			<edge id='4410' source='com.masshabit.common.entity.AnimatedEntity: update(F)void' target='com.masshabit.common.entity.AnimatedEntity: updateChildren(F)void'/>
			<edge id='4411' source='com.masshabit.common.LevelLoader: load(java.lang.String)void' target='java.lang.StringBuilder: toString()java.lang.String'/>
			<edge id='4412' source='com.masshabit.squibble.free.activity.v: onReceivedTitle(android.webkit.WebView,java.lang.String)void' target='com.masshabit.squibble.free.activity.h: setTitle(java.lang.CharSequence)void'/>
			<edge id='4413' source='com.masshabit.squibble.free.activity.b.c: b()void' target='java.lang.StringBuilder: init()void'/>
		</edges>
	</graph>
</gexf>